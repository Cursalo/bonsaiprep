{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Navigate,Outlet}from'react-router-dom';import{supabase}from'../supabaseClient';// Adjust path as necessary\nimport{CircularProgress,Box}from'@mui/material';import{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=()=>{const[session,setSession]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{const getSession=async()=>{const{data:{session}}=await supabase.auth.getSession();setSession(session);setLoading(false);};getSession();const{data:authListener}=supabase.auth.onAuthStateChange((_event,session)=>{setSession(session);// No need to setLoading(false) here again as getSession handles initial load\n});return()=>{authListener===null||authListener===void 0?void 0:authListener.subscription.unsubscribe();};},[]);if(loading){return/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",minHeight:\"100vh\",children:/*#__PURE__*/_jsx(CircularProgress,{})});}return session?/*#__PURE__*/_jsx(Outlet,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});};export default ProtectedRoute;","map":{"version":3,"names":["React","useEffect","useState","Navigate","Outlet","supabase","CircularProgress","Box","jsx","_jsx","ProtectedRoute","session","setSession","loading","setLoading","getSession","data","auth","authListener","onAuthStateChange","_event","subscription","unsubscribe","display","justifyContent","alignItems","minHeight","children","to","replace"],"sources":["/Users/gerardo/Downloads/Bonsaito/src/components/ProtectedRoute.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { supabase } from '../supabaseClient'; // Adjust path as necessary\nimport { Session } from '@supabase/supabase-js';\nimport { CircularProgress, Box } from '@mui/material';\n\nconst ProtectedRoute: React.FC = () => {\n  const [session, setSession] = useState<Session | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getSession = async () => {\n      const { data: { session } } = await supabase.auth.getSession();\n      setSession(session);\n      setLoading(false);\n    };\n\n    getSession();\n\n    const { data: authListener } = supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session);\n      // No need to setLoading(false) here again as getSession handles initial load\n    });\n\n    return () => {\n      authListener?.subscription.unsubscribe();\n    };\n  }, []);\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"100vh\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return session ? <Outlet /> : <Navigate to=\"/login\" replace />;\n};\n\nexport default ProtectedRoute; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,QAAQ,CAAEC,MAAM,KAAQ,kBAAkB,CACnD,OAASC,QAAQ,KAAQ,mBAAmB,CAAE;AAE9C,OAASC,gBAAgB,CAAEC,GAAG,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEtD,KAAM,CAAAC,cAAwB,CAAGA,CAAA,GAAM,CACrC,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAiB,IAAI,CAAC,CAC5D,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAE5CD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAc,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,KAAM,CAAEC,IAAI,CAAE,CAAEL,OAAQ,CAAE,CAAC,CAAG,KAAM,CAAAN,QAAQ,CAACY,IAAI,CAACF,UAAU,CAAC,CAAC,CAC9DH,UAAU,CAACD,OAAO,CAAC,CACnBG,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAEDC,UAAU,CAAC,CAAC,CAEZ,KAAM,CAAEC,IAAI,CAAEE,YAAa,CAAC,CAAGb,QAAQ,CAACY,IAAI,CAACE,iBAAiB,CAAC,CAACC,MAAM,CAAET,OAAO,GAAK,CAClFC,UAAU,CAACD,OAAO,CAAC,CACnB;AACF,CAAC,CAAC,CAEF,MAAO,IAAM,CACXO,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAEG,YAAY,CAACC,WAAW,CAAC,CAAC,CAC1C,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,GAAIT,OAAO,CAAE,CACX,mBACEJ,IAAA,CAACF,GAAG,EAACgB,OAAO,CAAC,MAAM,CAACC,cAAc,CAAC,QAAQ,CAACC,UAAU,CAAC,QAAQ,CAACC,SAAS,CAAC,OAAO,CAAAC,QAAA,cAC/ElB,IAAA,CAACH,gBAAgB,GAAE,CAAC,CACjB,CAAC,CAEV,CAEA,MAAO,CAAAK,OAAO,cAAGF,IAAA,CAACL,MAAM,GAAE,CAAC,cAAGK,IAAA,CAACN,QAAQ,EAACyB,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CAChE,CAAC,CAED,cAAe,CAAAnB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}