{"ast":null,"code":"var _jsxFileName = \"/Users/gerardo/Downloads/Bonsaito/src/components/OnboardingFlow.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Container, Typography, Button, TextField, Stepper, Step, StepLabel, Paper, Grid, Autocomplete, FormControl, FormControlLabel, RadioGroup, Radio, Slider, CircularProgress, Checkbox } from '@mui/material';\nimport { useDropzone } from 'react-dropzone';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport { useSpring, animated } from 'react-spring';\nimport { supabase } from '../supabaseClient';\nimport SubscriptionPlans from './SubscriptionPlans';\nimport { generateQuestionsFromMistakes } from '../services/geminiPdfService';\nimport { toast } from 'react-toastify';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\n// Country data with flags (simplified version for this example)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst countries = [{\n  code: 'US',\n  label: 'United States',\n  flag: 'ðŸ‡ºðŸ‡¸'\n}, {\n  code: 'CA',\n  label: 'Canada',\n  flag: 'ðŸ‡¨ðŸ‡¦'\n}, {\n  code: 'GB',\n  label: 'United Kingdom',\n  flag: 'ðŸ‡¬ðŸ‡§'\n}, {\n  code: 'AU',\n  label: 'Australia',\n  flag: 'ðŸ‡¦ðŸ‡º'\n}, {\n  code: 'IN',\n  label: 'India',\n  flag: 'ðŸ‡®ðŸ‡³'\n}, {\n  code: 'CN',\n  label: 'China',\n  flag: 'ðŸ‡¨ðŸ‡³'\n}, {\n  code: 'JP',\n  label: 'Japan',\n  flag: 'ðŸ‡¯ðŸ‡µ'\n}, {\n  code: 'DE',\n  label: 'Germany',\n  flag: 'ðŸ‡©ðŸ‡ª'\n}, {\n  code: 'FR',\n  label: 'France',\n  flag: 'ðŸ‡«ðŸ‡·'\n}, {\n  code: 'IT',\n  label: 'Italy',\n  flag: 'ðŸ‡®ðŸ‡¹'\n}, {\n  code: 'ES',\n  label: 'Spain',\n  flag: 'ðŸ‡ªðŸ‡¸'\n}, {\n  code: 'MX',\n  label: 'Mexico',\n  flag: 'ðŸ‡²ðŸ‡½'\n}, {\n  code: 'BR',\n  label: 'Brazil',\n  flag: 'ðŸ‡§ðŸ‡·'\n}, {\n  code: 'ZA',\n  label: 'South Africa',\n  flag: 'ðŸ‡¿ðŸ‡¦'\n}, {\n  code: 'RU',\n  label: 'Russia',\n  flag: 'ðŸ‡·ðŸ‡º'\n}\n// Add more countries as needed\n];\n\n// City data (would be fetched based on country selection in a real implementation)\nconst getCitiesByCountry = countryCode => {\n  const citiesByCountry = {\n    'US': ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Philadelphia'],\n    'CA': ['Toronto', 'Montreal', 'Vancouver', 'Calgary', 'Ottawa', 'Edmonton'],\n    'GB': ['London', 'Birmingham', 'Manchester', 'Glasgow', 'Liverpool', 'Edinburgh'],\n    'AU': ['Sydney', 'Melbourne', 'Brisbane', 'Perth', 'Adelaide', 'Gold Coast'],\n    'IN': ['Mumbai', 'Delhi', 'Bangalore', 'Hyderabad', 'Chennai', 'Kolkata']\n    // Add more cities as needed\n  };\n  return citiesByCountry[countryCode] || [];\n};\n\n// Motivation options\nconst motivations = ['Get into a top college', 'Qualify for scholarships', 'Improve overall academic standing', 'Boost Math score', 'Boost Reading/Writing score', 'Personal goal', 'Parent requirement', 'School requirement', 'Other'];\n// Gradients for each step\nconst gradients = ['linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)',\n// Step 1\n'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)',\n// Step 2\n'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)',\n// Step 3\n'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)',\n// Step 4\n'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)',\n// Step 5\n'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)',\n// Step 6\n'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)',\n// Step 7\n'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)',\n// Step 8\n'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)' // Step 9 (Subscription)\n];\n\n// Custom styles for better text readability based on dark theme best practices\nconst textStyles = {\n  heading: {\n    color: 'rgba(255, 255, 255, 0.87)',\n    // High-emphasis text at 87% opacity\n    textShadow: '0 1px 2px rgba(0,0,0,0.2)'\n  },\n  subheading: {\n    color: 'rgba(255, 255, 255, 0.87)',\n    // High-emphasis text at 87% opacity\n    opacity: 0.9\n  },\n  body: {\n    color: 'rgba(255, 255, 255, 0.7)' // Medium-emphasis text at 70% opacity\n  },\n  label: {\n    color: 'rgba(255, 255, 255, 0.87)',\n    // High-emphasis text at 87% opacity\n    fontWeight: 500\n  },\n  secondary: {\n    color: 'rgba(255, 255, 255, 0.6)' // Secondary text at 60% opacity\n  },\n  disabled: {\n    color: 'rgba(255, 255, 255, 0.38)' // Disabled text at 38% opacity\n  },\n  accent: {\n    color: 'rgba(136, 212, 152, 0.9)' // Desaturated accent color\n  }\n};\nconst OnboardingFlow = () => {\n  _s();\n  const navigate = useNavigate();\n  const [activeStep, setActiveStep] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [cities, setCities] = useState([]);\n  const [direction, setDirection] = useState('forward');\n  const [processingReport, setProcessingReport] = useState(false);\n\n  // Form data\n  const [data, setData] = useState({\n    firstName: '',\n    lastName: '',\n    age: '',\n    country: null,\n    city: null,\n    satScore: '',\n    targetSatScore: 1200,\n    motivation: '',\n    scoreReport: '',\n    hasSatScoreReport: false,\n    generatedQuestions: [],\n    scoreReportFile: undefined\n  });\n\n  // Validation states\n  const [errors, setErrors] = useState({\n    firstName: false,\n    lastName: false,\n    age: false,\n    country: false,\n    city: false,\n    satScore: false,\n    motivation: false\n  });\n\n  // Animation for step transitions\n  const fadeProps = useSpring({\n    from: {\n      opacity: 0,\n      transform: `translateX(${direction === 'forward' ? '50px' : '-50px'})`\n    },\n    to: {\n      opacity: 1,\n      transform: 'translateX(0px)'\n    },\n    config: {\n      tension: 280,\n      friction: 60\n    }\n  });\n\n  // Create a theme override for form inputs to ensure proper contrast\n  const darkTheme = createTheme({\n    palette: {\n      mode: 'dark',\n      primary: {\n        main: 'rgba(136, 212, 152, 0.9)'\n      },\n      text: {\n        primary: 'rgba(255, 255, 255, 0.87)',\n        secondary: 'rgba(255, 255, 255, 0.6)'\n      },\n      background: {\n        paper: 'rgba(30, 30, 30, 0.8)',\n        default: 'rgba(18, 18, 18, 0.95)'\n      }\n    },\n    components: {\n      MuiInputBase: {\n        styleOverrides: {\n          input: {\n            color: 'rgba(255, 255, 255, 0.87)'\n          },\n          root: {\n            backgroundColor: 'rgba(30, 30, 30, 0.4)'\n          }\n        }\n      },\n      MuiOutlinedInput: {\n        styleOverrides: {\n          root: {\n            '&:hover .MuiOutlinedInput-notchedOutline': {\n              borderColor: 'rgba(136, 212, 152, 0.5)'\n            },\n            '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n              borderColor: 'rgba(136, 212, 152, 0.8)'\n            }\n          },\n          notchedOutline: {\n            borderColor: 'rgba(255, 255, 255, 0.23)'\n          }\n        }\n      },\n      MuiFormLabel: {\n        styleOverrides: {\n          root: {\n            color: 'rgba(255, 255, 255, 0.6)',\n            '&.Mui-focused': {\n              color: 'rgba(136, 212, 152, 0.8)'\n            }\n          }\n        }\n      }\n    }\n  });\n\n  // Load saved progress from localStorage\n  useEffect(() => {\n    const savedData = localStorage.getItem('onboardingData');\n    const savedStep = localStorage.getItem('onboardingStep');\n    if (savedData) {\n      setData(JSON.parse(savedData));\n    }\n    if (savedStep) {\n      setActiveStep(parseInt(savedStep, 10));\n    }\n  }, []);\n\n  // Save progress to localStorage whenever data or step changes\n  useEffect(() => {\n    localStorage.setItem('onboardingData', JSON.stringify(data));\n    localStorage.setItem('onboardingStep', activeStep.toString());\n  }, [data, activeStep]);\n\n  // Update cities when country changes\n  useEffect(() => {\n    if (data.country) {\n      const countryData = countries.find(c => c.label === data.country);\n      if (countryData) {\n        setCities(getCitiesByCountry(countryData.code));\n      }\n    }\n  }, [data.country]);\n  const validateStep = () => {\n    switch (activeStep) {\n      case 0:\n        // First Name & Last Name\n        const firstNameError = !data.firstName.trim();\n        const lastNameError = !data.lastName.trim();\n        setErrors({\n          ...errors,\n          firstName: firstNameError,\n          lastName: lastNameError\n        });\n        return !firstNameError && !lastNameError;\n      case 1:\n        // Age\n        const ageError = !data.age || isNaN(parseInt(data.age)) || parseInt(data.age) < 13 || parseInt(data.age) > 100;\n        setErrors({\n          ...errors,\n          age: ageError\n        });\n        return !ageError;\n      case 2:\n        // Country & City\n        const countryError = !data.country;\n        const cityError = !data.city;\n        setErrors({\n          ...errors,\n          country: countryError,\n          city: cityError\n        });\n        return !countryError && !cityError;\n      case 3:\n        // SAT Score\n        if (data.hasSatScoreReport) return true; // Skip validation if they'll upload/paste later\n        const satScoreError = !data.satScore || isNaN(parseInt(data.satScore)) || parseInt(data.satScore) < 400 || parseInt(data.satScore) > 1600;\n        setErrors({\n          ...errors,\n          satScore: satScoreError\n        });\n        return !satScoreError;\n      case 4:\n        // Target SAT Score\n        return true;\n      // Always valid since slider has defaults\n\n      case 5:\n        // Motivation\n        const motivationError = !data.motivation;\n        setErrors({\n          ...errors,\n          motivation: motivationError\n        });\n        return !motivationError;\n      case 6:\n        // SAT Score Report\n        return true;\n      // Optional, so always valid\n\n      case 7:\n        // Review\n        return true;\n      // Just a review, so always valid\n\n      case 8:\n        // Subscription Plan\n        return !!data.subscriptionPlan;\n      // Valid if a plan is selected\n\n      default:\n        return true;\n    }\n  };\n  const handleNext = async () => {\n    if (!validateStep()) return;\n    setDirection('forward');\n\n    // Special handling for the score report step to generate questions\n    if (activeStep === 6) {\n      var _data$generatedQuesti, _data$generatedQuesti2;\n      if (data.scoreReport && !((_data$generatedQuesti = data.generatedQuestions) !== null && _data$generatedQuesti !== void 0 && _data$generatedQuesti.length) || data.scoreReportFile && !((_data$generatedQuesti2 = data.generatedQuestions) !== null && _data$generatedQuesti2 !== void 0 && _data$generatedQuesti2.length)) {\n        try {\n          setProcessingReport(true);\n\n          // Generate questions from the score report text or file\n          let questions;\n          if (data.scoreReportFile) {\n            questions = await generateQuestionsFromMistakes(data.scoreReportFile);\n          } else if (data.scoreReport) {\n            questions = await generateQuestionsFromMistakes(data.scoreReport);\n          }\n          setData({\n            ...data,\n            generatedQuestions: questions\n          });\n          setProcessingReport(false);\n        } catch (error) {\n          console.error(\"Error generating questions:\", error);\n          setProcessingReport(false);\n        }\n      }\n    }\n    setActiveStep(prevStep => prevStep + 1);\n  };\n  const handleBack = () => {\n    setDirection('backward');\n    setActiveStep(prevStep => prevStep - 1);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setData({\n      ...data,\n      [name]: value\n    });\n  };\n  const handleSubmit = async () => {\n    console.log(\"Starting onboarding submission process\");\n    setLoading(true);\n    try {\n      // Get current user\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      console.log(\"Current user:\", user);\n      if (!user) {\n        toast.error('You must be logged in to complete onboarding');\n        return;\n      }\n\n      // Check if user already has an onboarding entry\n      console.log(\"Checking for existing onboarding entry for user:\", user.id);\n      let existingData = null;\n      try {\n        const response = await supabase.from('user_onboarding').select('id').eq('user_id', user.id).single();\n        existingData = response.data;\n        const checkError = response.error;\n        console.log(\"Existing onboarding data check result:\", {\n          existingData,\n          checkError\n        });\n        if (checkError && checkError.code !== 'PGRST116') {\n          console.error('Error checking for existing onboarding record:', checkError);\n          toast.error('Error saving your information');\n          setLoading(false);\n          return;\n        }\n      } catch (checkError) {\n        console.error('Exception checking for existing onboarding record:', checkError);\n        toast.error('Error connecting to the database');\n        setLoading(false);\n        return;\n      }\n\n      // Store file if it exists\n      let fileUrl = data.scoreReportUrl;\n      if (data.scoreReportFile && !data.scoreReportUrl) {\n        const filePath = `${user.id}/${Date.now()}_${data.scoreReportFile.name}`;\n        const {\n          error: storageError\n        } = await supabase.storage.from('score-reports').upload(filePath, data.scoreReportFile);\n        if (storageError) {\n          console.error('Error uploading file:', storageError);\n          toast.error('Error uploading your score report');\n        } else {\n          const {\n            data: {\n              publicUrl\n            }\n          } = supabase.storage.from('score-reports').getPublicUrl(filePath);\n          fileUrl = publicUrl;\n        }\n      }\n\n      // Store onboarding data to Supabase\n      const onboardingData = {\n        user_id: user.id,\n        first_name: data.firstName,\n        last_name: data.lastName,\n        age: parseInt(data.age),\n        country: data.country || '',\n        city: data.city || '',\n        sat_score: data.satScore ? parseInt(data.satScore) : null,\n        target_sat_score: data.targetSatScore,\n        motivation: data.motivation,\n        score_report_text: data.scoreReport,\n        score_report_url: fileUrl,\n        has_score_report: data.hasSatScoreReport,\n        subscription_plan: data.subscriptionPlan || 'free'\n      };\n\n      // Insert or update user onboarding data\n      let dbError;\n      if (existingData) {\n        const {\n          error\n        } = await supabase.from('user_onboarding').update(onboardingData).eq('id', existingData.id);\n        dbError = error;\n      } else {\n        const {\n          error\n        } = await supabase.from('user_onboarding').insert([onboardingData]);\n        dbError = error;\n      }\n      if (dbError) {\n        console.error('Error saving onboarding data:', dbError);\n        toast.error('Error saving your information');\n        setLoading(false);\n        return;\n      }\n\n      // Generate practice questions if there's a score report\n      if (data.scoreReport) {\n        try {\n          // Generate practice questions from the score report text\n          const questions = await generateQuestionsFromMistakes(data.scoreReport);\n          if (questions && questions.length > 0) {\n            // Store questions in practice_questions table\n            const {\n              error: questionsError\n            } = await supabase.from('practice_questions').insert(questions.map(q => ({\n              user_id: user.id,\n              question_data: q,\n              source: 'onboarding',\n              completed: false\n            })));\n            if (questionsError) {\n              console.error('Error storing practice questions:', questionsError);\n            } else {\n              console.log(`Successfully created ${questions.length} practice questions for the user`);\n            }\n          }\n        } catch (aiError) {\n          console.error('Error generating practice questions:', aiError);\n        }\n      }\n      toast.success('Onboarding completed successfully!');\n\n      // Redirect to dashboard - add delay to ensure toast is visible and state is updated\n      setTimeout(() => {\n        // Force navigation with window.location for a full page refresh in case of router issues\n        window.location.href = '/dashboard';\n      }, 1000);\n      return; // Early return to prevent further execution\n    } catch (error) {\n      console.error('Error in onboarding submission:', error);\n      toast.error('Error saving your information');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add a useDropzone hook for file handling\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: {\n      'application/pdf': ['.pdf']\n    },\n    onDrop: acceptedFiles => {\n      if (acceptedFiles.length > 0) {\n        setData({\n          ...data,\n          scoreReportFile: acceptedFiles[0]\n        });\n      }\n    }\n  });\n\n  // Render different step content based on activeStep\n  const getStepContent = () => {\n    switch (activeStep) {\n      case 0:\n        // Name\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              align: \"center\",\n              gutterBottom: true,\n              sx: textStyles.heading,\n              children: \"Let's get to know you better\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              align: \"center\",\n              paragraph: true,\n              sx: textStyles.body,\n              children: \"We'll personalize your learning experience based on your information.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"First Name\",\n              name: \"firstName\",\n              value: data.firstName,\n              onChange: handleInputChange,\n              error: errors.firstName,\n              helperText: errors.firstName ? 'First name is required' : '',\n              variant: \"outlined\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Last Name\",\n              name: \"lastName\",\n              value: data.lastName,\n              onChange: handleInputChange,\n              error: errors.lastName,\n              helperText: errors.lastName ? 'Last name is required' : '',\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 11\n        }, this);\n      case 1:\n        // Age\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              align: \"center\",\n              gutterBottom: true,\n              sx: textStyles.heading,\n              children: \"How old are you?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              align: \"center\",\n              paragraph: true,\n              sx: textStyles.body,\n              children: \"We use this to customize content appropriate for your age group.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            sx: {\n              mx: 'auto'\n            },\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Age\",\n              name: \"age\",\n              type: \"number\",\n              value: data.age,\n              onChange: handleInputChange,\n              error: errors.age,\n              helperText: errors.age ? 'Please enter a valid age (13-100)' : '',\n              variant: \"outlined\",\n              InputProps: {\n                inputProps: {\n                  min: 13,\n                  max: 100\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 11\n        }, this);\n      case 2:\n        // Location\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              align: \"center\",\n              gutterBottom: true,\n              sx: textStyles.heading,\n              children: \"Where are you located?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              align: \"center\",\n              paragraph: true,\n              sx: textStyles.body,\n              children: \"We'll use this to provide region-specific resources and recommendations.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              options: countries,\n              getOptionLabel: option => `${option.flag} ${option.label}`,\n              onChange: (_, newValue) => {\n                setData({\n                  ...data,\n                  country: newValue ? newValue.label : null,\n                  city: null // Reset city when country changes\n                });\n              },\n              value: countries.find(c => c.label === data.country) || null,\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                ...params,\n                label: \"Country\",\n                error: errors.country,\n                helperText: errors.country ? 'Country is required' : '',\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              options: cities,\n              getOptionLabel: option => option,\n              onChange: (_, newValue) => {\n                setData({\n                  ...data,\n                  city: newValue\n                });\n              },\n              value: data.city,\n              disabled: !data.country,\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                ...params,\n                label: \"City\",\n                error: errors.city,\n                helperText: errors.city ? 'City is required' : '',\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 640,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 11\n        }, this);\n      case 3:\n        // Current SAT Score\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              align: \"center\",\n              gutterBottom: true,\n              sx: textStyles.heading,\n              children: \"What's your current SAT score?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              align: \"center\",\n              paragraph: true,\n              sx: textStyles.body,\n              children: \"If you haven't taken the SAT yet or don't know your score, we'll help you upload or enter it later.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: data.hasSatScoreReport,\n                onChange: e => setData({\n                  ...data,\n                  hasSatScoreReport: e.target.checked\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 19\n              }, this),\n              label: \"I'll upload/paste my SAT score report later\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 8,\n            sx: {\n              mx: 'auto'\n            },\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"SAT Score\",\n              name: \"satScore\",\n              type: \"number\",\n              value: data.satScore,\n              onChange: handleInputChange,\n              error: errors.satScore && !data.hasSatScoreReport,\n              helperText: errors.satScore && !data.hasSatScoreReport ? 'Please enter a valid SAT score (400-1600)' : '',\n              variant: \"outlined\",\n              disabled: data.hasSatScoreReport,\n              InputProps: {\n                inputProps: {\n                  min: 400,\n                  max: 1600\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 11\n        }, this);\n      case 4:\n        // Target SAT Score\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              align: \"center\",\n              gutterBottom: true,\n              sx: textStyles.heading,\n              children: \"What's your target SAT score?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              align: \"center\",\n              paragraph: true,\n              sx: textStyles.body,\n              children: \"Setting a goal helps us customize your learning path.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 700,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 8,\n            sx: {\n              mx: 'auto'\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                px: 3\n              },\n              children: /*#__PURE__*/_jsxDEV(Slider, {\n                value: data.targetSatScore,\n                min: 1000,\n                max: 1600,\n                step: 10,\n                marks: [{\n                  value: 1000,\n                  label: '1000'\n                }, {\n                  value: 1200,\n                  label: '1200'\n                }, {\n                  value: 1400,\n                  label: '1400'\n                }, {\n                  value: 1600,\n                  label: '1600'\n                }],\n                onChange: (_, newValue) => setData({\n                  ...data,\n                  targetSatScore: newValue\n                }),\n                valueLabelDisplay: \"on\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 706,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sx: {\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                ...textStyles.subheading,\n                color: '#88d498'\n              },\n              children: [\"Target Score: \", data.targetSatScore]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sx: {\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              sx: textStyles.body,\n              children: \"Or choose a preset target:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: data.targetSatScore === 1000 ? \"contained\" : \"outlined\",\n                sx: {\n                  mx: 1\n                },\n                onClick: () => setData({\n                  ...data,\n                  targetSatScore: 1000\n                }),\n                children: \"1000\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 734,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: data.targetSatScore === 1200 ? \"contained\" : \"outlined\",\n                sx: {\n                  mx: 1\n                },\n                onClick: () => setData({\n                  ...data,\n                  targetSatScore: 1200\n                }),\n                children: \"1200\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 741,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: data.targetSatScore === 1400 ? \"contained\" : \"outlined\",\n                sx: {\n                  mx: 1\n                },\n                onClick: () => setData({\n                  ...data,\n                  targetSatScore: 1400\n                }),\n                children: \"1400\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 748,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: data.targetSatScore === 1550 ? \"contained\" : \"outlined\",\n                sx: {\n                  mx: 1\n                },\n                onClick: () => setData({\n                  ...data,\n                  targetSatScore: 1550\n                }),\n                children: \"1500+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 755,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 11\n        }, this);\n      case 5:\n        // Motivation\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              align: \"center\",\n              gutterBottom: true,\n              sx: textStyles.heading,\n              children: \"What's your primary motivation for improving your SAT score?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 771,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              align: \"center\",\n              paragraph: true,\n              sx: textStyles.body,\n              children: \"This helps us understand your goals and tailor our guidance.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 774,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              component: \"fieldset\",\n              error: errors.motivation,\n              children: [/*#__PURE__*/_jsxDEV(RadioGroup, {\n                name: \"motivation\",\n                value: data.motivation,\n                onChange: handleInputChange,\n                children: motivations.map(motivation => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: motivation,\n                  control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 789,\n                    columnNumber: 32\n                  }, this),\n                  label: motivation\n                }, motivation, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 786,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 780,\n                columnNumber: 17\n              }, this), errors.motivation && /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                color: \"error\",\n                children: \"Please select a motivation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 795,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 779,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 11\n        }, this);\n      case 6:\n        // SAT Score Report (Copy/Paste)\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              align: \"center\",\n              gutterBottom: true,\n              sx: textStyles.heading,\n              children: \"Copy & Paste your SAT Score Report\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              align: \"center\",\n              paragraph: true,\n              sx: textStyles.body,\n              children: \"This will help us analyze your strengths and weaknesses in detail.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 811,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              multiline: true,\n              rows: 8,\n              name: \"scoreReport\",\n              value: data.scoreReport,\n              onChange: handleInputChange,\n              placeholder: \"Paste the content from your SAT score report PDF here...\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 816,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 815,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              align: \"center\",\n              sx: {\n                ...textStyles.subheading,\n                mt: 3,\n                mb: 2\n              },\n              children: \"OR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 828,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              align: \"center\",\n              sx: {\n                ...textStyles.body,\n                mb: 2\n              },\n              children: \"Upload your SAT score report PDF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 833,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                border: '2px dashed rgba(136, 212, 152, 0.6)',\n                borderRadius: 2,\n                p: 3,\n                textAlign: 'center',\n                cursor: 'pointer',\n                background: 'rgba(18, 18, 18, 0.4)',\n                // Using recommended dark theme surface color\n                '&:hover': {\n                  borderColor: 'rgba(136, 212, 152, 0.8)',\n                  background: 'rgba(30, 58, 52, 0.4)' // Slightly lighter on hover\n                }\n              },\n              ...getRootProps(),\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                ...getInputProps()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 851,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CloudUploadIcon, {\n                fontSize: \"large\",\n                sx: {\n                  color: 'rgba(136, 212, 152, 0.8)',\n                  mb: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 852,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                gutterBottom: true,\n                sx: textStyles.body,\n                children: \"Drag & drop a PDF file here, or click to select a file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 853,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: textStyles.secondary,\n                children: \"Supports PDF files only\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 856,\n                columnNumber: 17\n              }, this), data.scoreReportFile && /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 2,\n                  p: 1,\n                  bgcolor: 'rgba(30, 58, 52, 0.4)',\n                  borderRadius: 1,\n                  border: '1px solid rgba(136, 212, 152, 0.3)'\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: textStyles.body,\n                  children: [\"Selected: \", data.scoreReportFile.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 867,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 860,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 836,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 832,\n            columnNumber: 13\n          }, this), processingReport && /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sx: {\n              textAlign: 'center',\n              mt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 30,\n              sx: {\n                color: 'rgba(136, 212, 152, 0.8)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 876,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: textStyles.secondary,\n              children: \"Processing your report to generate personalized practice questions...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 877,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 875,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 11\n        }, this);\n      case 7:\n        // Review & Submit\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              align: \"center\",\n              gutterBottom: true,\n              sx: textStyles.heading,\n              children: \"Review Your Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 889,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              align: \"center\",\n              paragraph: true,\n              sx: textStyles.body,\n              children: \"Please verify that everything is correct before proceeding.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 892,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 888,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 2,\n              sx: {\n                p: 3,\n                background: 'rgba(24, 24, 24, 0.7)',\n                // Slightly lighter than the main surface for elevation\n                boxShadow: '0 4px 20px rgba(0, 0, 0, 0.2)',\n                borderRadius: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    sx: textStyles.label,\n                    children: \"Name:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 905,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    gutterBottom: true,\n                    sx: textStyles.body,\n                    children: [data.firstName, \" \", data.lastName]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 906,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 904,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    sx: textStyles.label,\n                    children: \"Age:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 909,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    gutterBottom: true,\n                    sx: textStyles.body,\n                    children: data.age\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 910,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 908,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    sx: textStyles.label,\n                    children: \"Location:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 913,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    gutterBottom: true,\n                    sx: textStyles.body,\n                    children: [data.city, \", \", data.country]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 914,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 912,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    sx: textStyles.label,\n                    children: \"Current SAT Score:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 919,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    gutterBottom: true,\n                    sx: textStyles.body,\n                    children: data.hasSatScoreReport ? 'To be provided later' : data.satScore\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 920,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 918,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    sx: textStyles.label,\n                    children: \"Target SAT Score:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 925,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    gutterBottom: true,\n                    sx: textStyles.body,\n                    children: data.targetSatScore\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 926,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 924,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    sx: textStyles.label,\n                    children: \"Motivation:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 929,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    gutterBottom: true,\n                    sx: textStyles.body,\n                    children: data.motivation\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 930,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 928,\n                  columnNumber: 19\n                }, this), data.scoreReport && /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    sx: textStyles.label,\n                    children: \"SAT Score Report:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 934,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Paper, {\n                    variant: \"outlined\",\n                    sx: {\n                      p: 2,\n                      maxHeight: '100px',\n                      overflow: 'auto',\n                      background: 'rgba(30, 30, 30, 0.8)',\n                      // Even lighter surface for nested elevation\n                      borderColor: 'rgba(136, 212, 152, 0.2)'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      sx: {\n                        whiteSpace: 'pre-wrap',\n                        ...textStyles.body,\n                        fontSize: '0.85rem'\n                      },\n                      children: data.scoreReport.length > 200 ? data.scoreReport.substring(0, 200) + '...' : data.scoreReport\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 942,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 935,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 933,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 903,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 897,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 896,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 887,\n          columnNumber: 11\n        }, this);\n      case 8:\n        // Subscription\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              align: \"center\",\n              gutterBottom: true,\n              sx: textStyles.heading,\n              children: \"Choose Your Plan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 964,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              align: \"center\",\n              paragraph: true,\n              sx: textStyles.body,\n              children: \"Select the subscription plan that works best for you.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 967,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 963,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(SubscriptionPlans, {\n              onSelectPlan: planType => {\n                setData({\n                  ...data,\n                  subscriptionPlan: planType\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 972,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 971,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 962,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n\n  // Steps for the stepper\n  const steps = ['Name', 'Age', 'Location', 'Current Score', 'Target Score', 'Motivation', 'Score Report', 'Review', 'Subscription'];\n\n  // Background style for current step\n  const getBackgroundStyle = () => {\n    return {\n      background: 'linear-gradient(135deg, #121212 0%, #1e3a34 100%)',\n      // Using recommended dark theme surface color\n      backgroundSize: '200% 200%',\n      animation: 'gradient 15s ease infinite',\n      height: '100%',\n      minHeight: '100vh',\n      transition: 'background 0.5s ease-in-out',\n      display: 'flex',\n      flexDirection: 'column',\n      '@keyframes gradient': {\n        '0%': {\n          backgroundPosition: '0% 50%'\n        },\n        '50%': {\n          backgroundPosition: '100% 50%'\n        },\n        '100%': {\n          backgroundPosition: '0% 50%'\n        }\n      }\n    };\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        minHeight: '100vh',\n        background: 'linear-gradient(135deg, #121212 0%, #1e3a34 100%)' // Using recommended dark theme surface color\n      },\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 60,\n        sx: {\n          color: 'rgba(136, 212, 152, 0.9)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1030,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          mt: 3,\n          ...textStyles.heading\n        },\n        children: \"Saving your information and preparing your custom experience...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1031,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1020,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkTheme,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: getBackgroundStyle(),\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        sx: {\n          py: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: {\n              xs: 2,\n              sm: 4\n            },\n            borderRadius: 2,\n            background: 'rgba(33, 33, 33, 0.95)',\n            backdropFilter: 'blur(10px)',\n            boxShadow: '0 8px 32px rgba(0, 0, 0, 0.3)',\n            color: 'rgba(255, 255, 255, 0.87)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Stepper, {\n            activeStep: activeStep,\n            alternativeLabel: true,\n            sx: {\n              mb: 4,\n              display: {\n                xs: 'none',\n                md: 'flex'\n              }\n            },\n            children: steps.map(label => /*#__PURE__*/_jsxDEV(Step, {\n              children: /*#__PURE__*/_jsxDEV(StepLabel, {\n                children: label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1060,\n                columnNumber: 19\n              }, this)\n            }, label, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1059,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1053,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 4,\n              display: {\n                xs: 'block',\n                md: 'none'\n              },\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: textStyles.body,\n              children: [\"Step \", activeStep + 1, \" of \", steps.length, \": \", steps[activeStep]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1067,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1066,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(animated.div, {\n            style: fadeProps,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                minHeight: '300px',\n                mb: 4\n              },\n              children: getStepContent()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1073,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1072,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              pt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"inherit\",\n              disabled: activeStep === 0,\n              onClick: handleBack,\n              startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1083,\n                columnNumber: 28\n              }, this),\n              sx: {\n                color: 'rgba(255, 255, 255, 0.87)',\n                '&:hover': {\n                  backgroundColor: 'rgba(255, 255, 255, 0.08)'\n                }\n              },\n              style: {\n                opacity: activeStep === 0 ? 0 : 1\n              },\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1079,\n              columnNumber: 15\n            }, this), activeStep === steps.length - 1 ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: handleSubmit,\n              endIcon: /*#__PURE__*/_jsxDEV(CheckCircleOutlineIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1099,\n                columnNumber: 28\n              }, this),\n              sx: {\n                background: 'linear-gradient(90deg, #1a936f 0%, #114b5f 100%)',\n                color: 'rgba(255, 255, 255, 0.95)',\n                fontWeight: 500,\n                padding: '10px 24px',\n                '&:hover': {\n                  background: 'linear-gradient(90deg, #114b5f 0%, #1a936f 100%)',\n                  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.25)'\n                }\n              },\n              children: \"Complete & Go to Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1096,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: handleNext,\n              endIcon: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1117,\n                columnNumber: 28\n              }, this),\n              disabled: activeStep === 6 && processingReport,\n              sx: {\n                background: 'linear-gradient(90deg, #1a936f 0%, #114b5f 100%)',\n                color: 'rgba(255, 255, 255, 0.95)',\n                fontWeight: 500,\n                padding: '10px 24px',\n                '&:hover': {\n                  background: 'linear-gradient(90deg, #114b5f 0%, #1a936f 100%)',\n                  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.25)'\n                },\n                '&.Mui-disabled': {\n                  background: 'rgba(136, 212, 152, 0.2)',\n                  color: 'rgba(255, 255, 255, 0.38)'\n                }\n              },\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1114,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1078,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1042,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1041,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1040,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1039,\n    columnNumber: 5\n  }, this);\n};\n_s(OnboardingFlow, \"07Tvkp45Bn2W39WMflY2Icox8dE=\", false, function () {\n  return [useNavigate, useSpring, useDropzone];\n});\n_c = OnboardingFlow;\nexport default OnboardingFlow;\nvar _c;\n$RefreshReg$(_c, \"OnboardingFlow\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Box","Container","Typography","Button","TextField","Stepper","Step","StepLabel","Paper","Grid","Autocomplete","FormControl","FormControlLabel","RadioGroup","Radio","Slider","CircularProgress","Checkbox","useDropzone","CloudUploadIcon","ArrowBackIcon","ArrowForwardIcon","CheckCircleOutlineIcon","useSpring","animated","supabase","SubscriptionPlans","generateQuestionsFromMistakes","toast","createTheme","ThemeProvider","jsxDEV","_jsxDEV","countries","code","label","flag","getCitiesByCountry","countryCode","citiesByCountry","motivations","gradients","textStyles","heading","color","textShadow","subheading","opacity","body","fontWeight","secondary","disabled","accent","OnboardingFlow","_s","navigate","activeStep","setActiveStep","loading","setLoading","cities","setCities","direction","setDirection","processingReport","setProcessingReport","data","setData","firstName","lastName","age","country","city","satScore","targetSatScore","motivation","scoreReport","hasSatScoreReport","generatedQuestions","scoreReportFile","undefined","errors","setErrors","fadeProps","from","transform","to","config","tension","friction","darkTheme","palette","mode","primary","main","text","background","paper","default","components","MuiInputBase","styleOverrides","input","root","backgroundColor","MuiOutlinedInput","borderColor","notchedOutline","MuiFormLabel","savedData","localStorage","getItem","savedStep","JSON","parse","parseInt","setItem","stringify","toString","countryData","find","c","validateStep","firstNameError","trim","lastNameError","ageError","isNaN","countryError","cityError","satScoreError","motivationError","subscriptionPlan","handleNext","_data$generatedQuesti","_data$generatedQuesti2","length","questions","error","console","prevStep","handleBack","handleInputChange","e","name","value","target","handleSubmit","log","user","auth","getUser","id","existingData","response","select","eq","single","checkError","fileUrl","scoreReportUrl","filePath","Date","now","storageError","storage","upload","publicUrl","getPublicUrl","onboardingData","user_id","first_name","last_name","sat_score","target_sat_score","score_report_text","score_report_url","has_score_report","subscription_plan","dbError","update","insert","questionsError","map","q","question_data","source","completed","aiError","success","setTimeout","window","location","href","getRootProps","getInputProps","accept","onDrop","acceptedFiles","getStepContent","container","spacing","children","item","xs","variant","align","gutterBottom","sx","fileName","_jsxFileName","lineNumber","columnNumber","paragraph","sm","fullWidth","onChange","helperText","autoFocus","mx","type","InputProps","inputProps","min","max","options","getOptionLabel","option","_","newValue","renderInput","params","control","checked","md","px","step","marks","valueLabelDisplay","textAlign","mt","onClick","component","multiline","rows","placeholder","mb","border","borderRadius","p","cursor","fontSize","bgcolor","size","elevation","boxShadow","maxHeight","overflow","whiteSpace","substring","onSelectPlan","planType","steps","getBackgroundStyle","backgroundSize","animation","height","minHeight","transition","display","flexDirection","backgroundPosition","alignItems","justifyContent","theme","maxWidth","py","backdropFilter","alternativeLabel","div","style","pt","startIcon","endIcon","padding","_c","$RefreshReg$"],"sources":["/Users/gerardo/Downloads/Bonsaito/src/components/OnboardingFlow.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { \n  Box, \n  Container, \n  Typography, \n  Button, \n  TextField, \n  Stepper, \n  Step, \n  StepLabel, \n  Paper, \n  Grid, \n  Autocomplete, \n  FormControl, \n  FormControlLabel, \n  RadioGroup, \n  Radio, \n  Slider, \n  CircularProgress,\n  TextareaAutosize,\n  Checkbox\n} from '@mui/material';\nimport { useDropzone } from 'react-dropzone';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport { useSpring, animated } from 'react-spring';\nimport { supabase } from '../supabaseClient';\nimport PdfUploader from './PdfUploader';\nimport SubscriptionPlans from './SubscriptionPlans';\nimport { generateQuestionsFromMistakes } from '../services/geminiPdfService';\nimport { toast } from 'react-toastify';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\n// Country data with flags (simplified version for this example)\nconst countries = [\n  { code: 'US', label: 'United States', flag: 'ðŸ‡ºðŸ‡¸' },\n  { code: 'CA', label: 'Canada', flag: 'ðŸ‡¨ðŸ‡¦' },\n  { code: 'GB', label: 'United Kingdom', flag: 'ðŸ‡¬ðŸ‡§' },\n  { code: 'AU', label: 'Australia', flag: 'ðŸ‡¦ðŸ‡º' },\n  { code: 'IN', label: 'India', flag: 'ðŸ‡®ðŸ‡³' },\n  { code: 'CN', label: 'China', flag: 'ðŸ‡¨ðŸ‡³' },\n  { code: 'JP', label: 'Japan', flag: 'ðŸ‡¯ðŸ‡µ' },\n  { code: 'DE', label: 'Germany', flag: 'ðŸ‡©ðŸ‡ª' },\n  { code: 'FR', label: 'France', flag: 'ðŸ‡«ðŸ‡·' },\n  { code: 'IT', label: 'Italy', flag: 'ðŸ‡®ðŸ‡¹' },\n  { code: 'ES', label: 'Spain', flag: 'ðŸ‡ªðŸ‡¸' },\n  { code: 'MX', label: 'Mexico', flag: 'ðŸ‡²ðŸ‡½' },\n  { code: 'BR', label: 'Brazil', flag: 'ðŸ‡§ðŸ‡·' },\n  { code: 'ZA', label: 'South Africa', flag: 'ðŸ‡¿ðŸ‡¦' },\n  { code: 'RU', label: 'Russia', flag: 'ðŸ‡·ðŸ‡º' },\n  // Add more countries as needed\n];\n\n// City data (would be fetched based on country selection in a real implementation)\nconst getCitiesByCountry = (countryCode: string) => {\n  const citiesByCountry: { [key: string]: string[] } = {\n    'US': ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Philadelphia'],\n    'CA': ['Toronto', 'Montreal', 'Vancouver', 'Calgary', 'Ottawa', 'Edmonton'],\n    'GB': ['London', 'Birmingham', 'Manchester', 'Glasgow', 'Liverpool', 'Edinburgh'],\n    'AU': ['Sydney', 'Melbourne', 'Brisbane', 'Perth', 'Adelaide', 'Gold Coast'],\n    'IN': ['Mumbai', 'Delhi', 'Bangalore', 'Hyderabad', 'Chennai', 'Kolkata'],\n    // Add more cities as needed\n  };\n  return citiesByCountry[countryCode] || [];\n};\n\n// Motivation options\nconst motivations = [\n  'Get into a top college',\n  'Qualify for scholarships',\n  'Improve overall academic standing',\n  'Boost Math score',\n  'Boost Reading/Writing score',\n  'Personal goal',\n  'Parent requirement',\n  'School requirement',\n  'Other'\n];\n\ninterface OnboardingData {\n  firstName: string;\n  lastName: string;\n  age: string;\n  country: string | null;\n  city: string | null;\n  satScore: string;\n  targetSatScore: number;\n  motivation: string;\n  scoreReport: string;\n  hasSatScoreReport: boolean;\n  scoreReportUrl?: string;\n  subscriptionPlan?: 'free' | 'pro';\n  generatedQuestions?: any[];\n  scoreReportFile?: File;\n}\n\n// Gradients for each step\nconst gradients = [\n  'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)', // Step 1\n  'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)', // Step 2\n  'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)', // Step 3\n  'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)', // Step 4\n  'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)', // Step 5\n  'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)', // Step 6\n  'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)', // Step 7\n  'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)', // Step 8\n  'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)', // Step 9 (Subscription)\n];\n\n// Custom styles for better text readability based on dark theme best practices\nconst textStyles = {\n  heading: {\n    color: 'rgba(255, 255, 255, 0.87)', // High-emphasis text at 87% opacity\n    textShadow: '0 1px 2px rgba(0,0,0,0.2)'\n  },\n  subheading: {\n    color: 'rgba(255, 255, 255, 0.87)', // High-emphasis text at 87% opacity\n    opacity: 0.9\n  },\n  body: {\n    color: 'rgba(255, 255, 255, 0.7)' // Medium-emphasis text at 70% opacity\n  },\n  label: {\n    color: 'rgba(255, 255, 255, 0.87)',  // High-emphasis text at 87% opacity\n    fontWeight: 500\n  },\n  secondary: {\n    color: 'rgba(255, 255, 255, 0.6)' // Secondary text at 60% opacity\n  },\n  disabled: {\n    color: 'rgba(255, 255, 255, 0.38)' // Disabled text at 38% opacity\n  },\n  accent: {\n    color: 'rgba(136, 212, 152, 0.9)' // Desaturated accent color\n  }\n};\n\nconst OnboardingFlow: React.FC = () => {\n  const navigate = useNavigate();\n  const [activeStep, setActiveStep] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [cities, setCities] = useState<string[]>([]);\n  const [direction, setDirection] = useState<'forward' | 'backward'>('forward');\n  const [processingReport, setProcessingReport] = useState(false);\n  \n  // Form data\n  const [data, setData] = useState<OnboardingData>({\n    firstName: '',\n    lastName: '',\n    age: '',\n    country: null,\n    city: null,\n    satScore: '',\n    targetSatScore: 1200,\n    motivation: '',\n    scoreReport: '',\n    hasSatScoreReport: false,\n    generatedQuestions: [],\n    scoreReportFile: undefined\n  });\n\n  // Validation states\n  const [errors, setErrors] = useState({\n    firstName: false,\n    lastName: false,\n    age: false,\n    country: false,\n    city: false,\n    satScore: false,\n    motivation: false\n  });\n\n  // Animation for step transitions\n  const fadeProps = useSpring({\n    from: { \n      opacity: 0, \n      transform: `translateX(${direction === 'forward' ? '50px' : '-50px'})` \n    },\n    to: { \n      opacity: 1, \n      transform: 'translateX(0px)' \n    },\n    config: { tension: 280, friction: 60 }\n  });\n\n  // Create a theme override for form inputs to ensure proper contrast\n  const darkTheme = createTheme({\n    palette: {\n      mode: 'dark',\n      primary: {\n        main: 'rgba(136, 212, 152, 0.9)',\n      },\n      text: {\n        primary: 'rgba(255, 255, 255, 0.87)',\n        secondary: 'rgba(255, 255, 255, 0.6)',\n      },\n      background: {\n        paper: 'rgba(30, 30, 30, 0.8)',\n        default: 'rgba(18, 18, 18, 0.95)',\n      },\n    },\n    components: {\n      MuiInputBase: {\n        styleOverrides: {\n          input: {\n            color: 'rgba(255, 255, 255, 0.87)',\n          },\n          root: {\n            backgroundColor: 'rgba(30, 30, 30, 0.4)',\n          }\n        },\n      },\n      MuiOutlinedInput: {\n        styleOverrides: {\n          root: {\n            '&:hover .MuiOutlinedInput-notchedOutline': {\n              borderColor: 'rgba(136, 212, 152, 0.5)',\n            },\n            '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n              borderColor: 'rgba(136, 212, 152, 0.8)',\n            },\n          },\n          notchedOutline: {\n            borderColor: 'rgba(255, 255, 255, 0.23)',\n          },\n        },\n      },\n      MuiFormLabel: {\n        styleOverrides: {\n          root: {\n            color: 'rgba(255, 255, 255, 0.6)',\n            '&.Mui-focused': {\n              color: 'rgba(136, 212, 152, 0.8)',\n            },\n          },\n        },\n      },\n    },\n  });\n\n  // Load saved progress from localStorage\n  useEffect(() => {\n    const savedData = localStorage.getItem('onboardingData');\n    const savedStep = localStorage.getItem('onboardingStep');\n    \n    if (savedData) {\n      setData(JSON.parse(savedData));\n    }\n    \n    if (savedStep) {\n      setActiveStep(parseInt(savedStep, 10));\n    }\n  }, []);\n\n  // Save progress to localStorage whenever data or step changes\n  useEffect(() => {\n    localStorage.setItem('onboardingData', JSON.stringify(data));\n    localStorage.setItem('onboardingStep', activeStep.toString());\n  }, [data, activeStep]);\n\n  // Update cities when country changes\n  useEffect(() => {\n    if (data.country) {\n      const countryData = countries.find(c => c.label === data.country);\n      if (countryData) {\n        setCities(getCitiesByCountry(countryData.code));\n      }\n    }\n  }, [data.country]);\n\n  const validateStep = () => {\n    switch (activeStep) {\n      case 0: // First Name & Last Name\n        const firstNameError = !data.firstName.trim();\n        const lastNameError = !data.lastName.trim();\n        setErrors({...errors, firstName: firstNameError, lastName: lastNameError});\n        return !firstNameError && !lastNameError;\n      \n      case 1: // Age\n        const ageError = !data.age || isNaN(parseInt(data.age)) || parseInt(data.age) < 13 || parseInt(data.age) > 100;\n        setErrors({...errors, age: ageError});\n        return !ageError;\n      \n      case 2: // Country & City\n        const countryError = !data.country;\n        const cityError = !data.city;\n        setErrors({...errors, country: countryError, city: cityError});\n        return !countryError && !cityError;\n      \n      case 3: // SAT Score\n        if (data.hasSatScoreReport) return true; // Skip validation if they'll upload/paste later\n        const satScoreError = !data.satScore || isNaN(parseInt(data.satScore)) || \n                            parseInt(data.satScore) < 400 || parseInt(data.satScore) > 1600;\n        setErrors({...errors, satScore: satScoreError});\n        return !satScoreError;\n      \n      case 4: // Target SAT Score\n        return true; // Always valid since slider has defaults\n      \n      case 5: // Motivation\n        const motivationError = !data.motivation;\n        setErrors({...errors, motivation: motivationError});\n        return !motivationError;\n      \n      case 6: // SAT Score Report\n        return true; // Optional, so always valid\n      \n      case 7: // Review\n        return true; // Just a review, so always valid\n        \n      case 8: // Subscription Plan\n        return !!data.subscriptionPlan; // Valid if a plan is selected\n      \n      default:\n        return true;\n    }\n  };\n\n  const handleNext = async () => {\n    if (!validateStep()) return;\n    \n    setDirection('forward');\n    \n    // Special handling for the score report step to generate questions\n    if (activeStep === 6) {\n      if ((data.scoreReport && !data.generatedQuestions?.length) || \n          (data.scoreReportFile && !data.generatedQuestions?.length)) {\n        try {\n          setProcessingReport(true);\n          \n          // Generate questions from the score report text or file\n          let questions;\n          if (data.scoreReportFile) {\n            questions = await generateQuestionsFromMistakes(data.scoreReportFile);\n          } else if (data.scoreReport) {\n            questions = await generateQuestionsFromMistakes(data.scoreReport);\n          }\n          \n          setData({ ...data, generatedQuestions: questions });\n          setProcessingReport(false);\n        } catch (error) {\n          console.error(\"Error generating questions:\", error);\n          setProcessingReport(false);\n        }\n      }\n    }\n    \n    setActiveStep((prevStep) => prevStep + 1);\n  };\n\n  const handleBack = () => {\n    setDirection('backward');\n    setActiveStep((prevStep) => prevStep - 1);\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setData({ ...data, [name]: value });\n  };\n\n  const handleSubmit = async () => {\n    console.log(\"Starting onboarding submission process\");\n    setLoading(true);\n    \n    try {\n      // Get current user\n      const { data: { user } } = await supabase.auth.getUser();\n      console.log(\"Current user:\", user);\n      \n      if (!user) {\n        toast.error('You must be logged in to complete onboarding');\n        return;\n      }\n      \n      // Check if user already has an onboarding entry\n      console.log(\"Checking for existing onboarding entry for user:\", user.id);\n      let existingData = null;\n      \n      try {\n        const response = await supabase\n          .from('user_onboarding')\n          .select('id')\n          .eq('user_id', user.id)\n          .single();\n        \n        existingData = response.data;\n        const checkError = response.error;\n          \n        console.log(\"Existing onboarding data check result:\", { existingData, checkError });\n        \n        if (checkError && checkError.code !== 'PGRST116') {\n          console.error('Error checking for existing onboarding record:', checkError);\n          toast.error('Error saving your information');\n          setLoading(false);\n          return;\n        }\n      } catch (checkError) {\n        console.error('Exception checking for existing onboarding record:', checkError);\n        toast.error('Error connecting to the database');\n        setLoading(false);\n        return;\n      }\n      \n      // Store file if it exists\n      let fileUrl = data.scoreReportUrl;\n      \n      if (data.scoreReportFile && !data.scoreReportUrl) {\n        const filePath = `${user.id}/${Date.now()}_${data.scoreReportFile.name}`;\n        const { error: storageError } = await supabase.storage\n          .from('score-reports')\n          .upload(filePath, data.scoreReportFile);\n          \n        if (storageError) {\n          console.error('Error uploading file:', storageError);\n          toast.error('Error uploading your score report');\n        } else {\n          const { data: { publicUrl } } = supabase.storage\n            .from('score-reports')\n            .getPublicUrl(filePath);\n            \n          fileUrl = publicUrl;\n        }\n      }\n      \n      // Store onboarding data to Supabase\n      const onboardingData = {\n        user_id: user.id,\n        first_name: data.firstName,\n        last_name: data.lastName,\n        age: parseInt(data.age),\n        country: data.country || '',\n        city: data.city || '',\n        sat_score: data.satScore ? parseInt(data.satScore) : null,\n        target_sat_score: data.targetSatScore,\n        motivation: data.motivation,\n        score_report_text: data.scoreReport,\n        score_report_url: fileUrl,\n        has_score_report: data.hasSatScoreReport,\n        subscription_plan: data.subscriptionPlan || 'free'\n      };\n      \n      // Insert or update user onboarding data\n      let dbError;\n      if (existingData) {\n        const { error } = await supabase\n          .from('user_onboarding')\n          .update(onboardingData)\n          .eq('id', existingData.id);\n        dbError = error;\n      } else {\n        const { error } = await supabase\n          .from('user_onboarding')\n          .insert([onboardingData]);\n        dbError = error;\n      }\n      \n      if (dbError) {\n        console.error('Error saving onboarding data:', dbError);\n        toast.error('Error saving your information');\n        setLoading(false);\n        return;\n      }\n      \n      // Generate practice questions if there's a score report\n      if (data.scoreReport) {\n        try {\n          // Generate practice questions from the score report text\n          const questions = await generateQuestionsFromMistakes(data.scoreReport);\n          \n          if (questions && questions.length > 0) {\n            // Store questions in practice_questions table\n            const { error: questionsError } = await supabase\n              .from('practice_questions')\n              .insert(\n                questions.map(q => ({\n                  user_id: user.id,\n                  question_data: q,\n                  source: 'onboarding',\n                  completed: false\n                }))\n              );\n              \n            if (questionsError) {\n              console.error('Error storing practice questions:', questionsError);\n            } else {\n              console.log(`Successfully created ${questions.length} practice questions for the user`);\n            }\n          }\n        } catch (aiError) {\n          console.error('Error generating practice questions:', aiError);\n        }\n      }\n      \n      toast.success('Onboarding completed successfully!');\n      \n      // Redirect to dashboard - add delay to ensure toast is visible and state is updated\n      setTimeout(() => {\n        // Force navigation with window.location for a full page refresh in case of router issues\n        window.location.href = '/dashboard';\n      }, 1000);\n      \n      return; // Early return to prevent further execution\n    } catch (error) {\n      console.error('Error in onboarding submission:', error);\n      toast.error('Error saving your information');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add a useDropzone hook for file handling\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: {\n      'application/pdf': ['.pdf'],\n    },\n    onDrop: acceptedFiles => {\n      if (acceptedFiles.length > 0) {\n        setData({ ...data, scoreReportFile: acceptedFiles[0] });\n      }\n    }\n  });\n\n  // Render different step content based on activeStep\n  const getStepContent = () => {\n    switch (activeStep) {\n      case 0: // Name\n        return (\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant=\"h4\" align=\"center\" gutterBottom sx={textStyles.heading}>\n                Let's get to know you better\n              </Typography>\n              <Typography variant=\"body1\" align=\"center\" paragraph sx={textStyles.body}>\n                We'll personalize your learning experience based on your information.\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                label=\"First Name\"\n                name=\"firstName\"\n                value={data.firstName}\n                onChange={handleInputChange}\n                error={errors.firstName}\n                helperText={errors.firstName ? 'First name is required' : ''}\n                variant=\"outlined\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                label=\"Last Name\"\n                name=\"lastName\"\n                value={data.lastName}\n                onChange={handleInputChange}\n                error={errors.lastName}\n                helperText={errors.lastName ? 'Last name is required' : ''}\n                variant=\"outlined\"\n              />\n            </Grid>\n          </Grid>\n        );\n      \n      case 1: // Age\n        return (\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant=\"h4\" align=\"center\" gutterBottom sx={textStyles.heading}>\n                How old are you?\n              </Typography>\n              <Typography variant=\"body1\" align=\"center\" paragraph sx={textStyles.body}>\n                We use this to customize content appropriate for your age group.\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sm={6} sx={{ mx: 'auto' }}>\n              <TextField\n                fullWidth\n                label=\"Age\"\n                name=\"age\"\n                type=\"number\"\n                value={data.age}\n                onChange={handleInputChange}\n                error={errors.age}\n                helperText={errors.age ? 'Please enter a valid age (13-100)' : ''}\n                variant=\"outlined\"\n                InputProps={{ inputProps: { min: 13, max: 100 } }}\n              />\n            </Grid>\n          </Grid>\n        );\n      \n      case 2: // Location\n        return (\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant=\"h4\" align=\"center\" gutterBottom sx={textStyles.heading}>\n                Where are you located?\n              </Typography>\n              <Typography variant=\"body1\" align=\"center\" paragraph sx={textStyles.body}>\n                We'll use this to provide region-specific resources and recommendations.\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Autocomplete\n                options={countries}\n                getOptionLabel={(option) => `${option.flag} ${option.label}`}\n                onChange={(_, newValue) => {\n                  setData({ \n                    ...data, \n                    country: newValue ? newValue.label : null,\n                    city: null // Reset city when country changes\n                  });\n                }}\n                value={countries.find(c => c.label === data.country) || null}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Country\"\n                    error={errors.country}\n                    helperText={errors.country ? 'Country is required' : ''}\n                    variant=\"outlined\"\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Autocomplete\n                options={cities}\n                getOptionLabel={(option) => option}\n                onChange={(_, newValue) => {\n                  setData({ ...data, city: newValue });\n                }}\n                value={data.city}\n                disabled={!data.country}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"City\"\n                    error={errors.city}\n                    helperText={errors.city ? 'City is required' : ''}\n                    variant=\"outlined\"\n                  />\n                )}\n              />\n            </Grid>\n          </Grid>\n        );\n      \n      case 3: // Current SAT Score\n        return (\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant=\"h4\" align=\"center\" gutterBottom sx={textStyles.heading}>\n                What's your current SAT score?\n              </Typography>\n              <Typography variant=\"body1\" align=\"center\" paragraph sx={textStyles.body}>\n                If you haven't taken the SAT yet or don't know your score, we'll help you upload or enter it later.\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={\n                  <Checkbox \n                    checked={data.hasSatScoreReport} \n                    onChange={(e) => setData({ ...data, hasSatScoreReport: e.target.checked })}\n                  />\n                }\n                label=\"I'll upload/paste my SAT score report later\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={8} sx={{ mx: 'auto' }}>\n              <TextField\n                fullWidth\n                label=\"SAT Score\"\n                name=\"satScore\"\n                type=\"number\"\n                value={data.satScore}\n                onChange={handleInputChange}\n                error={errors.satScore && !data.hasSatScoreReport}\n                helperText={errors.satScore && !data.hasSatScoreReport ? 'Please enter a valid SAT score (400-1600)' : ''}\n                variant=\"outlined\"\n                disabled={data.hasSatScoreReport}\n                InputProps={{ inputProps: { min: 400, max: 1600 } }}\n              />\n            </Grid>\n          </Grid>\n        );\n      \n      case 4: // Target SAT Score\n        return (\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant=\"h4\" align=\"center\" gutterBottom sx={textStyles.heading}>\n                What's your target SAT score?\n              </Typography>\n              <Typography variant=\"body1\" align=\"center\" paragraph sx={textStyles.body}>\n                Setting a goal helps us customize your learning path.\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={8} sx={{ mx: 'auto' }}>\n              <Box sx={{ px: 3 }}>\n                <Slider\n                  value={data.targetSatScore}\n                  min={1000}\n                  max={1600}\n                  step={10}\n                  marks={[\n                    { value: 1000, label: '1000' },\n                    { value: 1200, label: '1200' },\n                    { value: 1400, label: '1400' },\n                    { value: 1600, label: '1600' }\n                  ]}\n                  onChange={(_, newValue) => \n                    setData({ ...data, targetSatScore: newValue as number })\n                  }\n                  valueLabelDisplay=\"on\"\n                />\n              </Box>\n            </Grid>\n            <Grid item xs={12} sx={{ textAlign: 'center' }}>\n              <Typography variant=\"h6\" sx={{ ...textStyles.subheading, color: '#88d498' }}>\n                Target Score: {data.targetSatScore}\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sx={{ textAlign: 'center' }}>\n              <Typography variant=\"subtitle2\" sx={textStyles.body}>\n                Or choose a preset target:\n              </Typography>\n              <Box sx={{ mt: 2 }}>\n                <Button \n                  variant={data.targetSatScore === 1000 ? \"contained\" : \"outlined\"} \n                  sx={{ mx: 1 }}\n                  onClick={() => setData({ ...data, targetSatScore: 1000 })}\n                >\n                  1000\n                </Button>\n                <Button \n                  variant={data.targetSatScore === 1200 ? \"contained\" : \"outlined\"}\n                  sx={{ mx: 1 }}\n                  onClick={() => setData({ ...data, targetSatScore: 1200 })}\n                >\n                  1200\n                </Button>\n                <Button \n                  variant={data.targetSatScore === 1400 ? \"contained\" : \"outlined\"}\n                  sx={{ mx: 1 }}\n                  onClick={() => setData({ ...data, targetSatScore: 1400 })}\n                >\n                  1400\n                </Button>\n                <Button \n                  variant={data.targetSatScore === 1550 ? \"contained\" : \"outlined\"}\n                  sx={{ mx: 1 }}\n                  onClick={() => setData({ ...data, targetSatScore: 1550 })}\n                >\n                  1500+\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n        );\n      \n      case 5: // Motivation\n        return (\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant=\"h4\" align=\"center\" gutterBottom sx={textStyles.heading}>\n                What's your primary motivation for improving your SAT score?\n              </Typography>\n              <Typography variant=\"body1\" align=\"center\" paragraph sx={textStyles.body}>\n                This helps us understand your goals and tailor our guidance.\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl component=\"fieldset\" error={errors.motivation}>\n                <RadioGroup\n                  name=\"motivation\"\n                  value={data.motivation}\n                  onChange={handleInputChange}\n                >\n                  {motivations.map((motivation) => (\n                    <FormControlLabel\n                      key={motivation}\n                      value={motivation}\n                      control={<Radio />}\n                      label={motivation}\n                    />\n                  ))}\n                </RadioGroup>\n                {errors.motivation && (\n                  <Typography variant=\"caption\" color=\"error\">\n                    Please select a motivation\n                  </Typography>\n                )}\n              </FormControl>\n            </Grid>\n          </Grid>\n        );\n      \n      case 6: // SAT Score Report (Copy/Paste)\n        return (\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant=\"h4\" align=\"center\" gutterBottom sx={textStyles.heading}>\n                Copy & Paste your SAT Score Report\n              </Typography>\n              <Typography variant=\"body1\" align=\"center\" paragraph sx={textStyles.body}>\n                This will help us analyze your strengths and weaknesses in detail.\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                multiline\n                rows={8}\n                name=\"scoreReport\"\n                value={data.scoreReport}\n                onChange={handleInputChange}\n                placeholder=\"Paste the content from your SAT score report PDF here...\"\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant=\"h6\" align=\"center\" sx={{ ...textStyles.subheading, mt: 3, mb: 2 }}>\n                OR\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant=\"body1\" align=\"center\" sx={{ ...textStyles.body, mb: 2 }}>\n                Upload your SAT score report PDF\n              </Typography>\n              <Box\n                sx={{\n                  border: '2px dashed rgba(136, 212, 152, 0.6)',\n                  borderRadius: 2,\n                  p: 3,\n                  textAlign: 'center',\n                  cursor: 'pointer',\n                  background: 'rgba(18, 18, 18, 0.4)', // Using recommended dark theme surface color\n                  '&:hover': {\n                    borderColor: 'rgba(136, 212, 152, 0.8)',\n                    background: 'rgba(30, 58, 52, 0.4)' // Slightly lighter on hover\n                  }\n                }}\n                {...getRootProps()}\n              >\n                <input {...getInputProps()} />\n                <CloudUploadIcon fontSize=\"large\" sx={{ color: 'rgba(136, 212, 152, 0.8)', mb: 2 }} />\n                <Typography variant=\"body1\" gutterBottom sx={textStyles.body}>\n                  Drag & drop a PDF file here, or click to select a file\n                </Typography>\n                <Typography variant=\"body2\" sx={textStyles.secondary}>\n                  Supports PDF files only\n                </Typography>\n                {data.scoreReportFile && (\n                  <Box sx={{ \n                    mt: 2, \n                    p: 1, \n                    bgcolor: 'rgba(30, 58, 52, 0.4)', \n                    borderRadius: 1,\n                    border: '1px solid rgba(136, 212, 152, 0.3)'\n                  }}>\n                    <Typography variant=\"body2\" sx={textStyles.body}>\n                      Selected: {data.scoreReportFile.name}\n                    </Typography>\n                  </Box>\n                )}\n              </Box>\n            </Grid>\n            {processingReport && (\n              <Grid item xs={12} sx={{ textAlign: 'center', mt: 2 }}>\n                <CircularProgress size={30} sx={{ color: 'rgba(136, 212, 152, 0.8)' }} />\n                <Typography variant=\"body2\" sx={textStyles.secondary}>\n                  Processing your report to generate personalized practice questions...\n                </Typography>\n              </Grid>\n            )}\n          </Grid>\n        );\n      \n      case 7: // Review & Submit\n        return (\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant=\"h4\" align=\"center\" gutterBottom sx={textStyles.heading}>\n                Review Your Information\n              </Typography>\n              <Typography variant=\"body1\" align=\"center\" paragraph sx={textStyles.body}>\n                Please verify that everything is correct before proceeding.\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Paper elevation={2} sx={{ \n                p: 3, \n                background: 'rgba(24, 24, 24, 0.7)', // Slightly lighter than the main surface for elevation\n                boxShadow: '0 4px 20px rgba(0, 0, 0, 0.2)',\n                borderRadius: 2\n              }}>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={6}>\n                    <Typography variant=\"subtitle2\" sx={textStyles.label}>Name:</Typography>\n                    <Typography variant=\"body1\" gutterBottom sx={textStyles.body}>{data.firstName} {data.lastName}</Typography>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <Typography variant=\"subtitle2\" sx={textStyles.label}>Age:</Typography>\n                    <Typography variant=\"body1\" gutterBottom sx={textStyles.body}>{data.age}</Typography>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <Typography variant=\"subtitle2\" sx={textStyles.label}>Location:</Typography>\n                    <Typography variant=\"body1\" gutterBottom sx={textStyles.body}>\n                      {data.city}, {data.country}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <Typography variant=\"subtitle2\" sx={textStyles.label}>Current SAT Score:</Typography>\n                    <Typography variant=\"body1\" gutterBottom sx={textStyles.body}>\n                      {data.hasSatScoreReport ? 'To be provided later' : data.satScore}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <Typography variant=\"subtitle2\" sx={textStyles.label}>Target SAT Score:</Typography>\n                    <Typography variant=\"body1\" gutterBottom sx={textStyles.body}>{data.targetSatScore}</Typography>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <Typography variant=\"subtitle2\" sx={textStyles.label}>Motivation:</Typography>\n                    <Typography variant=\"body1\" gutterBottom sx={textStyles.body}>{data.motivation}</Typography>\n                  </Grid>\n                  {data.scoreReport && (\n                    <Grid item xs={12}>\n                      <Typography variant=\"subtitle2\" sx={textStyles.label}>SAT Score Report:</Typography>\n                      <Paper variant=\"outlined\" sx={{ \n                        p: 2, \n                        maxHeight: '100px', \n                        overflow: 'auto',\n                        background: 'rgba(30, 30, 30, 0.8)', // Even lighter surface for nested elevation\n                        borderColor: 'rgba(136, 212, 152, 0.2)'\n                      }}>\n                        <Typography variant=\"body2\" sx={{ \n                          whiteSpace: 'pre-wrap',\n                          ...textStyles.body,\n                          fontSize: '0.85rem'\n                        }}>\n                          {data.scoreReport.length > 200 \n                            ? data.scoreReport.substring(0, 200) + '...' \n                            : data.scoreReport}\n                        </Typography>\n                      </Paper>\n                    </Grid>\n                  )}\n                </Grid>\n              </Paper>\n            </Grid>\n          </Grid>\n        );\n      \n      case 8: // Subscription\n        return (\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant=\"h4\" align=\"center\" gutterBottom sx={textStyles.heading}>\n                Choose Your Plan\n              </Typography>\n              <Typography variant=\"body1\" align=\"center\" paragraph sx={textStyles.body}>\n                Select the subscription plan that works best for you.\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <SubscriptionPlans \n                onSelectPlan={(planType) => {\n                  setData({ ...data, subscriptionPlan: planType });\n                }} \n              />\n            </Grid>\n          </Grid>\n        );\n      \n      default:\n        return null;\n    }\n  };\n\n  // Steps for the stepper\n  const steps = [\n    'Name',\n    'Age',\n    'Location',\n    'Current Score',\n    'Target Score',\n    'Motivation',\n    'Score Report',\n    'Review',\n    'Subscription'\n  ];\n\n  // Background style for current step\n  const getBackgroundStyle = () => {\n    return {\n      background: 'linear-gradient(135deg, #121212 0%, #1e3a34 100%)', // Using recommended dark theme surface color\n      backgroundSize: '200% 200%',\n      animation: 'gradient 15s ease infinite',\n      height: '100%',\n      minHeight: '100vh',\n      transition: 'background 0.5s ease-in-out',\n      display: 'flex',\n      flexDirection: 'column',\n      '@keyframes gradient': {\n        '0%': { backgroundPosition: '0% 50%' },\n        '50%': { backgroundPosition: '100% 50%' },\n        '100%': { backgroundPosition: '0% 50%' }\n      }\n    } as React.CSSProperties;\n  };\n\n  if (loading) {\n    return (\n      <Box \n        sx={{ \n          display: 'flex', \n          flexDirection: 'column', \n          alignItems: 'center', \n          justifyContent: 'center',\n          minHeight: '100vh',\n          background: 'linear-gradient(135deg, #121212 0%, #1e3a34 100%)' // Using recommended dark theme surface color\n        }}\n      >\n        <CircularProgress size={60} sx={{ color: 'rgba(136, 212, 152, 0.9)' }} />\n        <Typography variant=\"h6\" sx={{ mt: 3, ...textStyles.heading }}>\n          Saving your information and preparing your custom experience...\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <Box sx={getBackgroundStyle()}>\n        <Container maxWidth=\"md\" sx={{ py: 8 }}>\n          <Paper \n            elevation={3} \n            sx={{ \n              p: { xs: 2, sm: 4 }, \n              borderRadius: 2, \n              background: 'rgba(33, 33, 33, 0.95)',\n              backdropFilter: 'blur(10px)',\n              boxShadow: '0 8px 32px rgba(0, 0, 0, 0.3)',\n              color: 'rgba(255, 255, 255, 0.87)'\n            }}\n          >\n            <Stepper \n              activeStep={activeStep} \n              alternativeLabel\n              sx={{ mb: 4, display: { xs: 'none', md: 'flex' } }}\n            >\n              {steps.map((label: string) => (\n                <Step key={label}>\n                  <StepLabel>{label}</StepLabel>\n                </Step>\n              ))}\n            </Stepper>\n            \n            {/* Mobile stepper status */}\n            <Box sx={{ mb: 4, display: { xs: 'block', md: 'none' }, textAlign: 'center' }}>\n              <Typography variant=\"body2\" sx={textStyles.body}>\n                Step {activeStep + 1} of {steps.length}: {steps[activeStep]}\n              </Typography>\n            </Box>\n            \n            <animated.div style={fadeProps}>\n              <Box sx={{ minHeight: '300px', mb: 4 }}>\n                {getStepContent()}\n              </Box>\n            </animated.div>\n            \n            <Box sx={{ display: 'flex', justifyContent: 'space-between', pt: 2 }}>\n              <Button\n                color=\"inherit\"\n                disabled={activeStep === 0}\n                onClick={handleBack}\n                startIcon={<ArrowBackIcon />}\n                sx={{ \n                  color: 'rgba(255, 255, 255, 0.87)',\n                  '&:hover': {\n                    backgroundColor: 'rgba(255, 255, 255, 0.08)'\n                  }\n                }}\n                style={{ opacity: activeStep === 0 ? 0 : 1 }}\n              >\n                Back\n              </Button>\n              \n              {activeStep === steps.length - 1 ? (\n                <Button \n                  variant=\"contained\" \n                  onClick={handleSubmit}\n                  endIcon={<CheckCircleOutlineIcon />}\n                  sx={{\n                    background: 'linear-gradient(90deg, #1a936f 0%, #114b5f 100%)',\n                    color: 'rgba(255, 255, 255, 0.95)',\n                    fontWeight: 500,\n                    padding: '10px 24px',\n                    '&:hover': {\n                      background: 'linear-gradient(90deg, #114b5f 0%, #1a936f 100%)',\n                      boxShadow: '0 4px 20px rgba(0, 0, 0, 0.25)'\n                    }\n                  }}\n                >\n                  Complete & Go to Dashboard\n                </Button>\n              ) : (\n                <Button \n                  variant=\"contained\"\n                  onClick={handleNext}\n                  endIcon={<ArrowForwardIcon />}\n                  disabled={activeStep === 6 && processingReport}\n                  sx={{\n                    background: 'linear-gradient(90deg, #1a936f 0%, #114b5f 100%)',\n                    color: 'rgba(255, 255, 255, 0.95)',\n                    fontWeight: 500,\n                    padding: '10px 24px',\n                    '&:hover': {\n                      background: 'linear-gradient(90deg, #114b5f 0%, #1a936f 100%)',\n                      boxShadow: '0 4px 20px rgba(0, 0, 0, 0.25)'\n                    },\n                    '&.Mui-disabled': {\n                      background: 'rgba(136, 212, 152, 0.2)',\n                      color: 'rgba(255, 255, 255, 0.38)'\n                    }\n                  }}\n                >\n                  Next\n                </Button>\n              )}\n            </Box>\n          </Paper>\n        </Container>\n      </Box>\n    </ThemeProvider>\n  );\n};\n\nexport default OnboardingFlow; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}