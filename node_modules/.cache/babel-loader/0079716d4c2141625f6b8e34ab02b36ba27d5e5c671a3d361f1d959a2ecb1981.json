{"ast":null,"code":"import _objectSpread from\"/Users/gerardo/Downloads/Bonsaito/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{Box,Container,Typography,Button,TextField,Stepper,Step,StepLabel,Paper,Grid,Autocomplete,FormControl,FormControlLabel,RadioGroup,Radio,Slider,CircularProgress,Checkbox}from'@mui/material';import{useDropzone}from'react-dropzone';import CloudUploadIcon from'@mui/icons-material/CloudUpload';import ArrowBackIcon from'@mui/icons-material/ArrowBack';import ArrowForwardIcon from'@mui/icons-material/ArrowForward';import CheckCircleOutlineIcon from'@mui/icons-material/CheckCircleOutline';import{useSpring,animated}from'react-spring';import{supabase}from'../supabaseClient';import SubscriptionPlans from'./SubscriptionPlans';import{generateQuestionsFromMistakes}from'../services/geminiPdfService';import{toast}from'react-toastify';import{createTheme,ThemeProvider}from'@mui/material/styles';// Country data with flags (simplified version for this example)\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const countries=[{code:'US',label:'United States',flag:'ðŸ‡ºðŸ‡¸'},{code:'CA',label:'Canada',flag:'ðŸ‡¨ðŸ‡¦'},{code:'GB',label:'United Kingdom',flag:'ðŸ‡¬ðŸ‡§'},{code:'AU',label:'Australia',flag:'ðŸ‡¦ðŸ‡º'},{code:'IN',label:'India',flag:'ðŸ‡®ðŸ‡³'},{code:'CN',label:'China',flag:'ðŸ‡¨ðŸ‡³'},{code:'JP',label:'Japan',flag:'ðŸ‡¯ðŸ‡µ'},{code:'DE',label:'Germany',flag:'ðŸ‡©ðŸ‡ª'},{code:'FR',label:'France',flag:'ðŸ‡«ðŸ‡·'},{code:'IT',label:'Italy',flag:'ðŸ‡®ðŸ‡¹'},{code:'ES',label:'Spain',flag:'ðŸ‡ªðŸ‡¸'},{code:'MX',label:'Mexico',flag:'ðŸ‡²ðŸ‡½'},{code:'BR',label:'Brazil',flag:'ðŸ‡§ðŸ‡·'},{code:'ZA',label:'South Africa',flag:'ðŸ‡¿ðŸ‡¦'},{code:'RU',label:'Russia',flag:'ðŸ‡·ðŸ‡º'}// Add more countries as needed\n];// City data (would be fetched based on country selection in a real implementation)\nconst getCitiesByCountry=countryCode=>{const citiesByCountry={'US':['New York','Los Angeles','Chicago','Houston','Phoenix','Philadelphia'],'CA':['Toronto','Montreal','Vancouver','Calgary','Ottawa','Edmonton'],'GB':['London','Birmingham','Manchester','Glasgow','Liverpool','Edinburgh'],'AU':['Sydney','Melbourne','Brisbane','Perth','Adelaide','Gold Coast'],'IN':['Mumbai','Delhi','Bangalore','Hyderabad','Chennai','Kolkata']// Add more cities as needed\n};return citiesByCountry[countryCode]||[];};// Motivation options\nconst motivations=['Get into a top college','Qualify for scholarships','Improve overall academic standing','Boost Math score','Boost Reading/Writing score','Personal goal','Parent requirement','School requirement','Other'];// Gradients for each step\nconst gradients=['linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)',// Step 1\n'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)',// Step 2\n'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)',// Step 3\n'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)',// Step 4\n'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)',// Step 5\n'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)',// Step 6\n'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)',// Step 7\n'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)',// Step 8\n'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)'// Step 9 (Subscription)\n];// Custom styles for better text readability based on dark theme best practices\nconst textStyles={heading:{color:'rgba(255, 255, 255, 0.87)',// High-emphasis text at 87% opacity\ntextShadow:'0 1px 2px rgba(0,0,0,0.2)'},subheading:{color:'rgba(255, 255, 255, 0.87)',// High-emphasis text at 87% opacity\nopacity:0.9},body:{color:'rgba(255, 255, 255, 0.7)'// Medium-emphasis text at 70% opacity\n},label:{color:'rgba(255, 255, 255, 0.87)',// High-emphasis text at 87% opacity\nfontWeight:500},secondary:{color:'rgba(255, 255, 255, 0.6)'// Secondary text at 60% opacity\n},disabled:{color:'rgba(255, 255, 255, 0.38)'// Disabled text at 38% opacity\n},accent:{color:'rgba(136, 212, 152, 0.9)'// Desaturated accent color\n}};const OnboardingFlow=()=>{const navigate=useNavigate();const[activeStep,setActiveStep]=useState(0);const[loading,setLoading]=useState(false);const[cities,setCities]=useState([]);const[direction,setDirection]=useState('forward');const[processingReport,setProcessingReport]=useState(false);// Form data\nconst[data,setData]=useState({firstName:'',lastName:'',age:'',country:null,city:null,satScore:'',targetSatScore:1200,motivation:'',scoreReport:'',hasSatScoreReport:false,generatedQuestions:[],scoreReportFile:undefined});// Validation states\nconst[errors,setErrors]=useState({firstName:false,lastName:false,age:false,country:false,city:false,satScore:false,motivation:false});// Animation for step transitions\nconst fadeProps=useSpring({from:{opacity:0,transform:\"translateX(\".concat(direction==='forward'?'50px':'-50px',\")\")},to:{opacity:1,transform:'translateX(0px)'},config:{tension:280,friction:60}});// Create a theme override for form inputs to ensure proper contrast\nconst darkTheme=createTheme({palette:{mode:'dark',primary:{main:'rgba(136, 212, 152, 0.9)'},text:{primary:'rgba(255, 255, 255, 0.87)',secondary:'rgba(255, 255, 255, 0.6)'},background:{paper:'rgba(30, 30, 30, 0.8)',default:'rgba(18, 18, 18, 0.95)'}},components:{MuiInputBase:{styleOverrides:{input:{color:'rgba(255, 255, 255, 0.87)'},root:{backgroundColor:'rgba(30, 30, 30, 0.4)'}}},MuiOutlinedInput:{styleOverrides:{root:{'&:hover .MuiOutlinedInput-notchedOutline':{borderColor:'rgba(136, 212, 152, 0.5)'},'&.Mui-focused .MuiOutlinedInput-notchedOutline':{borderColor:'rgba(136, 212, 152, 0.8)'}},notchedOutline:{borderColor:'rgba(255, 255, 255, 0.23)'}}},MuiFormLabel:{styleOverrides:{root:{color:'rgba(255, 255, 255, 0.6)','&.Mui-focused':{color:'rgba(136, 212, 152, 0.8)'}}}}}});// Load saved progress from localStorage\nuseEffect(()=>{const savedData=localStorage.getItem('onboardingData');const savedStep=localStorage.getItem('onboardingStep');if(savedData){setData(JSON.parse(savedData));}if(savedStep){setActiveStep(parseInt(savedStep,10));}},[]);// Save progress to localStorage whenever data or step changes\nuseEffect(()=>{localStorage.setItem('onboardingData',JSON.stringify(data));localStorage.setItem('onboardingStep',activeStep.toString());},[data,activeStep]);// Update cities when country changes\nuseEffect(()=>{if(data.country){const countryData=countries.find(c=>c.label===data.country);if(countryData){setCities(getCitiesByCountry(countryData.code));}}},[data.country]);const validateStep=()=>{switch(activeStep){case 0:// First Name & Last Name\nconst firstNameError=!data.firstName.trim();const lastNameError=!data.lastName.trim();setErrors(_objectSpread(_objectSpread({},errors),{},{firstName:firstNameError,lastName:lastNameError}));return!firstNameError&&!lastNameError;case 1:// Age\nconst ageError=!data.age||isNaN(parseInt(data.age))||parseInt(data.age)<13||parseInt(data.age)>100;setErrors(_objectSpread(_objectSpread({},errors),{},{age:ageError}));return!ageError;case 2:// Country & City\nconst countryError=!data.country;const cityError=!data.city;setErrors(_objectSpread(_objectSpread({},errors),{},{country:countryError,city:cityError}));return!countryError&&!cityError;case 3:// SAT Score\nif(data.hasSatScoreReport)return true;// Skip validation if they'll upload/paste later\nconst satScoreError=!data.satScore||isNaN(parseInt(data.satScore))||parseInt(data.satScore)<400||parseInt(data.satScore)>1600;setErrors(_objectSpread(_objectSpread({},errors),{},{satScore:satScoreError}));return!satScoreError;case 4:// Target SAT Score\nreturn true;// Always valid since slider has defaults\ncase 5:// Motivation\nconst motivationError=!data.motivation;setErrors(_objectSpread(_objectSpread({},errors),{},{motivation:motivationError}));return!motivationError;case 6:// SAT Score Report\nreturn true;// Optional, so always valid\ncase 7:// Review\nreturn true;// Just a review, so always valid\ncase 8:// Subscription Plan\nreturn!!data.subscriptionPlan;// Valid if a plan is selected\ndefault:return true;}};const handleNext=async()=>{if(!validateStep())return;setDirection('forward');// Special handling for the score report step to generate questions\nif(activeStep===6){var _data$generatedQuesti,_data$generatedQuesti2;if(data.scoreReport&&!((_data$generatedQuesti=data.generatedQuestions)!==null&&_data$generatedQuesti!==void 0&&_data$generatedQuesti.length)||data.scoreReportFile&&!((_data$generatedQuesti2=data.generatedQuestions)!==null&&_data$generatedQuesti2!==void 0&&_data$generatedQuesti2.length)){try{setProcessingReport(true);// Generate questions from the score report text or file\nlet questions;if(data.scoreReportFile){questions=await generateQuestionsFromMistakes(data.scoreReportFile);}else if(data.scoreReport){questions=await generateQuestionsFromMistakes(data.scoreReport);}setData(_objectSpread(_objectSpread({},data),{},{generatedQuestions:questions}));setProcessingReport(false);}catch(error){console.error(\"Error generating questions:\",error);setProcessingReport(false);}}}setActiveStep(prevStep=>prevStep+1);};const handleBack=()=>{setDirection('backward');setActiveStep(prevStep=>prevStep-1);};const handleInputChange=e=>{const{name,value}=e.target;setData(_objectSpread(_objectSpread({},data),{},{[name]:value}));};const handleSubmit=async()=>{console.log(\"Starting onboarding submission process\");setLoading(true);try{// Get current user\nconst{data:{user}}=await supabase.auth.getUser();console.log(\"Current user:\",user);if(!user){toast.error('You must be logged in to complete onboarding');return;}// Check if user already has an onboarding entry\nconsole.log(\"Checking for existing onboarding entry for user:\",user.id);let existingData=null;try{const response=await supabase.from('user_onboarding').select('id').eq('user_id',user.id).single();existingData=response.data;const checkError=response.error;console.log(\"Existing onboarding data check result:\",{existingData,checkError});if(checkError&&checkError.code!=='PGRST116'){console.error('Error checking for existing onboarding record:',checkError);toast.error('Error saving your information');setLoading(false);return;}}catch(checkError){console.error('Exception checking for existing onboarding record:',checkError);toast.error('Error connecting to the database');setLoading(false);return;}// Store file if it exists\nlet fileUrl=data.scoreReportUrl;if(data.scoreReportFile&&!data.scoreReportUrl){const filePath=\"\".concat(user.id,\"/\").concat(Date.now(),\"_\").concat(data.scoreReportFile.name);const{error:storageError}=await supabase.storage.from('score-reports').upload(filePath,data.scoreReportFile);if(storageError){console.error('Error uploading file:',storageError);toast.error('Error uploading your score report');}else{const{data:{publicUrl}}=supabase.storage.from('score-reports').getPublicUrl(filePath);fileUrl=publicUrl;}}// Store onboarding data to Supabase\nconst onboardingData={user_id:user.id,first_name:data.firstName,last_name:data.lastName,age:parseInt(data.age),country:data.country||'',city:data.city||'',sat_score:data.satScore?parseInt(data.satScore):null,target_sat_score:data.targetSatScore,motivation:data.motivation,score_report_text:data.scoreReport,score_report_url:fileUrl,has_score_report:data.hasSatScoreReport,subscription_plan:data.subscriptionPlan||'free'};// Insert or update user onboarding data\nlet dbError;if(existingData){const{error}=await supabase.from('user_onboarding').update(onboardingData).eq('id',existingData.id);dbError=error;}else{const{error}=await supabase.from('user_onboarding').insert([onboardingData]);dbError=error;}if(dbError){console.error('Error saving onboarding data:',dbError);toast.error('Error saving your information');setLoading(false);return;}// Generate practice questions if there's a score report\nif(data.scoreReport){try{// Generate practice questions from the score report text\nconst questions=await generateQuestionsFromMistakes(data.scoreReport);if(questions&&questions.length>0){// Store questions in practice_questions table\nconst{error:questionsError}=await supabase.from('practice_questions').insert(questions.map(q=>({user_id:user.id,question_data:q,source:'onboarding',completed:false})));if(questionsError){console.error('Error storing practice questions:',questionsError);}else{console.log(\"Successfully created \".concat(questions.length,\" practice questions for the user\"));}}}catch(aiError){console.error('Error generating practice questions:',aiError);}}toast.success('Onboarding completed successfully!');// Redirect to dashboard - add delay to ensure toast is visible and state is updated\nsetTimeout(()=>{// Force navigation with window.location for a full page refresh in case of router issues\nwindow.location.href='/dashboard';},1000);return;// Early return to prevent further execution\n}catch(error){console.error('Error in onboarding submission:',error);toast.error('Error saving your information');}finally{setLoading(false);}};// Add a useDropzone hook for file handling\nconst{getRootProps,getInputProps}=useDropzone({accept:{'application/pdf':['.pdf']},onDrop:acceptedFiles=>{if(acceptedFiles.length>0){setData(_objectSpread(_objectSpread({},data),{},{scoreReportFile:acceptedFiles[0]}));}}});// Render different step content based on activeStep\nconst getStepContent=()=>{switch(activeStep){case 0:// Name\nreturn/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",align:\"center\",gutterBottom:true,sx:textStyles.heading,children:\"Let's get to know you better\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",align:\"center\",paragraph:true,sx:textStyles.body,children:\"We'll personalize your learning experience based on your information.\"})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"First Name\",name:\"firstName\",value:data.firstName,onChange:handleInputChange,error:errors.firstName,helperText:errors.firstName?'First name is required':'',variant:\"outlined\",autoFocus:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Last Name\",name:\"lastName\",value:data.lastName,onChange:handleInputChange,error:errors.lastName,helperText:errors.lastName?'Last name is required':'',variant:\"outlined\"})})]});case 1:// Age\nreturn/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",align:\"center\",gutterBottom:true,sx:textStyles.heading,children:\"How old are you?\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",align:\"center\",paragraph:true,sx:textStyles.body,children:\"We use this to customize content appropriate for your age group.\"})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,sx:{mx:'auto'},children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Age\",name:\"age\",type:\"number\",value:data.age,onChange:handleInputChange,error:errors.age,helperText:errors.age?'Please enter a valid age (13-100)':'',variant:\"outlined\",InputProps:{inputProps:{min:13,max:100}}})})]});case 2:// Location\nreturn/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",align:\"center\",gutterBottom:true,sx:textStyles.heading,children:\"Where are you located?\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",align:\"center\",paragraph:true,sx:textStyles.body,children:\"We'll use this to provide region-specific resources and recommendations.\"})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(Autocomplete,{options:countries,getOptionLabel:option=>\"\".concat(option.flag,\" \").concat(option.label),onChange:(_,newValue)=>{setData(_objectSpread(_objectSpread({},data),{},{country:newValue?newValue.label:null,city:null// Reset city when country changes\n}));},value:countries.find(c=>c.label===data.country)||null,renderInput:params=>/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"Country\",error:errors.country,helperText:errors.country?'Country is required':'',variant:\"outlined\"}))})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(Autocomplete,{options:cities,getOptionLabel:option=>option,onChange:(_,newValue)=>{setData(_objectSpread(_objectSpread({},data),{},{city:newValue}));},value:data.city,disabled:!data.country,renderInput:params=>/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"City\",error:errors.city,helperText:errors.city?'City is required':'',variant:\"outlined\"}))})})]});case 3:// Current SAT Score\nreturn/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",align:\"center\",gutterBottom:true,sx:textStyles.heading,children:\"What's your current SAT score?\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",align:\"center\",paragraph:true,sx:textStyles.body,children:\"If you haven't taken the SAT yet or don't know your score, we'll help you upload or enter it later.\"})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:data.hasSatScoreReport,onChange:e=>setData(_objectSpread(_objectSpread({},data),{},{hasSatScoreReport:e.target.checked}))}),label:\"I'll upload/paste my SAT score report later\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:8,sx:{mx:'auto'},children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"SAT Score\",name:\"satScore\",type:\"number\",value:data.satScore,onChange:handleInputChange,error:errors.satScore&&!data.hasSatScoreReport,helperText:errors.satScore&&!data.hasSatScoreReport?'Please enter a valid SAT score (400-1600)':'',variant:\"outlined\",disabled:data.hasSatScoreReport,InputProps:{inputProps:{min:400,max:1600}}})})]});case 4:// Target SAT Score\nreturn/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",align:\"center\",gutterBottom:true,sx:textStyles.heading,children:\"What's your target SAT score?\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",align:\"center\",paragraph:true,sx:textStyles.body,children:\"Setting a goal helps us customize your learning path.\"})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:8,sx:{mx:'auto'},children:/*#__PURE__*/_jsx(Box,{sx:{px:3},children:/*#__PURE__*/_jsx(Slider,{value:data.targetSatScore,min:1000,max:1600,step:10,marks:[{value:1000,label:'1000'},{value:1200,label:'1200'},{value:1400,label:'1400'},{value:1600,label:'1600'}],onChange:(_,newValue)=>setData(_objectSpread(_objectSpread({},data),{},{targetSatScore:newValue})),valueLabelDisplay:\"on\"})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sx:{textAlign:'center'},children:/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",sx:_objectSpread(_objectSpread({},textStyles.subheading),{},{color:'#88d498'}),children:[\"Target Score: \",data.targetSatScore]})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sx:{textAlign:'center'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",sx:textStyles.body,children:\"Or choose a preset target:\"}),/*#__PURE__*/_jsxs(Box,{sx:{mt:2},children:[/*#__PURE__*/_jsx(Button,{variant:data.targetSatScore===1000?\"contained\":\"outlined\",sx:{mx:1},onClick:()=>setData(_objectSpread(_objectSpread({},data),{},{targetSatScore:1000})),children:\"1000\"}),/*#__PURE__*/_jsx(Button,{variant:data.targetSatScore===1200?\"contained\":\"outlined\",sx:{mx:1},onClick:()=>setData(_objectSpread(_objectSpread({},data),{},{targetSatScore:1200})),children:\"1200\"}),/*#__PURE__*/_jsx(Button,{variant:data.targetSatScore===1400?\"contained\":\"outlined\",sx:{mx:1},onClick:()=>setData(_objectSpread(_objectSpread({},data),{},{targetSatScore:1400})),children:\"1400\"}),/*#__PURE__*/_jsx(Button,{variant:data.targetSatScore===1550?\"contained\":\"outlined\",sx:{mx:1},onClick:()=>setData(_objectSpread(_objectSpread({},data),{},{targetSatScore:1550})),children:\"1500+\"})]})]})]});case 5:// Motivation\nreturn/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",align:\"center\",gutterBottom:true,sx:textStyles.heading,children:\"What's your primary motivation for improving your SAT score?\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",align:\"center\",paragraph:true,sx:textStyles.body,children:\"This helps us understand your goals and tailor our guidance.\"})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(FormControl,{component:\"fieldset\",error:errors.motivation,children:[/*#__PURE__*/_jsx(RadioGroup,{name:\"motivation\",value:data.motivation,onChange:handleInputChange,children:motivations.map(motivation=>/*#__PURE__*/_jsx(FormControlLabel,{value:motivation,control:/*#__PURE__*/_jsx(Radio,{}),label:motivation},motivation))}),errors.motivation&&/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"error\",children:\"Please select a motivation\"})]})})]});case 6:// SAT Score Report (Copy/Paste)\nreturn/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",align:\"center\",gutterBottom:true,sx:textStyles.heading,children:\"Copy & Paste your SAT Score Report\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",align:\"center\",paragraph:true,sx:textStyles.body,children:\"This will help us analyze your strengths and weaknesses in detail.\"})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,multiline:true,rows:8,name:\"scoreReport\",value:data.scoreReport,onChange:handleInputChange,placeholder:\"Paste the content from your SAT score report PDF here...\",variant:\"outlined\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",align:\"center\",sx:_objectSpread(_objectSpread({},textStyles.subheading),{},{mt:3,mb:2}),children:\"OR\"})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body1\",align:\"center\",sx:_objectSpread(_objectSpread({},textStyles.body),{},{mb:2}),children:\"Upload your SAT score report PDF\"}),/*#__PURE__*/_jsxs(Box,_objectSpread(_objectSpread({sx:{border:'2px dashed rgba(136, 212, 152, 0.6)',borderRadius:2,p:3,textAlign:'center',cursor:'pointer',background:'rgba(18, 18, 18, 0.4)',// Using recommended dark theme surface color\n'&:hover':{borderColor:'rgba(136, 212, 152, 0.8)',background:'rgba(30, 58, 52, 0.4)'// Slightly lighter on hover\n}}},getRootProps()),{},{children:[/*#__PURE__*/_jsx(\"input\",_objectSpread({},getInputProps())),/*#__PURE__*/_jsx(CloudUploadIcon,{fontSize:\"large\",sx:{color:'rgba(136, 212, 152, 0.8)',mb:2}}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",gutterBottom:true,sx:textStyles.body,children:\"Drag & drop a PDF file here, or click to select a file\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:textStyles.secondary,children:\"Supports PDF files only\"}),data.scoreReportFile&&/*#__PURE__*/_jsx(Box,{sx:{mt:2,p:1,bgcolor:'rgba(30, 58, 52, 0.4)',borderRadius:1,border:'1px solid rgba(136, 212, 152, 0.3)'},children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:textStyles.body,children:[\"Selected: \",data.scoreReportFile.name]})})]}))]}),processingReport&&/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sx:{textAlign:'center',mt:2},children:[/*#__PURE__*/_jsx(CircularProgress,{size:30,sx:{color:'rgba(136, 212, 152, 0.8)'}}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:textStyles.secondary,children:\"Processing your report to generate personalized practice questions...\"})]})]});case 7:// Review & Submit\nreturn/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",align:\"center\",gutterBottom:true,sx:textStyles.heading,children:\"Review Your Information\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",align:\"center\",paragraph:true,sx:textStyles.body,children:\"Please verify that everything is correct before proceeding.\"})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Paper,{elevation:2,sx:{p:3,background:'rgba(24, 24, 24, 0.7)',// Slightly lighter than the main surface for elevation\nboxShadow:'0 4px 20px rgba(0, 0, 0, 0.2)',borderRadius:2},children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",sx:textStyles.label,children:\"Name:\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",gutterBottom:true,sx:textStyles.body,children:[data.firstName,\" \",data.lastName]})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",sx:textStyles.label,children:\"Age:\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",gutterBottom:true,sx:textStyles.body,children:data.age})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",sx:textStyles.label,children:\"Location:\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",gutterBottom:true,sx:textStyles.body,children:[data.city,\", \",data.country]})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",sx:textStyles.label,children:\"Current SAT Score:\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",gutterBottom:true,sx:textStyles.body,children:data.hasSatScoreReport?'To be provided later':data.satScore})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",sx:textStyles.label,children:\"Target SAT Score:\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",gutterBottom:true,sx:textStyles.body,children:data.targetSatScore})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",sx:textStyles.label,children:\"Motivation:\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",gutterBottom:true,sx:textStyles.body,children:data.motivation})]}),data.scoreReport&&/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",sx:textStyles.label,children:\"SAT Score Report:\"}),/*#__PURE__*/_jsx(Paper,{variant:\"outlined\",sx:{p:2,maxHeight:'100px',overflow:'auto',background:'rgba(30, 30, 30, 0.8)',// Even lighter surface for nested elevation\nborderColor:'rgba(136, 212, 152, 0.2)'},children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:_objectSpread(_objectSpread({whiteSpace:'pre-wrap'},textStyles.body),{},{fontSize:'0.85rem'}),children:data.scoreReport.length>200?data.scoreReport.substring(0,200)+'...':data.scoreReport})})]})]})})})]});case 8:// Subscription\nreturn/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",align:\"center\",gutterBottom:true,sx:textStyles.heading,children:\"Choose Your Plan\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",align:\"center\",paragraph:true,sx:textStyles.body,children:\"Select the subscription plan that works best for you.\"})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(SubscriptionPlans,{onSelectPlan:planType=>{setData(_objectSpread(_objectSpread({},data),{},{subscriptionPlan:planType}));}})})]});default:return null;}};// Steps for the stepper\nconst steps=['Name','Age','Location','Current Score','Target Score','Motivation','Score Report','Review','Subscription'];// Background style for current step\nconst getBackgroundStyle=()=>{return{background:'linear-gradient(135deg, #121212 0%, #1e3a34 100%)',// Using recommended dark theme surface color\nbackgroundSize:'200% 200%',animation:'gradient 15s ease infinite',height:'100%',minHeight:'100vh',transition:'background 0.5s ease-in-out',display:'flex',flexDirection:'column','@keyframes gradient':{'0%':{backgroundPosition:'0% 50%'},'50%':{backgroundPosition:'100% 50%'},'100%':{backgroundPosition:'0% 50%'}}};};if(loading){return/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',minHeight:'100vh',background:'linear-gradient(135deg, #121212 0%, #1e3a34 100%)'// Using recommended dark theme surface color\n},children:[/*#__PURE__*/_jsx(CircularProgress,{size:60,sx:{color:'rgba(136, 212, 152, 0.9)'}}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:_objectSpread({mt:3},textStyles.heading),children:\"Saving your information and preparing your custom experience...\"})]});}return/*#__PURE__*/_jsx(ThemeProvider,{theme:darkTheme,children:/*#__PURE__*/_jsx(Box,{sx:getBackgroundStyle(),children:/*#__PURE__*/_jsx(Container,{maxWidth:\"md\",sx:{py:8},children:/*#__PURE__*/_jsxs(Paper,{elevation:3,sx:{p:{xs:2,sm:4},borderRadius:2,background:'rgba(33, 33, 33, 0.95)',backdropFilter:'blur(10px)',boxShadow:'0 8px 32px rgba(0, 0, 0, 0.3)',color:'rgba(255, 255, 255, 0.87)'},children:[/*#__PURE__*/_jsx(Stepper,{activeStep:activeStep,alternativeLabel:true,sx:{mb:4,display:{xs:'none',md:'flex'}},children:steps.map(label=>/*#__PURE__*/_jsx(Step,{children:/*#__PURE__*/_jsx(StepLabel,{children:label})},label))}),/*#__PURE__*/_jsx(Box,{sx:{mb:4,display:{xs:'block',md:'none'},textAlign:'center'},children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:textStyles.body,children:[\"Step \",activeStep+1,\" of \",steps.length,\": \",steps[activeStep]]})}),/*#__PURE__*/_jsx(animated.div,{style:fadeProps,children:/*#__PURE__*/_jsx(Box,{sx:{minHeight:'300px',mb:4},children:getStepContent()})}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',pt:2},children:[/*#__PURE__*/_jsx(Button,{color:\"inherit\",disabled:activeStep===0,onClick:handleBack,startIcon:/*#__PURE__*/_jsx(ArrowBackIcon,{}),sx:{color:'rgba(255, 255, 255, 0.87)','&:hover':{backgroundColor:'rgba(255, 255, 255, 0.08)'}},style:{opacity:activeStep===0?0:1},children:\"Back\"}),activeStep===steps.length-1?/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:handleSubmit,endIcon:/*#__PURE__*/_jsx(CheckCircleOutlineIcon,{}),sx:{background:'linear-gradient(90deg, #1a936f 0%, #114b5f 100%)',color:'rgba(255, 255, 255, 0.95)',fontWeight:500,padding:'10px 24px','&:hover':{background:'linear-gradient(90deg, #114b5f 0%, #1a936f 100%)',boxShadow:'0 4px 20px rgba(0, 0, 0, 0.25)'}},children:\"Complete & Go to Dashboard\"}):/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:handleNext,endIcon:/*#__PURE__*/_jsx(ArrowForwardIcon,{}),disabled:activeStep===6&&processingReport,sx:{background:'linear-gradient(90deg, #1a936f 0%, #114b5f 100%)',color:'rgba(255, 255, 255, 0.95)',fontWeight:500,padding:'10px 24px','&:hover':{background:'linear-gradient(90deg, #114b5f 0%, #1a936f 100%)',boxShadow:'0 4px 20px rgba(0, 0, 0, 0.25)'},'&.Mui-disabled':{background:'rgba(136, 212, 152, 0.2)',color:'rgba(255, 255, 255, 0.38)'}},children:\"Next\"})]})]})})})});};export default OnboardingFlow;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Box","Container","Typography","Button","TextField","Stepper","Step","StepLabel","Paper","Grid","Autocomplete","FormControl","FormControlLabel","RadioGroup","Radio","Slider","CircularProgress","Checkbox","useDropzone","CloudUploadIcon","ArrowBackIcon","ArrowForwardIcon","CheckCircleOutlineIcon","useSpring","animated","supabase","SubscriptionPlans","generateQuestionsFromMistakes","toast","createTheme","ThemeProvider","jsx","_jsx","jsxs","_jsxs","countries","code","label","flag","getCitiesByCountry","countryCode","citiesByCountry","motivations","gradients","textStyles","heading","color","textShadow","subheading","opacity","body","fontWeight","secondary","disabled","accent","OnboardingFlow","navigate","activeStep","setActiveStep","loading","setLoading","cities","setCities","direction","setDirection","processingReport","setProcessingReport","data","setData","firstName","lastName","age","country","city","satScore","targetSatScore","motivation","scoreReport","hasSatScoreReport","generatedQuestions","scoreReportFile","undefined","errors","setErrors","fadeProps","from","transform","concat","to","config","tension","friction","darkTheme","palette","mode","primary","main","text","background","paper","default","components","MuiInputBase","styleOverrides","input","root","backgroundColor","MuiOutlinedInput","borderColor","notchedOutline","MuiFormLabel","savedData","localStorage","getItem","savedStep","JSON","parse","parseInt","setItem","stringify","toString","countryData","find","c","validateStep","firstNameError","trim","lastNameError","_objectSpread","ageError","isNaN","countryError","cityError","satScoreError","motivationError","subscriptionPlan","handleNext","_data$generatedQuesti","_data$generatedQuesti2","length","questions","error","console","prevStep","handleBack","handleInputChange","e","name","value","target","handleSubmit","log","user","auth","getUser","id","existingData","response","select","eq","single","checkError","fileUrl","scoreReportUrl","filePath","Date","now","storageError","storage","upload","publicUrl","getPublicUrl","onboardingData","user_id","first_name","last_name","sat_score","target_sat_score","score_report_text","score_report_url","has_score_report","subscription_plan","dbError","update","insert","questionsError","map","q","question_data","source","completed","aiError","success","setTimeout","window","location","href","getRootProps","getInputProps","accept","onDrop","acceptedFiles","getStepContent","container","spacing","children","item","xs","variant","align","gutterBottom","sx","paragraph","sm","fullWidth","onChange","helperText","autoFocus","mx","type","InputProps","inputProps","min","max","options","getOptionLabel","option","_","newValue","renderInput","params","control","checked","md","px","step","marks","valueLabelDisplay","textAlign","mt","onClick","component","multiline","rows","placeholder","mb","border","borderRadius","p","cursor","fontSize","bgcolor","size","elevation","boxShadow","maxHeight","overflow","whiteSpace","substring","onSelectPlan","planType","steps","getBackgroundStyle","backgroundSize","animation","height","minHeight","transition","display","flexDirection","backgroundPosition","alignItems","justifyContent","theme","maxWidth","py","backdropFilter","alternativeLabel","div","style","pt","startIcon","endIcon","padding"],"sources":["/Users/gerardo/Downloads/Bonsaito/src/components/OnboardingFlow.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { \n  Box, \n  Container, \n  Typography, \n  Button, \n  TextField, \n  Stepper, \n  Step, \n  StepLabel, \n  Paper, \n  Grid, \n  Autocomplete, \n  FormControl, \n  FormControlLabel, \n  RadioGroup, \n  Radio, \n  Slider, \n  CircularProgress,\n  TextareaAutosize,\n  Checkbox\n} from '@mui/material';\nimport { useDropzone } from 'react-dropzone';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport { useSpring, animated } from 'react-spring';\nimport { supabase } from '../supabaseClient';\nimport PdfUploader from './PdfUploader';\nimport SubscriptionPlans from './SubscriptionPlans';\nimport { generateQuestionsFromMistakes } from '../services/geminiPdfService';\nimport { toast } from 'react-toastify';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\n// Country data with flags (simplified version for this example)\nconst countries = [\n  { code: 'US', label: 'United States', flag: 'ðŸ‡ºðŸ‡¸' },\n  { code: 'CA', label: 'Canada', flag: 'ðŸ‡¨ðŸ‡¦' },\n  { code: 'GB', label: 'United Kingdom', flag: 'ðŸ‡¬ðŸ‡§' },\n  { code: 'AU', label: 'Australia', flag: 'ðŸ‡¦ðŸ‡º' },\n  { code: 'IN', label: 'India', flag: 'ðŸ‡®ðŸ‡³' },\n  { code: 'CN', label: 'China', flag: 'ðŸ‡¨ðŸ‡³' },\n  { code: 'JP', label: 'Japan', flag: 'ðŸ‡¯ðŸ‡µ' },\n  { code: 'DE', label: 'Germany', flag: 'ðŸ‡©ðŸ‡ª' },\n  { code: 'FR', label: 'France', flag: 'ðŸ‡«ðŸ‡·' },\n  { code: 'IT', label: 'Italy', flag: 'ðŸ‡®ðŸ‡¹' },\n  { code: 'ES', label: 'Spain', flag: 'ðŸ‡ªðŸ‡¸' },\n  { code: 'MX', label: 'Mexico', flag: 'ðŸ‡²ðŸ‡½' },\n  { code: 'BR', label: 'Brazil', flag: 'ðŸ‡§ðŸ‡·' },\n  { code: 'ZA', label: 'South Africa', flag: 'ðŸ‡¿ðŸ‡¦' },\n  { code: 'RU', label: 'Russia', flag: 'ðŸ‡·ðŸ‡º' },\n  // Add more countries as needed\n];\n\n// City data (would be fetched based on country selection in a real implementation)\nconst getCitiesByCountry = (countryCode: string) => {\n  const citiesByCountry: { [key: string]: string[] } = {\n    'US': ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Philadelphia'],\n    'CA': ['Toronto', 'Montreal', 'Vancouver', 'Calgary', 'Ottawa', 'Edmonton'],\n    'GB': ['London', 'Birmingham', 'Manchester', 'Glasgow', 'Liverpool', 'Edinburgh'],\n    'AU': ['Sydney', 'Melbourne', 'Brisbane', 'Perth', 'Adelaide', 'Gold Coast'],\n    'IN': ['Mumbai', 'Delhi', 'Bangalore', 'Hyderabad', 'Chennai', 'Kolkata'],\n    // Add more cities as needed\n  };\n  return citiesByCountry[countryCode] || [];\n};\n\n// Motivation options\nconst motivations = [\n  'Get into a top college',\n  'Qualify for scholarships',\n  'Improve overall academic standing',\n  'Boost Math score',\n  'Boost Reading/Writing score',\n  'Personal goal',\n  'Parent requirement',\n  'School requirement',\n  'Other'\n];\n\ninterface OnboardingData {\n  firstName: string;\n  lastName: string;\n  age: string;\n  country: string | null;\n  city: string | null;\n  satScore: string;\n  targetSatScore: number;\n  motivation: string;\n  scoreReport: string;\n  hasSatScoreReport: boolean;\n  scoreReportUrl?: string;\n  subscriptionPlan?: 'free' | 'pro';\n  generatedQuestions?: any[];\n  scoreReportFile?: File;\n}\n\n// Gradients for each step\nconst gradients = [\n  'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)', // Step 1\n  'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)', // Step 2\n  'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)', // Step 3\n  'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)', // Step 4\n  'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)', // Step 5\n  'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)', // Step 6\n  'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)', // Step 7\n  'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)', // Step 8\n  'linear-gradient(135deg, #0c3b2e 0%, #18514a 100%)', // Step 9 (Subscription)\n];\n\n// Custom styles for better text readability based on dark theme best practices\nconst textStyles = {\n  heading: {\n    color: 'rgba(255, 255, 255, 0.87)', // High-emphasis text at 87% opacity\n    textShadow: '0 1px 2px rgba(0,0,0,0.2)'\n  },\n  subheading: {\n    color: 'rgba(255, 255, 255, 0.87)', // High-emphasis text at 87% opacity\n    opacity: 0.9\n  },\n  body: {\n    color: 'rgba(255, 255, 255, 0.7)' // Medium-emphasis text at 70% opacity\n  },\n  label: {\n    color: 'rgba(255, 255, 255, 0.87)',  // High-emphasis text at 87% opacity\n    fontWeight: 500\n  },\n  secondary: {\n    color: 'rgba(255, 255, 255, 0.6)' // Secondary text at 60% opacity\n  },\n  disabled: {\n    color: 'rgba(255, 255, 255, 0.38)' // Disabled text at 38% opacity\n  },\n  accent: {\n    color: 'rgba(136, 212, 152, 0.9)' // Desaturated accent color\n  }\n};\n\nconst OnboardingFlow: React.FC = () => {\n  const navigate = useNavigate();\n  const [activeStep, setActiveStep] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [cities, setCities] = useState<string[]>([]);\n  const [direction, setDirection] = useState<'forward' | 'backward'>('forward');\n  const [processingReport, setProcessingReport] = useState(false);\n  \n  // Form data\n  const [data, setData] = useState<OnboardingData>({\n    firstName: '',\n    lastName: '',\n    age: '',\n    country: null,\n    city: null,\n    satScore: '',\n    targetSatScore: 1200,\n    motivation: '',\n    scoreReport: '',\n    hasSatScoreReport: false,\n    generatedQuestions: [],\n    scoreReportFile: undefined\n  });\n\n  // Validation states\n  const [errors, setErrors] = useState({\n    firstName: false,\n    lastName: false,\n    age: false,\n    country: false,\n    city: false,\n    satScore: false,\n    motivation: false\n  });\n\n  // Animation for step transitions\n  const fadeProps = useSpring({\n    from: { \n      opacity: 0, \n      transform: `translateX(${direction === 'forward' ? '50px' : '-50px'})` \n    },\n    to: { \n      opacity: 1, \n      transform: 'translateX(0px)' \n    },\n    config: { tension: 280, friction: 60 }\n  });\n\n  // Create a theme override for form inputs to ensure proper contrast\n  const darkTheme = createTheme({\n    palette: {\n      mode: 'dark',\n      primary: {\n        main: 'rgba(136, 212, 152, 0.9)',\n      },\n      text: {\n        primary: 'rgba(255, 255, 255, 0.87)',\n        secondary: 'rgba(255, 255, 255, 0.6)',\n      },\n      background: {\n        paper: 'rgba(30, 30, 30, 0.8)',\n        default: 'rgba(18, 18, 18, 0.95)',\n      },\n    },\n    components: {\n      MuiInputBase: {\n        styleOverrides: {\n          input: {\n            color: 'rgba(255, 255, 255, 0.87)',\n          },\n          root: {\n            backgroundColor: 'rgba(30, 30, 30, 0.4)',\n          }\n        },\n      },\n      MuiOutlinedInput: {\n        styleOverrides: {\n          root: {\n            '&:hover .MuiOutlinedInput-notchedOutline': {\n              borderColor: 'rgba(136, 212, 152, 0.5)',\n            },\n            '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n              borderColor: 'rgba(136, 212, 152, 0.8)',\n            },\n          },\n          notchedOutline: {\n            borderColor: 'rgba(255, 255, 255, 0.23)',\n          },\n        },\n      },\n      MuiFormLabel: {\n        styleOverrides: {\n          root: {\n            color: 'rgba(255, 255, 255, 0.6)',\n            '&.Mui-focused': {\n              color: 'rgba(136, 212, 152, 0.8)',\n            },\n          },\n        },\n      },\n    },\n  });\n\n  // Load saved progress from localStorage\n  useEffect(() => {\n    const savedData = localStorage.getItem('onboardingData');\n    const savedStep = localStorage.getItem('onboardingStep');\n    \n    if (savedData) {\n      setData(JSON.parse(savedData));\n    }\n    \n    if (savedStep) {\n      setActiveStep(parseInt(savedStep, 10));\n    }\n  }, []);\n\n  // Save progress to localStorage whenever data or step changes\n  useEffect(() => {\n    localStorage.setItem('onboardingData', JSON.stringify(data));\n    localStorage.setItem('onboardingStep', activeStep.toString());\n  }, [data, activeStep]);\n\n  // Update cities when country changes\n  useEffect(() => {\n    if (data.country) {\n      const countryData = countries.find(c => c.label === data.country);\n      if (countryData) {\n        setCities(getCitiesByCountry(countryData.code));\n      }\n    }\n  }, [data.country]);\n\n  const validateStep = () => {\n    switch (activeStep) {\n      case 0: // First Name & Last Name\n        const firstNameError = !data.firstName.trim();\n        const lastNameError = !data.lastName.trim();\n        setErrors({...errors, firstName: firstNameError, lastName: lastNameError});\n        return !firstNameError && !lastNameError;\n      \n      case 1: // Age\n        const ageError = !data.age || isNaN(parseInt(data.age)) || parseInt(data.age) < 13 || parseInt(data.age) > 100;\n        setErrors({...errors, age: ageError});\n        return !ageError;\n      \n      case 2: // Country & City\n        const countryError = !data.country;\n        const cityError = !data.city;\n        setErrors({...errors, country: countryError, city: cityError});\n        return !countryError && !cityError;\n      \n      case 3: // SAT Score\n        if (data.hasSatScoreReport) return true; // Skip validation if they'll upload/paste later\n        const satScoreError = !data.satScore || isNaN(parseInt(data.satScore)) || \n                            parseInt(data.satScore) < 400 || parseInt(data.satScore) > 1600;\n        setErrors({...errors, satScore: satScoreError});\n        return !satScoreError;\n      \n      case 4: // Target SAT Score\n        return true; // Always valid since slider has defaults\n      \n      case 5: // Motivation\n        const motivationError = !data.motivation;\n        setErrors({...errors, motivation: motivationError});\n        return !motivationError;\n      \n      case 6: // SAT Score Report\n        return true; // Optional, so always valid\n      \n      case 7: // Review\n        return true; // Just a review, so always valid\n        \n      case 8: // Subscription Plan\n        return !!data.subscriptionPlan; // Valid if a plan is selected\n      \n      default:\n        return true;\n    }\n  };\n\n  const handleNext = async () => {\n    if (!validateStep()) return;\n    \n    setDirection('forward');\n    \n    // Special handling for the score report step to generate questions\n    if (activeStep === 6) {\n      if ((data.scoreReport && !data.generatedQuestions?.length) || \n          (data.scoreReportFile && !data.generatedQuestions?.length)) {\n        try {\n          setProcessingReport(true);\n          \n          // Generate questions from the score report text or file\n          let questions;\n          if (data.scoreReportFile) {\n            questions = await generateQuestionsFromMistakes(data.scoreReportFile);\n          } else if (data.scoreReport) {\n            questions = await generateQuestionsFromMistakes(data.scoreReport);\n          }\n          \n          setData({ ...data, generatedQuestions: questions });\n          setProcessingReport(false);\n        } catch (error) {\n          console.error(\"Error generating questions:\", error);\n          setProcessingReport(false);\n        }\n      }\n    }\n    \n    setActiveStep((prevStep) => prevStep + 1);\n  };\n\n  const handleBack = () => {\n    setDirection('backward');\n    setActiveStep((prevStep) => prevStep - 1);\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setData({ ...data, [name]: value });\n  };\n\n  const handleSubmit = async () => {\n    console.log(\"Starting onboarding submission process\");\n    setLoading(true);\n    \n    try {\n      // Get current user\n      const { data: { user } } = await supabase.auth.getUser();\n      console.log(\"Current user:\", user);\n      \n      if (!user) {\n        toast.error('You must be logged in to complete onboarding');\n        return;\n      }\n      \n      // Check if user already has an onboarding entry\n      console.log(\"Checking for existing onboarding entry for user:\", user.id);\n      let existingData = null;\n      \n      try {\n        const response = await supabase\n          .from('user_onboarding')\n          .select('id')\n          .eq('user_id', user.id)\n          .single();\n        \n        existingData = response.data;\n        const checkError = response.error;\n          \n        console.log(\"Existing onboarding data check result:\", { existingData, checkError });\n        \n        if (checkError && checkError.code !== 'PGRST116') {\n          console.error('Error checking for existing onboarding record:', checkError);\n          toast.error('Error saving your information');\n          setLoading(false);\n          return;\n        }\n      } catch (checkError) {\n        console.error('Exception checking for existing onboarding record:', checkError);\n        toast.error('Error connecting to the database');\n        setLoading(false);\n        return;\n      }\n      \n      // Store file if it exists\n      let fileUrl = data.scoreReportUrl;\n      \n      if (data.scoreReportFile && !data.scoreReportUrl) {\n        const filePath = `${user.id}/${Date.now()}_${data.scoreReportFile.name}`;\n        const { error: storageError } = await supabase.storage\n          .from('score-reports')\n          .upload(filePath, data.scoreReportFile);\n          \n        if (storageError) {\n          console.error('Error uploading file:', storageError);\n          toast.error('Error uploading your score report');\n        } else {\n          const { data: { publicUrl } } = supabase.storage\n            .from('score-reports')\n            .getPublicUrl(filePath);\n            \n          fileUrl = publicUrl;\n        }\n      }\n      \n      // Store onboarding data to Supabase\n      const onboardingData = {\n        user_id: user.id,\n        first_name: data.firstName,\n        last_name: data.lastName,\n        age: parseInt(data.age),\n        country: data.country || '',\n        city: data.city || '',\n        sat_score: data.satScore ? parseInt(data.satScore) : null,\n        target_sat_score: data.targetSatScore,\n        motivation: data.motivation,\n        score_report_text: data.scoreReport,\n        score_report_url: fileUrl,\n        has_score_report: data.hasSatScoreReport,\n        subscription_plan: data.subscriptionPlan || 'free'\n      };\n      \n      // Insert or update user onboarding data\n      let dbError;\n      if (existingData) {\n        const { error } = await supabase\n          .from('user_onboarding')\n          .update(onboardingData)\n          .eq('id', existingData.id);\n        dbError = error;\n      } else {\n        const { error } = await supabase\n          .from('user_onboarding')\n          .insert([onboardingData]);\n        dbError = error;\n      }\n      \n      if (dbError) {\n        console.error('Error saving onboarding data:', dbError);\n        toast.error('Error saving your information');\n        setLoading(false);\n        return;\n      }\n      \n      // Generate practice questions if there's a score report\n      if (data.scoreReport) {\n        try {\n          // Generate practice questions from the score report text\n          const questions = await generateQuestionsFromMistakes(data.scoreReport);\n          \n          if (questions && questions.length > 0) {\n            // Store questions in practice_questions table\n            const { error: questionsError } = await supabase\n              .from('practice_questions')\n              .insert(\n                questions.map(q => ({\n                  user_id: user.id,\n                  question_data: q,\n                  source: 'onboarding',\n                  completed: false\n                }))\n              );\n              \n            if (questionsError) {\n              console.error('Error storing practice questions:', questionsError);\n            } else {\n              console.log(`Successfully created ${questions.length} practice questions for the user`);\n            }\n          }\n        } catch (aiError) {\n          console.error('Error generating practice questions:', aiError);\n        }\n      }\n      \n      toast.success('Onboarding completed successfully!');\n      \n      // Redirect to dashboard - add delay to ensure toast is visible and state is updated\n      setTimeout(() => {\n        // Force navigation with window.location for a full page refresh in case of router issues\n        window.location.href = '/dashboard';\n      }, 1000);\n      \n      return; // Early return to prevent further execution\n    } catch (error) {\n      console.error('Error in onboarding submission:', error);\n      toast.error('Error saving your information');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add a useDropzone hook for file handling\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: {\n      'application/pdf': ['.pdf'],\n    },\n    onDrop: acceptedFiles => {\n      if (acceptedFiles.length > 0) {\n        setData({ ...data, scoreReportFile: acceptedFiles[0] });\n      }\n    }\n  });\n\n  // Render different step content based on activeStep\n  const getStepContent = () => {\n    switch (activeStep) {\n      case 0: // Name\n        return (\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant=\"h4\" align=\"center\" gutterBottom sx={textStyles.heading}>\n                Let's get to know you better\n              </Typography>\n              <Typography variant=\"body1\" align=\"center\" paragraph sx={textStyles.body}>\n                We'll personalize your learning experience based on your information.\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                label=\"First Name\"\n                name=\"firstName\"\n                value={data.firstName}\n                onChange={handleInputChange}\n                error={errors.firstName}\n                helperText={errors.firstName ? 'First name is required' : ''}\n                variant=\"outlined\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                label=\"Last Name\"\n                name=\"lastName\"\n                value={data.lastName}\n                onChange={handleInputChange}\n                error={errors.lastName}\n                helperText={errors.lastName ? 'Last name is required' : ''}\n                variant=\"outlined\"\n              />\n            </Grid>\n          </Grid>\n        );\n      \n      case 1: // Age\n        return (\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant=\"h4\" align=\"center\" gutterBottom sx={textStyles.heading}>\n                How old are you?\n              </Typography>\n              <Typography variant=\"body1\" align=\"center\" paragraph sx={textStyles.body}>\n                We use this to customize content appropriate for your age group.\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sm={6} sx={{ mx: 'auto' }}>\n              <TextField\n                fullWidth\n                label=\"Age\"\n                name=\"age\"\n                type=\"number\"\n                value={data.age}\n                onChange={handleInputChange}\n                error={errors.age}\n                helperText={errors.age ? 'Please enter a valid age (13-100)' : ''}\n                variant=\"outlined\"\n                InputProps={{ inputProps: { min: 13, max: 100 } }}\n              />\n            </Grid>\n          </Grid>\n        );\n      \n      case 2: // Location\n        return (\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant=\"h4\" align=\"center\" gutterBottom sx={textStyles.heading}>\n                Where are you located?\n              </Typography>\n              <Typography variant=\"body1\" align=\"center\" paragraph sx={textStyles.body}>\n                We'll use this to provide region-specific resources and recommendations.\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Autocomplete\n                options={countries}\n                getOptionLabel={(option) => `${option.flag} ${option.label}`}\n                onChange={(_, newValue) => {\n                  setData({ \n                    ...data, \n                    country: newValue ? newValue.label : null,\n                    city: null // Reset city when country changes\n                  });\n                }}\n                value={countries.find(c => c.label === data.country) || null}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Country\"\n                    error={errors.country}\n                    helperText={errors.country ? 'Country is required' : ''}\n                    variant=\"outlined\"\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Autocomplete\n                options={cities}\n                getOptionLabel={(option) => option}\n                onChange={(_, newValue) => {\n                  setData({ ...data, city: newValue });\n                }}\n                value={data.city}\n                disabled={!data.country}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"City\"\n                    error={errors.city}\n                    helperText={errors.city ? 'City is required' : ''}\n                    variant=\"outlined\"\n                  />\n                )}\n              />\n            </Grid>\n          </Grid>\n        );\n      \n      case 3: // Current SAT Score\n        return (\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant=\"h4\" align=\"center\" gutterBottom sx={textStyles.heading}>\n                What's your current SAT score?\n              </Typography>\n              <Typography variant=\"body1\" align=\"center\" paragraph sx={textStyles.body}>\n                If you haven't taken the SAT yet or don't know your score, we'll help you upload or enter it later.\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={\n                  <Checkbox \n                    checked={data.hasSatScoreReport} \n                    onChange={(e) => setData({ ...data, hasSatScoreReport: e.target.checked })}\n                  />\n                }\n                label=\"I'll upload/paste my SAT score report later\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={8} sx={{ mx: 'auto' }}>\n              <TextField\n                fullWidth\n                label=\"SAT Score\"\n                name=\"satScore\"\n                type=\"number\"\n                value={data.satScore}\n                onChange={handleInputChange}\n                error={errors.satScore && !data.hasSatScoreReport}\n                helperText={errors.satScore && !data.hasSatScoreReport ? 'Please enter a valid SAT score (400-1600)' : ''}\n                variant=\"outlined\"\n                disabled={data.hasSatScoreReport}\n                InputProps={{ inputProps: { min: 400, max: 1600 } }}\n              />\n            </Grid>\n          </Grid>\n        );\n      \n      case 4: // Target SAT Score\n        return (\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant=\"h4\" align=\"center\" gutterBottom sx={textStyles.heading}>\n                What's your target SAT score?\n              </Typography>\n              <Typography variant=\"body1\" align=\"center\" paragraph sx={textStyles.body}>\n                Setting a goal helps us customize your learning path.\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={8} sx={{ mx: 'auto' }}>\n              <Box sx={{ px: 3 }}>\n                <Slider\n                  value={data.targetSatScore}\n                  min={1000}\n                  max={1600}\n                  step={10}\n                  marks={[\n                    { value: 1000, label: '1000' },\n                    { value: 1200, label: '1200' },\n                    { value: 1400, label: '1400' },\n                    { value: 1600, label: '1600' }\n                  ]}\n                  onChange={(_, newValue) => \n                    setData({ ...data, targetSatScore: newValue as number })\n                  }\n                  valueLabelDisplay=\"on\"\n                />\n              </Box>\n            </Grid>\n            <Grid item xs={12} sx={{ textAlign: 'center' }}>\n              <Typography variant=\"h6\" sx={{ ...textStyles.subheading, color: '#88d498' }}>\n                Target Score: {data.targetSatScore}\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sx={{ textAlign: 'center' }}>\n              <Typography variant=\"subtitle2\" sx={textStyles.body}>\n                Or choose a preset target:\n              </Typography>\n              <Box sx={{ mt: 2 }}>\n                <Button \n                  variant={data.targetSatScore === 1000 ? \"contained\" : \"outlined\"} \n                  sx={{ mx: 1 }}\n                  onClick={() => setData({ ...data, targetSatScore: 1000 })}\n                >\n                  1000\n                </Button>\n                <Button \n                  variant={data.targetSatScore === 1200 ? \"contained\" : \"outlined\"}\n                  sx={{ mx: 1 }}\n                  onClick={() => setData({ ...data, targetSatScore: 1200 })}\n                >\n                  1200\n                </Button>\n                <Button \n                  variant={data.targetSatScore === 1400 ? \"contained\" : \"outlined\"}\n                  sx={{ mx: 1 }}\n                  onClick={() => setData({ ...data, targetSatScore: 1400 })}\n                >\n                  1400\n                </Button>\n                <Button \n                  variant={data.targetSatScore === 1550 ? \"contained\" : \"outlined\"}\n                  sx={{ mx: 1 }}\n                  onClick={() => setData({ ...data, targetSatScore: 1550 })}\n                >\n                  1500+\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n        );\n      \n      case 5: // Motivation\n        return (\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant=\"h4\" align=\"center\" gutterBottom sx={textStyles.heading}>\n                What's your primary motivation for improving your SAT score?\n              </Typography>\n              <Typography variant=\"body1\" align=\"center\" paragraph sx={textStyles.body}>\n                This helps us understand your goals and tailor our guidance.\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl component=\"fieldset\" error={errors.motivation}>\n                <RadioGroup\n                  name=\"motivation\"\n                  value={data.motivation}\n                  onChange={handleInputChange}\n                >\n                  {motivations.map((motivation) => (\n                    <FormControlLabel\n                      key={motivation}\n                      value={motivation}\n                      control={<Radio />}\n                      label={motivation}\n                    />\n                  ))}\n                </RadioGroup>\n                {errors.motivation && (\n                  <Typography variant=\"caption\" color=\"error\">\n                    Please select a motivation\n                  </Typography>\n                )}\n              </FormControl>\n            </Grid>\n          </Grid>\n        );\n      \n      case 6: // SAT Score Report (Copy/Paste)\n        return (\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant=\"h4\" align=\"center\" gutterBottom sx={textStyles.heading}>\n                Copy & Paste your SAT Score Report\n              </Typography>\n              <Typography variant=\"body1\" align=\"center\" paragraph sx={textStyles.body}>\n                This will help us analyze your strengths and weaknesses in detail.\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                multiline\n                rows={8}\n                name=\"scoreReport\"\n                value={data.scoreReport}\n                onChange={handleInputChange}\n                placeholder=\"Paste the content from your SAT score report PDF here...\"\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant=\"h6\" align=\"center\" sx={{ ...textStyles.subheading, mt: 3, mb: 2 }}>\n                OR\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant=\"body1\" align=\"center\" sx={{ ...textStyles.body, mb: 2 }}>\n                Upload your SAT score report PDF\n              </Typography>\n              <Box\n                sx={{\n                  border: '2px dashed rgba(136, 212, 152, 0.6)',\n                  borderRadius: 2,\n                  p: 3,\n                  textAlign: 'center',\n                  cursor: 'pointer',\n                  background: 'rgba(18, 18, 18, 0.4)', // Using recommended dark theme surface color\n                  '&:hover': {\n                    borderColor: 'rgba(136, 212, 152, 0.8)',\n                    background: 'rgba(30, 58, 52, 0.4)' // Slightly lighter on hover\n                  }\n                }}\n                {...getRootProps()}\n              >\n                <input {...getInputProps()} />\n                <CloudUploadIcon fontSize=\"large\" sx={{ color: 'rgba(136, 212, 152, 0.8)', mb: 2 }} />\n                <Typography variant=\"body1\" gutterBottom sx={textStyles.body}>\n                  Drag & drop a PDF file here, or click to select a file\n                </Typography>\n                <Typography variant=\"body2\" sx={textStyles.secondary}>\n                  Supports PDF files only\n                </Typography>\n                {data.scoreReportFile && (\n                  <Box sx={{ \n                    mt: 2, \n                    p: 1, \n                    bgcolor: 'rgba(30, 58, 52, 0.4)', \n                    borderRadius: 1,\n                    border: '1px solid rgba(136, 212, 152, 0.3)'\n                  }}>\n                    <Typography variant=\"body2\" sx={textStyles.body}>\n                      Selected: {data.scoreReportFile.name}\n                    </Typography>\n                  </Box>\n                )}\n              </Box>\n            </Grid>\n            {processingReport && (\n              <Grid item xs={12} sx={{ textAlign: 'center', mt: 2 }}>\n                <CircularProgress size={30} sx={{ color: 'rgba(136, 212, 152, 0.8)' }} />\n                <Typography variant=\"body2\" sx={textStyles.secondary}>\n                  Processing your report to generate personalized practice questions...\n                </Typography>\n              </Grid>\n            )}\n          </Grid>\n        );\n      \n      case 7: // Review & Submit\n        return (\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant=\"h4\" align=\"center\" gutterBottom sx={textStyles.heading}>\n                Review Your Information\n              </Typography>\n              <Typography variant=\"body1\" align=\"center\" paragraph sx={textStyles.body}>\n                Please verify that everything is correct before proceeding.\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Paper elevation={2} sx={{ \n                p: 3, \n                background: 'rgba(24, 24, 24, 0.7)', // Slightly lighter than the main surface for elevation\n                boxShadow: '0 4px 20px rgba(0, 0, 0, 0.2)',\n                borderRadius: 2\n              }}>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={6}>\n                    <Typography variant=\"subtitle2\" sx={textStyles.label}>Name:</Typography>\n                    <Typography variant=\"body1\" gutterBottom sx={textStyles.body}>{data.firstName} {data.lastName}</Typography>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <Typography variant=\"subtitle2\" sx={textStyles.label}>Age:</Typography>\n                    <Typography variant=\"body1\" gutterBottom sx={textStyles.body}>{data.age}</Typography>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <Typography variant=\"subtitle2\" sx={textStyles.label}>Location:</Typography>\n                    <Typography variant=\"body1\" gutterBottom sx={textStyles.body}>\n                      {data.city}, {data.country}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <Typography variant=\"subtitle2\" sx={textStyles.label}>Current SAT Score:</Typography>\n                    <Typography variant=\"body1\" gutterBottom sx={textStyles.body}>\n                      {data.hasSatScoreReport ? 'To be provided later' : data.satScore}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <Typography variant=\"subtitle2\" sx={textStyles.label}>Target SAT Score:</Typography>\n                    <Typography variant=\"body1\" gutterBottom sx={textStyles.body}>{data.targetSatScore}</Typography>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <Typography variant=\"subtitle2\" sx={textStyles.label}>Motivation:</Typography>\n                    <Typography variant=\"body1\" gutterBottom sx={textStyles.body}>{data.motivation}</Typography>\n                  </Grid>\n                  {data.scoreReport && (\n                    <Grid item xs={12}>\n                      <Typography variant=\"subtitle2\" sx={textStyles.label}>SAT Score Report:</Typography>\n                      <Paper variant=\"outlined\" sx={{ \n                        p: 2, \n                        maxHeight: '100px', \n                        overflow: 'auto',\n                        background: 'rgba(30, 30, 30, 0.8)', // Even lighter surface for nested elevation\n                        borderColor: 'rgba(136, 212, 152, 0.2)'\n                      }}>\n                        <Typography variant=\"body2\" sx={{ \n                          whiteSpace: 'pre-wrap',\n                          ...textStyles.body,\n                          fontSize: '0.85rem'\n                        }}>\n                          {data.scoreReport.length > 200 \n                            ? data.scoreReport.substring(0, 200) + '...' \n                            : data.scoreReport}\n                        </Typography>\n                      </Paper>\n                    </Grid>\n                  )}\n                </Grid>\n              </Paper>\n            </Grid>\n          </Grid>\n        );\n      \n      case 8: // Subscription\n        return (\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant=\"h4\" align=\"center\" gutterBottom sx={textStyles.heading}>\n                Choose Your Plan\n              </Typography>\n              <Typography variant=\"body1\" align=\"center\" paragraph sx={textStyles.body}>\n                Select the subscription plan that works best for you.\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <SubscriptionPlans \n                onSelectPlan={(planType) => {\n                  setData({ ...data, subscriptionPlan: planType });\n                }} \n              />\n            </Grid>\n          </Grid>\n        );\n      \n      default:\n        return null;\n    }\n  };\n\n  // Steps for the stepper\n  const steps = [\n    'Name',\n    'Age',\n    'Location',\n    'Current Score',\n    'Target Score',\n    'Motivation',\n    'Score Report',\n    'Review',\n    'Subscription'\n  ];\n\n  // Background style for current step\n  const getBackgroundStyle = () => {\n    return {\n      background: 'linear-gradient(135deg, #121212 0%, #1e3a34 100%)', // Using recommended dark theme surface color\n      backgroundSize: '200% 200%',\n      animation: 'gradient 15s ease infinite',\n      height: '100%',\n      minHeight: '100vh',\n      transition: 'background 0.5s ease-in-out',\n      display: 'flex',\n      flexDirection: 'column',\n      '@keyframes gradient': {\n        '0%': { backgroundPosition: '0% 50%' },\n        '50%': { backgroundPosition: '100% 50%' },\n        '100%': { backgroundPosition: '0% 50%' }\n      }\n    } as React.CSSProperties;\n  };\n\n  if (loading) {\n    return (\n      <Box \n        sx={{ \n          display: 'flex', \n          flexDirection: 'column', \n          alignItems: 'center', \n          justifyContent: 'center',\n          minHeight: '100vh',\n          background: 'linear-gradient(135deg, #121212 0%, #1e3a34 100%)' // Using recommended dark theme surface color\n        }}\n      >\n        <CircularProgress size={60} sx={{ color: 'rgba(136, 212, 152, 0.9)' }} />\n        <Typography variant=\"h6\" sx={{ mt: 3, ...textStyles.heading }}>\n          Saving your information and preparing your custom experience...\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <Box sx={getBackgroundStyle()}>\n        <Container maxWidth=\"md\" sx={{ py: 8 }}>\n          <Paper \n            elevation={3} \n            sx={{ \n              p: { xs: 2, sm: 4 }, \n              borderRadius: 2, \n              background: 'rgba(33, 33, 33, 0.95)',\n              backdropFilter: 'blur(10px)',\n              boxShadow: '0 8px 32px rgba(0, 0, 0, 0.3)',\n              color: 'rgba(255, 255, 255, 0.87)'\n            }}\n          >\n            <Stepper \n              activeStep={activeStep} \n              alternativeLabel\n              sx={{ mb: 4, display: { xs: 'none', md: 'flex' } }}\n            >\n              {steps.map((label: string) => (\n                <Step key={label}>\n                  <StepLabel>{label}</StepLabel>\n                </Step>\n              ))}\n            </Stepper>\n            \n            {/* Mobile stepper status */}\n            <Box sx={{ mb: 4, display: { xs: 'block', md: 'none' }, textAlign: 'center' }}>\n              <Typography variant=\"body2\" sx={textStyles.body}>\n                Step {activeStep + 1} of {steps.length}: {steps[activeStep]}\n              </Typography>\n            </Box>\n            \n            <animated.div style={fadeProps}>\n              <Box sx={{ minHeight: '300px', mb: 4 }}>\n                {getStepContent()}\n              </Box>\n            </animated.div>\n            \n            <Box sx={{ display: 'flex', justifyContent: 'space-between', pt: 2 }}>\n              <Button\n                color=\"inherit\"\n                disabled={activeStep === 0}\n                onClick={handleBack}\n                startIcon={<ArrowBackIcon />}\n                sx={{ \n                  color: 'rgba(255, 255, 255, 0.87)',\n                  '&:hover': {\n                    backgroundColor: 'rgba(255, 255, 255, 0.08)'\n                  }\n                }}\n                style={{ opacity: activeStep === 0 ? 0 : 1 }}\n              >\n                Back\n              </Button>\n              \n              {activeStep === steps.length - 1 ? (\n                <Button \n                  variant=\"contained\" \n                  onClick={handleSubmit}\n                  endIcon={<CheckCircleOutlineIcon />}\n                  sx={{\n                    background: 'linear-gradient(90deg, #1a936f 0%, #114b5f 100%)',\n                    color: 'rgba(255, 255, 255, 0.95)',\n                    fontWeight: 500,\n                    padding: '10px 24px',\n                    '&:hover': {\n                      background: 'linear-gradient(90deg, #114b5f 0%, #1a936f 100%)',\n                      boxShadow: '0 4px 20px rgba(0, 0, 0, 0.25)'\n                    }\n                  }}\n                >\n                  Complete & Go to Dashboard\n                </Button>\n              ) : (\n                <Button \n                  variant=\"contained\"\n                  onClick={handleNext}\n                  endIcon={<ArrowForwardIcon />}\n                  disabled={activeStep === 6 && processingReport}\n                  sx={{\n                    background: 'linear-gradient(90deg, #1a936f 0%, #114b5f 100%)',\n                    color: 'rgba(255, 255, 255, 0.95)',\n                    fontWeight: 500,\n                    padding: '10px 24px',\n                    '&:hover': {\n                      background: 'linear-gradient(90deg, #114b5f 0%, #1a936f 100%)',\n                      boxShadow: '0 4px 20px rgba(0, 0, 0, 0.25)'\n                    },\n                    '&.Mui-disabled': {\n                      background: 'rgba(136, 212, 152, 0.2)',\n                      color: 'rgba(255, 255, 255, 0.38)'\n                    }\n                  }}\n                >\n                  Next\n                </Button>\n              )}\n            </Box>\n          </Paper>\n        </Container>\n      </Box>\n    </ThemeProvider>\n  );\n};\n\nexport default OnboardingFlow; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}