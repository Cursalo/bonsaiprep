{"ast":null,"code":"import _objectSpread from\"/Users/gerardo/Downloads/Bonsaito/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useCallback,useEffect}from'react';import{useNavigate}from'react-router-dom';import{Box,Container,Typography,AppBar,Toolbar,IconButton,Alert,Tabs,Tab,TextField,Divider,Chip,Stepper,Step,StepLabel,useTheme,useMediaQuery,Accordion,AccordionSummary,AccordionDetails,RadioGroup,Radio,FormControlLabel,Fade,Badge,Tooltip,Avatar}from'@mui/material';import{createTheme,ThemeProvider}from'@mui/material/styles';import MenuIcon from'@mui/icons-material/Menu';import CloudUploadIcon from'@mui/icons-material/CloudUpload';import TextFieldsIcon from'@mui/icons-material/TextFields';import SchoolIcon from'@mui/icons-material/School';import ExpandMoreIcon from'@mui/icons-material/ExpandMore';import CheckCircleIcon from'@mui/icons-material/CheckCircle';import CancelIcon from'@mui/icons-material/Cancel';import LocalFloristIcon from'@mui/icons-material/LocalFlorist';import EmojiNatureIcon from'@mui/icons-material/EmojiNature';import PictureAsPdfIcon from'@mui/icons-material/PictureAsPdf';import{useDropzone}from'react-dropzone';import{uploadFileToSupabase}from'../services/ocrService';import{generateQuestionsFromMistakes}from'../services/geminiPdfService';import{supabase}from'../supabaseClient';import{useSkills}from'../components/SkillsProvider';import LoadingAnimation from'../components/LoadingAnimation';import GlassCard from'../components/GlassCard';import GradientButton from'../components/GradientButton';import{FadeIn,ScaleIn,FloatAnimation}from'../components/AnimationEffects';// Define an interface for user answers\n// Interface for tracking which skills are improved by which questions\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";// Function to simulate processing delay\nconst addProcessingDelay=ms=>new Promise(resolve=>setTimeout(resolve,ms));// Text styles for better readability based on dark theme best practices\nconst textStyles={heading:{color:'rgba(255, 255, 255, 0.87)',// High-emphasis text at 87% opacity\ntextShadow:'0 1px 2px rgba(0,0,0,0.2)'},subheading:{color:'rgba(255, 255, 255, 0.87)',// High-emphasis text at 87% opacity\nopacity:0.9},body:{color:'rgba(255, 255, 255, 0.7)'// Medium-emphasis text at 70% opacity\n},label:{color:'rgba(255, 255, 255, 0.87)',// High-emphasis text at 87% opacity\nfontWeight:500},secondary:{color:'rgba(255, 255, 255, 0.6)'// Secondary text at 60% opacity\n},disabled:{color:'rgba(255, 255, 255, 0.38)'// Disabled text at 38% opacity\n},accent:{color:'rgba(136, 212, 152, 0.9)'// Desaturated accent color\n}};// Create a dark theme to match onboarding\nconst darkTheme=createTheme({palette:{mode:'dark',primary:{main:'#88d498'},secondary:{main:'#88d498'},background:{paper:'rgba(33, 33, 33, 0.95)',default:'#121212'},text:{primary:'rgba(255, 255, 255, 0.87)',secondary:'rgba(255, 255, 255, 0.6)'}},typography:{fontFamily:'\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',h4:{fontWeight:600},h6:{fontWeight:500}},components:{MuiInputBase:{styleOverrides:{input:{color:'rgba(255, 255, 255, 0.87)'},root:{backgroundColor:'rgba(30, 30, 30, 0.4)'}}},MuiOutlinedInput:{styleOverrides:{root:{'&:hover .MuiOutlinedInput-notchedOutline':{borderColor:'#88d498'},'&.Mui-focused .MuiOutlinedInput-notchedOutline':{borderColor:'#88d498'}},notchedOutline:{borderColor:'rgba(255, 255, 255, 0.23)'}}},MuiFormLabel:{styleOverrides:{root:{color:'rgba(255, 255, 255, 0.6)','&.Mui-focused':{color:'#88d498'}}}},MuiPaper:{styleOverrides:{root:{backgroundImage:'none',backgroundColor:'rgba(30, 30, 30, 0.6)',backdropFilter:'blur(10px)',borderRadius:12,border:'1px solid rgba(255, 255, 255, 0.1)'}}},MuiCard:{styleOverrides:{root:{background:'rgba(24, 24, 24, 0.8)',backdropFilter:'blur(10px)',borderRadius:12,border:'1px solid rgba(255, 255, 255, 0.1)'}}},MuiAppBar:{styleOverrides:{root:{background:'rgba(12, 59, 46, 0.8)',backdropFilter:'blur(10px)',boxShadow:'0 4px 20px rgba(0, 0, 0, 0.2)'}}},MuiButton:{styleOverrides:{root:{borderRadius:8,textTransform:'none',fontWeight:500},contained:{boxShadow:'0 4px 12px rgba(0, 0, 0, 0.2)',backgroundColor:'#88d498','&:hover':{backgroundColor:'#6bbb7b'}},outlined:{borderColor:'#88d498',color:'#88d498','&:hover':{borderColor:'#6bbb7b',backgroundColor:'rgba(136, 212, 152, 0.08)'}}}},MuiTab:{styleOverrides:{root:{textTransform:'none',fontWeight:500,'&.Mui-selected':{color:'#88d498'}}}},MuiTabs:{styleOverrides:{indicator:{backgroundColor:'#88d498'}}},MuiStepIcon:{styleOverrides:{root:{color:'rgba(30, 30, 30, 0.8)','&.Mui-active':{color:'#88d498'},'&.Mui-completed':{color:'#6bbb7b'}}}}}});const UploadReport=()=>{var _userData$firstName;const theme=useTheme();const isMobile=useMediaQuery(theme.breakpoints.down('sm'));const navigate=useNavigate();const{skills,updateSkillProgress}=useSkills();const[drawerOpen,setDrawerOpen]=useState(false);const[uploadedFile,setUploadedFile]=useState(null);const[extractedText,setExtractedText]=useState(null);const[generatedQuestions,setGeneratedQuestions]=useState([]);const[isLoading,setIsLoading]=useState(false);const[loadingMessage,setLoadingMessage]=useState('');const[error,setError]=useState(null);const[inputMethod,setInputMethod]=useState('file');// 'file' or 'text'\nconst[pastedText,setPastedText]=useState('');const[activeStep,setActiveStep]=useState(0);const[apiKeyMissing,setApiKeyMissing]=useState(!process.env.REACT_APP_GEMINI_API_KEY);// New state for tracking student answers and showing explanations\nconst[studentAnswers,setStudentAnswers]=useState({});const[showExplanations,setShowExplanations]=useState({});const[correctAnswers,setCorrectAnswers]=useState([]);const[questionSkillMap,setQuestionSkillMap]=useState({});const[showTreeGrowthBadge,setShowTreeGrowthBadge]=useState(false);const[treeBadgeCount,setTreeBadgeCount]=useState(0);const[userData,setUserData]=useState(null);const[loadingUserData,setLoadingUserData]=useState(true);// Group questions by topic for better organization\nconst questionsByTopic=React.useMemo(()=>{const grouped={};generatedQuestions.forEach(q=>{if(!grouped[q.topic]){grouped[q.topic]=[];}grouped[q.topic].push(q);});return grouped;},[generatedQuestions]);// Fetch user data for personalization\nuseEffect(()=>{const fetchUserData=async()=>{try{const{data:{user}}=await supabase.auth.getUser();if(user){const{data:onboardingData,error}=await supabase.from('user_onboarding').select('first_name, last_name').eq('user_id',user.id).single();if(error){console.error(\"Error fetching user onboarding data:\",error);}else if(onboardingData){setUserData({firstName:onboardingData.first_name,lastName:onboardingData.last_name});}}}catch(error){console.error(\"Error fetching user session:\",error);}finally{setLoadingUserData(false);}};fetchUserData();},[]);// Maps generated questions to skills\nconst mapQuestionsToSkills=useCallback(questions=>{// Create a mapping between question topics and skill categories\nconst topicToCategory={'Grammar':'Standard English Conventions','Punctuation':'Standard English Conventions','Sentence Structure':'Standard English Conventions','Evidence':'Expression of Ideas','Organization':'Expression of Ideas','Vocabulary':'Expression of Ideas','Algebra':'Math','Geometry':'Math','Data Analysis':'Math'};// Generate a mapping between question IDs and skill IDs\nconst mapping={};questions.forEach(question=>{// Find matching skills from the skills context\nconst category=topicToCategory[question.topic]||question.topic;// Find skills that match this category\nconst matchingSkills=skills.filter(s=>s.category===category||s.subcategory===question.topic||s.name.toLowerCase().includes(question.topic.toLowerCase()));if(matchingSkills.length>0){// Pick a skill to associate with this question (preferably one that's not mastered yet)\nconst notYetMastered=matchingSkills.filter(s=>!s.mastered);const skillToUse=notYetMastered.length>0?notYetMastered[Math.floor(Math.random()*notYetMastered.length)]:matchingSkills[Math.floor(Math.random()*matchingSkills.length)];mapping[question.id]=skillToUse.id;}});setQuestionSkillMap(mapping);},[skills]);// Effect to map questions to skills when questions are generated\nuseEffect(()=>{if(generatedQuestions.length>0){mapQuestionsToSkills(generatedQuestions);}},[generatedQuestions,mapQuestionsToSkills]);const handleDrawerToggle=()=>{setDrawerOpen(!drawerOpen);};const onDrop=useCallback(async acceptedFiles=>{if(acceptedFiles&&acceptedFiles.length>0){const file=acceptedFiles[0];const validFileTypes=['application/pdf','text/plain'];if(!validFileTypes.includes(file.type)){setError('Invalid file type. Please upload a PDF or TXT file.');setUploadedFile(null);return;}setUploadedFile(file);setError(null);setExtractedText(null);setGeneratedQuestions([]);setIsLoading(true);setActiveStep(1);try{const{data:{session}}=await supabase.auth.getSession();if(!session){setError('No active session. Please log in again.');setIsLoading(false);return;}// Handle text files the same way as before\nif(file.type==='text/plain'){setLoadingMessage('Reading text file content...');const text=await file.text();// Add realistic processing delay\nawait addProcessingDelay(2500);setExtractedText(text);setActiveStep(2);setLoadingMessage('Analyzing report and generating personalized questions...');await addProcessingDelay(15000);const questions=await generateQuestionsFromMistakes(text);setGeneratedQuestions(questions);setActiveStep(3);}else{// For PDF files, now process directly with Gemini 1.5 Flash\nsetLoadingMessage('Processing PDF with Gemini 1.5 Flash...');// We'll upload the file to Supabase for tracking/storage purposes\nconst{storagePath}=await uploadFileToSupabase(file,'score-reports',{publicAccess:false});console.log('File uploaded to Supabase:',{storagePath});// Skip text extraction step and directly process the PDF with Gemini\nawait addProcessingDelay(3000);// Skip the text extraction step for improved UI flow\nsetActiveStep(2);setLoadingMessage('Analyzing PDF and generating personalized questions...');// Generate questions directly from the PDF file using Gemini 2.0 Flash\nawait addProcessingDelay(15000);const questions=await generateQuestionsFromMistakes(file);setGeneratedQuestions(questions);setActiveStep(3);}}catch(err){console.error(\"Error processing file:\",err);setError(\"Failed to process the file: \".concat(err.message||'Unknown error',\". Check console for details.\"));}finally{setIsLoading(false);setLoadingMessage('');}}},[]);const handleTextSubmit=async()=>{if(!pastedText.trim()){setError('Please paste some text before submitting.');return;}setError(null);setExtractedText(null);setGeneratedQuestions([]);setIsLoading(true);setActiveStep(1);try{const{data:{session}}=await supabase.auth.getSession();if(!session){setError('No active session. Please log in again.');setIsLoading(false);return;}// Process the pasted text with realistic delays\nsetLoadingMessage('Processing your text input...');await addProcessingDelay(1800);setExtractedText(pastedText);setActiveStep(2);setLoadingMessage('Analyzing report data and creating personalized questions...');// Add realistic processing delay - increased to 15 seconds\nawait addProcessingDelay(15000);const questions=await generateQuestionsFromMistakes(pastedText);setGeneratedQuestions(questions);setActiveStep(3);}catch(err){console.error(\"Error processing text:\",err);setError(\"Failed to process text: \".concat(err.message||'Unknown error',\". Check console for details.\"));}finally{setIsLoading(false);setLoadingMessage('');}};const{getRootProps,getInputProps,isDragActive}=useDropzone({onDrop,accept:{'application/pdf':['.pdf'],'text/plain':['.txt']},multiple:false,disabled:isLoading||inputMethod==='text'});const handleInputMethodChange=(_event,newValue)=>{setInputMethod(newValue);// Reset state when changing methods\nsetError(null);setUploadedFile(null);setPastedText('');setExtractedText(null);setGeneratedQuestions([]);setActiveStep(0);};// Function to determine difficulty level color\nconst getDifficultyColor=difficulty=>{switch(difficulty===null||difficulty===void 0?void 0:difficulty.toLowerCase()){case'easy':return theme.palette.success.main;case'medium':return theme.palette.warning.main;case'hard':return theme.palette.error.main;default:return theme.palette.info.main;}};// Handle student answer selection\nconst handleAnswerSelect=(questionId,answer)=>{setStudentAnswers(prev=>_objectSpread(_objectSpread({},prev),{},{[questionId]:answer}));};// Check if an answer is correct and reveal explanation\nconst checkAnswer=questionId=>{setShowExplanations(prev=>_objectSpread(_objectSpread({},prev),{},{[questionId]:true}));const question=generatedQuestions.find(q=>q.id===questionId);if(question&&isAnswerCorrect(question,studentAnswers[questionId])){// If correct and not already in correctAnswers, add it\nif(!correctAnswers.includes(questionId)){setCorrectAnswers(prev=>[...prev,questionId]);// Update the associated skill's progress\nconst skillId=questionSkillMap[questionId];if(skillId){// Find current skill to determine new progress level\nconst skill=skills.find(s=>s.id===skillId);if(skill){// Increase skill mastery level by 15-25% for each correct answer\nconst progressIncrease=Math.floor(Math.random()*11)+15;// 15-25\nconst newProgress=Math.min(100,skill.masteryLevel+progressIncrease);// Ensure we call updateSkillProgress with the correct parameters\nupdateSkillProgress(skillId,newProgress);console.log(\"Skill \".concat(skillId,\" updated: \").concat(skill.masteryLevel,\" -> \").concat(newProgress));// Show growth badge and increment counter\nsetShowTreeGrowthBadge(true);setTreeBadgeCount(prev=>prev+1);// Hide badge after a few seconds\nsetTimeout(()=>{setShowTreeGrowthBadge(false);},3000);}}}}};// Reset a question to try again\nconst resetQuestion=questionId=>{const newAnswers=_objectSpread({},studentAnswers);delete newAnswers[questionId];setStudentAnswers(newAnswers);setShowExplanations(prev=>_objectSpread(_objectSpread({},prev),{},{[questionId]:false}));// If it was a correct answer, remove it from correctAnswers\nif(correctAnswers.includes(questionId)){setCorrectAnswers(prev=>prev.filter(id=>id!==questionId));}};// Function to determine if a student's answer is correct\nconst isAnswerCorrect=(question,studentAnswer)=>{return studentAnswer===question.answer;};// Handle navigate to dashboard to see tree growth\nconst handleViewTreeGrowth=()=>{navigate('/dashboard',{state:{fromUpload:true,correctAnswers:correctAnswers.length}});};// Background style with animation to match onboarding\nconst getBackgroundStyle=()=>{return{background:'linear-gradient(135deg, #121212 0%, #1e3a34 100%)',backgroundSize:'200% 200%',animation:'gradient 15s ease infinite',minHeight:'100vh',transition:'background 0.5s ease-in-out','@keyframes gradient':{'0%':{backgroundPosition:'0% 50%'},'50%':{backgroundPosition:'100% 50%'},'100%':{backgroundPosition:'0% 50%'}}};};return/*#__PURE__*/_jsx(ThemeProvider,{theme:darkTheme,children:/*#__PURE__*/_jsxs(Box,{sx:getBackgroundStyle(),children:[/*#__PURE__*/_jsx(AppBar,{position:\"static\",children:/*#__PURE__*/_jsxs(Toolbar,{children:[/*#__PURE__*/_jsx(IconButton,{color:\"inherit\",\"aria-label\":\"open drawer\",edge:\"start\",onClick:handleDrawerToggle,sx:{mr:2},children:/*#__PURE__*/_jsx(MenuIcon,{})}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"div\",sx:{flexGrow:1,letterSpacing:'-0.01em'},children:\"Upload Score Report\"}),/*#__PURE__*/_jsx(Avatar,{sx:{bgcolor:'primary.main',boxShadow:'0 4px 8px rgba(0, 0, 0, 0.2)'},children:loadingUserData?'':(userData===null||userData===void 0?void 0:(_userData$firstName=userData.firstName)===null||_userData$firstName===void 0?void 0:_userData$firstName.charAt(0))||'U'}),correctAnswers.length>0&&/*#__PURE__*/_jsx(Tooltip,{title:\"Your bonsai tree is growing! Click to view\",children:/*#__PURE__*/_jsx(Badge,{badgeContent:treeBadgeCount,color:\"success\",sx:{mr:2,opacity:showTreeGrowthBadge?1:0.8,transition:'all 0.3s ease'},children:/*#__PURE__*/_jsx(IconButton,{color:\"inherit\",onClick:handleViewTreeGrowth,sx:{animation:showTreeGrowthBadge?'treeGrow 1s ease-in-out':'none','@keyframes treeGrow':{'0%':{transform:'scale(1)'},'50%':{transform:'scale(1.3)'},'100%':{transform:'scale(1)'}}},children:/*#__PURE__*/_jsx(EmojiNatureIcon,{})})})})]})}),/*#__PURE__*/_jsxs(Container,{maxWidth:\"md\",sx:{py:4},children:[/*#__PURE__*/_jsxs(FadeIn,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,align:\"center\",sx:{color:'rgba(255, 255, 255, 0.87)',textShadow:'0 2px 4px rgba(0,0,0,0.3)',fontWeight:'bold',mb:2},children:\"Upload Your SAT Practice Report\"}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",paragraph:true,align:\"center\",sx:{color:'rgba(255, 255, 255, 0.7)',mb:4},children:\"Upload your report or paste text to get personalized lessons and practice questions\"})]}),apiKeyMissing&&/*#__PURE__*/_jsxs(Alert,{severity:\"warning\",sx:{mb:3,background:'rgba(237, 108, 2, 0.15)',color:'rgba(255, 255, 255, 0.87)','& .MuiAlert-icon':{color:'rgba(255, 167, 38, 0.9)'},borderRadius:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",fontWeight:\"bold\",children:\"API Key Missing\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:\"The application is running in limited mode. Some advanced features may not be available. Please contact the administrator for full functionality.\"})]}),/*#__PURE__*/_jsxs(GlassCard,{sx:{p:{xs:3,md:4},mb:4,backdropFilter:'blur(10px)'},children:[/*#__PURE__*/_jsxs(Stepper,{activeStep:activeStep,alternativeLabel:true,sx:{mb:4,display:{xs:'none',sm:'flex'},'& .MuiStepLabel-label':{color:'rgba(255, 255, 255, 0.6)',mt:1},'& .MuiStepLabel-active':{color:'rgba(255, 255, 255, 0.87)'},'& .MuiStepIcon-root':{color:'rgba(30, 30, 30, 0.8)'},'& .MuiStepIcon-active':{color:'#88d498'},'& .MuiStepIcon-completed':{color:'rgba(136, 212, 152, 0.7)'},'& .MuiStepConnector-line':{borderColor:'rgba(255, 255, 255, 0.12)'}},children:[/*#__PURE__*/_jsx(Step,{children:/*#__PURE__*/_jsx(StepLabel,{children:\"Upload Report\"})}),/*#__PURE__*/_jsx(Step,{children:/*#__PURE__*/_jsx(StepLabel,{children:\"Process Content\"})}),/*#__PURE__*/_jsx(Step,{children:/*#__PURE__*/_jsx(StepLabel,{children:\"Extract Information\"})}),/*#__PURE__*/_jsx(Step,{children:/*#__PURE__*/_jsx(StepLabel,{children:\"Generate Questions\"})})]}),/*#__PURE__*/_jsx(Box,{sx:{mb:4,display:{xs:'block',sm:'none'},textAlign:'center'},children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{color:'rgba(255, 255, 255, 0.7)'},children:[\"Step \",activeStep+1,\" of 4: \",['Upload Report','Process Content','Extract Information','Generate Questions'][activeStep]]})}),/*#__PURE__*/_jsx(Box,{sx:{width:'100%',mb:3},children:/*#__PURE__*/_jsxs(Tabs,{value:inputMethod,onChange:handleInputMethodChange,centered:true,sx:{'& .MuiTabs-indicator':{backgroundColor:'#88d498',height:3},'& .MuiTab-root':{color:'rgba(255, 255, 255, 0.6)',fontSize:'1rem','&.Mui-selected':{color:'rgba(255, 255, 255, 0.87)'}}},variant:isMobile?\"fullWidth\":\"standard\",children:[/*#__PURE__*/_jsx(Tab,{value:\"file\",label:\"Upload File\",icon:/*#__PURE__*/_jsx(CloudUploadIcon,{}),iconPosition:\"start\",disabled:isLoading}),/*#__PURE__*/_jsx(Tab,{value:\"text\",label:\"Paste Text\",icon:/*#__PURE__*/_jsx(TextFieldsIcon,{}),iconPosition:\"start\",disabled:isLoading})]})}),!isLoading&&activeStep<3&&/*#__PURE__*/_jsx(_Fragment,{children:inputMethod==='file'?/*#__PURE__*/_jsxs(Box,_objectSpread(_objectSpread({},getRootProps()),{},{sx:{p:4,textAlign:'center',border:'2px dashed',borderColor:isDragActive?'#88d498':'rgba(255, 255, 255, 0.23)',borderRadius:2,backgroundColor:isDragActive?'rgba(26, 147, 111, 0.08)':'rgba(18, 18, 18, 0.5)',backdropFilter:'blur(8px)',cursor:'pointer',minHeight:200,display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',transition:'all 0.3s ease',overflow:'hidden',position:'relative','&:hover':{borderColor:'#88d498',backgroundColor:'rgba(26, 147, 111, 0.05)'},'&::before':{content:'\"\"',position:'absolute',top:0,left:0,right:0,bottom:0,zIndex:-1,opacity:0.1,background:'linear-gradient(135deg, rgba(136, 212, 152, 0.2) 0%, rgba(12, 59, 46, 0.2) 100%)',animation:'gradientBackground 15s ease infinite','@keyframes gradientBackground':{'0%':{backgroundPosition:'0% 50%'},'50%':{backgroundPosition:'100% 50%'},'100%':{backgroundPosition:'0% 50%'}}}},children:[/*#__PURE__*/_jsx(\"input\",_objectSpread({},getInputProps())),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',alignItems:'center',position:'relative',zIndex:1},children:[/*#__PURE__*/_jsx(CloudUploadIcon,{sx:{fontSize:60,color:'#88d498',mb:1,filter:'drop-shadow(0 4px 6px rgba(0,0,0,0.2))',animation:isDragActive?'pulse 1.5s infinite':'none','@keyframes pulse':{'0%':{transform:'scale(1)'},'50%':{transform:'scale(1.1)'},'100%':{transform:'scale(1)'}}}}),/*#__PURE__*/_jsx(PictureAsPdfIcon,{sx:{fontSize:40,color:'rgba(255, 255, 255, 0.6)',mb:2,filter:'drop-shadow(0 2px 4px rgba(0,0,0,0.1))'}})]}),isDragActive?/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{color:'#88d498',fontWeight:'bold',textShadow:'0 2px 4px rgba(0,0,0,0.2)'},children:\"Drop the file here ...\"}):/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{color:'rgba(255, 255, 255, 0.87)',fontWeight:'medium',textShadow:'0 2px 4px rgba(0,0,0,0.2)'},children:\"Drag 'n' drop a file here, or click to select file\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{color:'rgba(255, 255, 255, 0.6)',mt:1},children:\"(Max file size: 10MB. Supported formats: PDF, TXT)\"})]})):/*#__PURE__*/_jsxs(Box,{sx:{p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,sx:{color:'rgba(255, 255, 255, 0.87)',fontWeight:'medium',mb:2},children:\"Paste Your SAT Report Text\"}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,multiline:true,rows:10,variant:\"outlined\",placeholder:\"Paste the content of your SAT report here...\",value:pastedText,onChange:e=>setPastedText(e.target.value),disabled:isLoading,sx:{mb:3,'& .MuiOutlinedInput-root':{backgroundColor:'rgba(18, 18, 18, 0.5)',backdropFilter:'blur(8px)',borderRadius:2,'&:hover .MuiOutlinedInput-notchedOutline':{borderColor:'#88d498'},'&.Mui-focused .MuiOutlinedInput-notchedOutline':{borderColor:'#88d498',borderWidth:2}},'& .MuiInputBase-input':{color:'rgba(255, 255, 255, 0.87)'}}}),/*#__PURE__*/_jsx(GradientButton,{variant:\"contained\",gradient:\"primary\",onClick:handleTextSubmit,disabled:!pastedText.trim()||isLoading,fullWidth:true,size:\"large\",sx:{py:1.5},children:\"Process Text\"})]})}),error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mt:2,backgroundColor:'rgba(211, 47, 47, 0.15)',color:'rgba(255, 255, 255, 0.87)','& .MuiAlert-icon':{color:'rgba(244, 67, 54, 0.9)'},borderRadius:2},children:error}),uploadedFile&&inputMethod==='file'&&!error&&!isLoading&&activeStep<3&&/*#__PURE__*/_jsx(ScaleIn,{children:/*#__PURE__*/_jsxs(Box,{sx:{p:3,mt:3,backgroundColor:'rgba(18, 18, 18, 0.7)',backdropFilter:'blur(10px)',borderRadius:2,border:'1px solid rgba(136, 212, 152, 0.2)',boxShadow:'0 4px 20px rgba(0, 0, 0, 0.15)'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{color:'rgba(255, 255, 255, 0.87)',fontWeight:'medium',mb:2},children:\"Uploaded File:\"}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',mt:1},children:[/*#__PURE__*/_jsx(PictureAsPdfIcon,{sx:{color:'#88d498',mr:1,filter:'drop-shadow(0 2px 4px rgba(0,0,0,0.2))'}}),/*#__PURE__*/_jsxs(Typography,{sx:{color:'rgba(255, 255, 255, 0.8)'},children:[uploadedFile.name,\" (\",Math.round(uploadedFile.size/1024),\" KB)\"]})]}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'flex-end',mt:3},children:/*#__PURE__*/_jsx(GradientButton,{variant:\"contained\",gradient:\"primary\",onClick:()=>{onDrop([uploadedFile]);},size:\"medium\",children:\"Process File\"})})]})}),isLoading&&/*#__PURE__*/_jsx(Box,{sx:{textAlign:'center',my:6,position:'relative'},children:/*#__PURE__*/_jsx(FloatAnimation,{children:/*#__PURE__*/_jsx(LoadingAnimation,{message:loadingMessage||'Processing...',width:280,height:280})})}),extractedText&&!isLoading&&activeStep===2&&/*#__PURE__*/_jsx(ScaleIn,{children:/*#__PURE__*/_jsxs(Box,{sx:{p:4,mt:4,backgroundColor:'rgba(18, 18, 18, 0.7)',backdropFilter:'blur(10px)',borderRadius:2,border:'1px solid rgba(136, 212, 152, 0.2)',boxShadow:'0 4px 20px rgba(0, 0, 0, 0.15)'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,sx:{color:'rgba(255, 255, 255, 0.87)',fontWeight:'medium',mb:2},children:\"Extracted Text (Preview):\"}),/*#__PURE__*/_jsx(Box,{sx:{maxHeight:150,overflowY:'auto',whiteSpace:'pre-wrap',backgroundColor:'rgba(12, 12, 12, 0.9)',p:3,borderRadius:2,border:'1px solid rgba(255, 255, 255, 0.1)'},children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{color:'rgba(255, 255, 255, 0.8)'},children:extractedText})})]})}),generatedQuestions.length>0&&!isLoading&&/*#__PURE__*/_jsxs(Box,{sx:{mt:4},children:[/*#__PURE__*/_jsx(FadeIn,{children:/*#__PURE__*/_jsxs(GlassCard,{sx:{p:3,borderRadius:2,mb:4,backdropFilter:'blur(10px)',boxShadow:'0 8px 32px rgba(0, 0, 0, 0.3)',border:'1px solid rgba(136, 212, 152, 0.2)'},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',mb:3},children:[/*#__PURE__*/_jsx(SchoolIcon,{sx:{fontSize:32,color:'#88d498',mr:1.5,filter:'drop-shadow(0 2px 4px rgba(0,0,0,0.2))'}}),/*#__PURE__*/_jsx(Typography,{variant:\"h5\",sx:{color:'rgba(255, 255, 255, 0.87)',fontWeight:'bold'},children:\"Your Personalized Practice Questions\"})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",paragraph:true,sx:{color:'rgba(255, 255, 255, 0.7)'},children:[\"Based on your test results, we've created \",generatedQuestions.length,\" personalized practice questions covering different topics to help you improve your SAT score.\"]}),correctAnswers.length>0&&/*#__PURE__*/_jsx(Alert,{severity:\"success\",icon:/*#__PURE__*/_jsx(LocalFloristIcon,{}),sx:{mb:3,display:'flex',alignItems:'center',background:'rgba(46, 125, 50, 0.15)',color:'rgba(255, 255, 255, 0.87)','& .MuiAlert-icon':{color:'rgba(129, 199, 132, 0.9)'}},children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',justifyContent:'space-between',width:'100%'},children:[/*#__PURE__*/_jsxs(Typography,{sx:textStyles.body,children:[\"You've correctly answered \",correctAnswers.length,\" question\",correctAnswers.length!==1?'s':'',\"! Your Bonsai Tree is growing with each correct answer.\"]}),/*#__PURE__*/_jsx(GradientButton,{variant:\"outlined\",size:\"small\",gradient:\"success\",startIcon:/*#__PURE__*/_jsx(EmojiNatureIcon,{}),onClick:handleViewTreeGrowth,sx:{ml:2},children:\"View Growth\"})]})}),/*#__PURE__*/_jsx(Divider,{sx:{mb:3,borderColor:'rgba(255, 255, 255, 0.1)'}}),Object.entries(questionsByTopic).map((_ref,topicIndex)=>{let[topic,questions]=_ref;return/*#__PURE__*/_jsxs(Accordion,{defaultExpanded:topicIndex===0,sx:{mb:2,boxShadow:'none',background:'rgba(30, 30, 30, 0.4)',border:'1px solid rgba(255, 255, 255, 0.1)',borderRadius:'4px !important','&:before':{display:'none'},'&.Mui-expanded':{margin:'0 0 16px 0'}},children:[/*#__PURE__*/_jsx(AccordionSummary,{expandIcon:/*#__PURE__*/_jsx(ExpandMoreIcon,{sx:{color:'rgba(255, 255, 255, 0.6)'}}),sx:{backgroundColor:'rgba(18, 18, 18, 0.6)',borderBottom:'1px solid rgba(255, 255, 255, 0.1)',borderRadius:'4px','&.Mui-expanded':{borderBottomLeftRadius:0,borderBottomRightRadius:0}},children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',width:'100%',justifyContent:'space-between'},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",sx:_objectSpread(_objectSpread({},textStyles.heading),{},{fontWeight:'bold'}),children:[topic,\" (\",questions.length,\")\"]}),questions.length>0&&/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:_objectSpread(_objectSpread({},textStyles.secondary),{},{mr:1}),children:[questions.filter(q=>correctAnswers.includes(q.id)).length,\"/\",questions.length,\" Correct\"]}),questions.some(q=>correctAnswers.includes(q.id))&&/*#__PURE__*/_jsx(LocalFloristIcon,{fontSize:\"small\",sx:{color:'rgba(129, 199, 132, 0.9)',opacity:questions.every(q=>correctAnswers.includes(q.id))?1:0.6,animation:showTreeGrowthBadge?'pulse 1.5s infinite':'none','@keyframes pulse':{'0%':{transform:'scale(1)'},'50%':{transform:'scale(1.2)'},'100%':{transform:'scale(1)'}}}})]})]})}),/*#__PURE__*/_jsx(AccordionDetails,{sx:{p:0},children:questions.map((question,qIndex)=>{var _skills$find;return/*#__PURE__*/_jsxs(Box,{sx:{mb:2,m:2,p:3,borderRadius:2,background:'rgba(24, 24, 24, 0.9)',border:'1px solid rgba(255, 255, 255, 0.1)'},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',mb:2},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",sx:_objectSpread(_objectSpread({},textStyles.heading),{},{fontWeight:'bold'}),children:[\"Question \",topicIndex+1,\".\",qIndex+1,questionSkillMap[question.id]&&/*#__PURE__*/_jsx(Tooltip,{title:\"Answering this correctly will help grow your \\\"\".concat((_skills$find=skills.find(s=>s.id===questionSkillMap[question.id]))===null||_skills$find===void 0?void 0:_skills$find.name,\"\\\" skill\"),arrow:true,children:/*#__PURE__*/_jsx(Typography,{component:\"span\",variant:\"body2\",sx:{ml:1,color:'rgba(255, 255, 255, 0.6)',cursor:'help',textDecoration:'underline',textDecorationStyle:'dotted'},children:\"(Improves a skill)\"})})]}),question.difficulty&&/*#__PURE__*/_jsx(Chip,{label:question.difficulty,size:\"small\",sx:{bgcolor:getDifficultyColor(question.difficulty),color:'white',fontWeight:'bold'}})]}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",paragraph:true,sx:_objectSpread(_objectSpread({},textStyles.body),{},{whiteSpace:'pre-wrap'}),children:question.text}),question.options&&/*#__PURE__*/_jsx(Box,{sx:{ml:2,mb:2},children:/*#__PURE__*/_jsx(RadioGroup,{value:studentAnswers[question.id]||'',onChange:e=>handleAnswerSelect(question.id,e.target.value),children:question.options.map((opt,i)=>/*#__PURE__*/_jsx(FormControlLabel,{value:String.fromCharCode(65+i)// A, B, C, D...\n,control:/*#__PURE__*/_jsx(Radio,{sx:{color:'rgba(255, 255, 255, 0.6)','&.Mui-checked':{color:'rgba(136, 212, 152, 0.9)'}}}),label:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',color:showExplanations[question.id]&&question.answer===String.fromCharCode(65+i)?'rgba(129, 199, 132, 0.9)':'rgba(255, 255, 255, 0.87)'},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[String.fromCharCode(65+i),\". \",opt]}),showExplanations[question.id]&&question.answer===String.fromCharCode(65+i)&&/*#__PURE__*/_jsx(CheckCircleIcon,{sx:{ml:.5,color:'rgba(129, 199, 132, 0.9)'}})]}),sx:{p:1.5,mb:1,borderRadius:1,border:'1px solid',borderColor:'rgba(255, 255, 255, 0.1)',backgroundColor:showExplanations[question.id]&&question.answer===String.fromCharCode(65+i)?'rgba(76, 175, 80, 0.08)':'rgba(30, 30, 30, 0.3)',transition:'all 0.2s ease','&:hover':{backgroundColor:!showExplanations[question.id]?'rgba(30, 30, 30, 0.6)':question.answer===String.fromCharCode(65+i)?'rgba(76, 175, 80, 0.08)':'rgba(30, 30, 30, 0.3)'}},disabled:showExplanations[question.id]},i))})}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'flex-end',mt:2},children:[studentAnswers[question.id]&&!showExplanations[question.id]&&/*#__PURE__*/_jsx(GradientButton,{variant:\"contained\",gradient:\"primary\",onClick:()=>checkAnswer(question.id),sx:{mr:1},children:\"Check Answer\"}),showExplanations[question.id]&&/*#__PURE__*/_jsx(GradientButton,{variant:\"outlined\",gradient:\"primary\",onClick:()=>resetQuestion(question.id),children:\"Try Again\"})]}),showExplanations[question.id]&&/*#__PURE__*/_jsx(Fade,{in:showExplanations[question.id],timeout:500,children:/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Box,{sx:{display:'flex',alignItems:'center',mt:2,mb:1},children:isAnswerCorrect(question,studentAnswers[question.id])?/*#__PURE__*/_jsx(Alert,{severity:\"success\",icon:/*#__PURE__*/_jsx(CheckCircleIcon,{fontSize:\"inherit\"}),sx:{width:'100%',backgroundColor:'rgba(46, 125, 50, 0.15)',color:'rgba(255, 255, 255, 0.87)','& .MuiAlert-icon':{color:'rgba(129, 199, 132, 0.9)'}},children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",fontWeight:\"bold\",children:\"Correct! Well done.\"})}):/*#__PURE__*/_jsx(Alert,{severity:\"error\",icon:/*#__PURE__*/_jsx(CancelIcon,{fontSize:\"inherit\"}),sx:{width:'100%',backgroundColor:'rgba(211, 47, 47, 0.15)',color:'rgba(255, 255, 255, 0.87)','& .MuiAlert-icon':{color:'rgba(244, 67, 54, 0.9)'}},children:/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",fontWeight:\"bold\",children:[\"Incorrect. The correct answer is \",question.answer,\".\"]})})}),/*#__PURE__*/_jsxs(Box,{sx:{mt:2,p:2,bgcolor:'rgba(18, 18, 18, 0.8)',borderRadius:1.5,border:'1px solid rgba(136, 212, 152, 0.2)',position:'relative','&::before':{content:'\"\"',position:'absolute',top:0,left:0,width:'4px',height:'100%',backgroundColor:'rgba(136, 212, 152, 0.9)',borderTopLeftRadius:4,borderBottomLeftRadius:4}},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",sx:_objectSpread(_objectSpread({fontWeight:'bold'},textStyles.heading),{},{mb:0.5,pl:1}),children:\"Explanation:\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:_objectSpread(_objectSpread({},textStyles.body),{},{whiteSpace:'pre-wrap',pl:1}),children:question.explanation})]})]})})]},question.id);})})]},topicIndex);})]})}),/*#__PURE__*/_jsxs(Box,{sx:{mt:4,display:'flex',justifyContent:'center',gap:2},children:[/*#__PURE__*/_jsx(GradientButton,{onClick:handleViewTreeGrowth,variant:\"outlined\",gradient:\"success\",size:\"large\",startIcon:/*#__PURE__*/_jsx(EmojiNatureIcon,{}),children:\"View Your Bonsai Tree\"}),/*#__PURE__*/_jsx(GradientButton,{variant:\"contained\",gradient:\"primary\",size:\"large\",onClick:()=>{setActiveStep(0);setGeneratedQuestions([]);setExtractedText(null);setInputMethod('file');setUploadedFile(null);setPastedText('');setStudentAnswers({});setShowExplanations({});setCorrectAnswers([]);setQuestionSkillMap({});setTreeBadgeCount(0);},children:\"Upload Another Report\"})]})]})]})]})]})});};export default UploadReport;","map":{"version":3,"names":["React","useState","useCallback","useEffect","useNavigate","Box","Container","Typography","AppBar","Toolbar","IconButton","Alert","Tabs","Tab","TextField","Divider","Chip","Stepper","Step","StepLabel","useTheme","useMediaQuery","Accordion","AccordionSummary","AccordionDetails","RadioGroup","Radio","FormControlLabel","Fade","Badge","Tooltip","Avatar","createTheme","ThemeProvider","MenuIcon","CloudUploadIcon","TextFieldsIcon","SchoolIcon","ExpandMoreIcon","CheckCircleIcon","CancelIcon","LocalFloristIcon","EmojiNatureIcon","PictureAsPdfIcon","useDropzone","uploadFileToSupabase","generateQuestionsFromMistakes","supabase","useSkills","LoadingAnimation","GlassCard","GradientButton","FadeIn","ScaleIn","FloatAnimation","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","addProcessingDelay","ms","Promise","resolve","setTimeout","textStyles","heading","color","textShadow","subheading","opacity","body","label","fontWeight","secondary","disabled","accent","darkTheme","palette","mode","primary","main","background","paper","default","text","typography","fontFamily","h4","h6","components","MuiInputBase","styleOverrides","input","root","backgroundColor","MuiOutlinedInput","borderColor","notchedOutline","MuiFormLabel","MuiPaper","backgroundImage","backdropFilter","borderRadius","border","MuiCard","MuiAppBar","boxShadow","MuiButton","textTransform","contained","outlined","MuiTab","MuiTabs","indicator","MuiStepIcon","UploadReport","_userData$firstName","theme","isMobile","breakpoints","down","navigate","skills","updateSkillProgress","drawerOpen","setDrawerOpen","uploadedFile","setUploadedFile","extractedText","setExtractedText","generatedQuestions","setGeneratedQuestions","isLoading","setIsLoading","loadingMessage","setLoadingMessage","error","setError","inputMethod","setInputMethod","pastedText","setPastedText","activeStep","setActiveStep","apiKeyMissing","setApiKeyMissing","process","env","REACT_APP_GEMINI_API_KEY","studentAnswers","setStudentAnswers","showExplanations","setShowExplanations","correctAnswers","setCorrectAnswers","questionSkillMap","setQuestionSkillMap","showTreeGrowthBadge","setShowTreeGrowthBadge","treeBadgeCount","setTreeBadgeCount","userData","setUserData","loadingUserData","setLoadingUserData","questionsByTopic","useMemo","grouped","forEach","q","topic","push","fetchUserData","data","user","auth","getUser","onboardingData","from","select","eq","id","single","console","firstName","first_name","lastName","last_name","mapQuestionsToSkills","questions","topicToCategory","mapping","question","category","matchingSkills","filter","s","subcategory","name","toLowerCase","includes","length","notYetMastered","mastered","skillToUse","Math","floor","random","handleDrawerToggle","onDrop","acceptedFiles","file","validFileTypes","type","session","getSession","storagePath","publicAccess","log","err","concat","message","handleTextSubmit","trim","getRootProps","getInputProps","isDragActive","accept","multiple","handleInputMethodChange","_event","newValue","getDifficultyColor","difficulty","success","warning","info","handleAnswerSelect","questionId","answer","prev","_objectSpread","checkAnswer","find","isAnswerCorrect","skillId","skill","progressIncrease","newProgress","min","masteryLevel","resetQuestion","newAnswers","studentAnswer","handleViewTreeGrowth","state","fromUpload","getBackgroundStyle","backgroundSize","animation","minHeight","transition","backgroundPosition","children","sx","position","edge","onClick","mr","variant","component","flexGrow","letterSpacing","bgcolor","charAt","title","badgeContent","transform","maxWidth","py","gutterBottom","align","mb","paragraph","severity","p","xs","md","alternativeLabel","display","sm","mt","textAlign","width","value","onChange","centered","height","fontSize","icon","iconPosition","cursor","flexDirection","alignItems","justifyContent","overflow","content","top","left","right","bottom","zIndex","fullWidth","multiline","rows","placeholder","e","target","borderWidth","gradient","size","round","my","maxHeight","overflowY","whiteSpace","startIcon","ml","Object","entries","map","_ref","topicIndex","defaultExpanded","margin","expandIcon","borderBottom","borderBottomLeftRadius","borderBottomRightRadius","some","every","qIndex","_skills$find","m","arrow","textDecoration","textDecorationStyle","options","opt","i","String","fromCharCode","control","in","timeout","borderTopLeftRadius","pl","explanation","gap"],"sources":["/Users/gerardo/Downloads/Bonsaito/src/pages/UploadReport.tsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport {\n  Box,\n  Button,\n  Container,\n  Typography,\n  Paper,\n  AppBar,\n  Toolbar,\n  IconButton,\n  CircularProgress,\n  Alert,\n  Tabs,\n  Tab,\n  TextField,\n  Card,\n  CardContent,\n  Divider,\n  Chip,\n  Grid,\n  Stepper,\n  Step,\n  StepLabel,\n  useTheme,\n  useMediaQuery,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  Collapse,\n  Fade,\n  Badge,\n  Tooltip,\n  Avatar\n} from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport TextFieldsIcon from '@mui/icons-material/TextFields';\nimport SchoolIcon from '@mui/icons-material/School';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport LocalFloristIcon from '@mui/icons-material/LocalFlorist';\nimport EmojiNatureIcon from '@mui/icons-material/EmojiNature';\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { useDropzone } from 'react-dropzone';\nimport { uploadFileToSupabase } from '../services/ocrService'; \nimport { generateQuestionsFromMistakes, GeneratedQuestion } from '../services/geminiPdfService';\nimport { supabase } from '../supabaseClient';\nimport { useSkills } from '../components/SkillsProvider';\nimport LoadingAnimation from '../components/LoadingAnimation';\nimport GlassCard from '../components/GlassCard';\nimport GradientButton from '../components/GradientButton';\nimport { FadeIn, ScaleIn, FloatAnimation, SlideIn } from '../components/AnimationEffects';\n\n// Define an interface for user answers\ninterface StudentAnswers {\n  [questionId: string]: string;\n}\n\n// Interface for tracking which skills are improved by which questions\ninterface QuestionSkillMapping {\n  [questionId: string]: string; // maps question id to skill id\n}\n\n// Function to simulate processing delay\nconst addProcessingDelay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\n// Text styles for better readability based on dark theme best practices\nconst textStyles = {\n  heading: {\n    color: 'rgba(255, 255, 255, 0.87)', // High-emphasis text at 87% opacity\n    textShadow: '0 1px 2px rgba(0,0,0,0.2)'\n  },\n  subheading: {\n    color: 'rgba(255, 255, 255, 0.87)', // High-emphasis text at 87% opacity\n    opacity: 0.9\n  },\n  body: {\n    color: 'rgba(255, 255, 255, 0.7)' // Medium-emphasis text at 70% opacity\n  },\n  label: {\n    color: 'rgba(255, 255, 255, 0.87)',  // High-emphasis text at 87% opacity\n    fontWeight: 500\n  },\n  secondary: {\n    color: 'rgba(255, 255, 255, 0.6)' // Secondary text at 60% opacity\n  },\n  disabled: {\n    color: 'rgba(255, 255, 255, 0.38)' // Disabled text at 38% opacity\n  },\n  accent: {\n    color: 'rgba(136, 212, 152, 0.9)' // Desaturated accent color\n  }\n};\n\n// Create a dark theme to match onboarding\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#88d498',\n    },\n    secondary: {\n      main: '#88d498',\n    },\n    background: {\n      paper: 'rgba(33, 33, 33, 0.95)',\n      default: '#121212',\n    },\n    text: {\n      primary: 'rgba(255, 255, 255, 0.87)',\n      secondary: 'rgba(255, 255, 255, 0.6)',\n    },\n  },\n  typography: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    h4: {\n      fontWeight: 600,\n    },\n    h6: {\n      fontWeight: 500,\n    }\n  },\n  components: {\n    MuiInputBase: {\n      styleOverrides: {\n        input: {\n          color: 'rgba(255, 255, 255, 0.87)',\n        },\n        root: {\n          backgroundColor: 'rgba(30, 30, 30, 0.4)',\n        }\n      },\n    },\n    MuiOutlinedInput: {\n      styleOverrides: {\n        root: {\n          '&:hover .MuiOutlinedInput-notchedOutline': {\n            borderColor: '#88d498',\n          },\n          '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n            borderColor: '#88d498',\n          },\n        },\n        notchedOutline: {\n          borderColor: 'rgba(255, 255, 255, 0.23)',\n        },\n      },\n    },\n    MuiFormLabel: {\n      styleOverrides: {\n        root: {\n          color: 'rgba(255, 255, 255, 0.6)',\n          '&.Mui-focused': {\n            color: '#88d498',\n          },\n        },\n      },\n    },\n    MuiPaper: {\n      styleOverrides: {\n        root: {\n          backgroundImage: 'none',\n          backgroundColor: 'rgba(30, 30, 30, 0.6)',\n          backdropFilter: 'blur(10px)',\n          borderRadius: 12,\n          border: '1px solid rgba(255, 255, 255, 0.1)',\n        },\n      },\n    },\n    MuiCard: {\n      styleOverrides: {\n        root: {\n          background: 'rgba(24, 24, 24, 0.8)',\n          backdropFilter: 'blur(10px)',\n          borderRadius: 12,\n          border: '1px solid rgba(255, 255, 255, 0.1)',\n        },\n      },\n    },\n    MuiAppBar: {\n      styleOverrides: {\n        root: {\n          background: 'rgba(12, 59, 46, 0.8)',\n          backdropFilter: 'blur(10px)',\n          boxShadow: '0 4px 20px rgba(0, 0, 0, 0.2)',\n        },\n      },\n    },\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          borderRadius: 8,\n          textTransform: 'none',\n          fontWeight: 500,\n        },\n        contained: {\n          boxShadow: '0 4px 12px rgba(0, 0, 0, 0.2)',\n          backgroundColor: '#88d498',\n          '&:hover': {\n            backgroundColor: '#6bbb7b',\n          },\n        },\n        outlined: {\n          borderColor: '#88d498',\n          color: '#88d498',\n          '&:hover': {\n            borderColor: '#6bbb7b',\n            backgroundColor: 'rgba(136, 212, 152, 0.08)',\n          },\n        },\n      },\n    },\n    MuiTab: {\n      styleOverrides: {\n        root: {\n          textTransform: 'none',\n          fontWeight: 500,\n          '&.Mui-selected': {\n            color: '#88d498',\n          },\n        },\n      },\n    },\n    MuiTabs: {\n      styleOverrides: {\n        indicator: {\n          backgroundColor: '#88d498',\n        },\n      },\n    },\n    MuiStepIcon: {\n      styleOverrides: {\n        root: {\n          color: 'rgba(30, 30, 30, 0.8)',\n          '&.Mui-active': {\n            color: '#88d498',\n          },\n          '&.Mui-completed': {\n            color: '#6bbb7b',\n          },\n        },\n      },\n    },\n  },\n});\n\nconst UploadReport: React.FC = () => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const navigate = useNavigate();\n  const { skills, updateSkillProgress } = useSkills();\n  \n  const [drawerOpen, setDrawerOpen] = useState<boolean>(false); \n  const [uploadedFile, setUploadedFile] = useState<File | null>(null);\n  const [extractedText, setExtractedText] = useState<string | null>(null);\n  const [generatedQuestions, setGeneratedQuestions] = useState<GeneratedQuestion[]>([]); \n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [loadingMessage, setLoadingMessage] = useState<string>('');\n  const [error, setError] = useState<string | null>(null);\n  const [inputMethod, setInputMethod] = useState<string>('file'); // 'file' or 'text'\n  const [pastedText, setPastedText] = useState<string>('');\n  const [activeStep, setActiveStep] = useState<number>(0);\n  const [apiKeyMissing, setApiKeyMissing] = useState<boolean>(!process.env.REACT_APP_GEMINI_API_KEY);\n  \n  // New state for tracking student answers and showing explanations\n  const [studentAnswers, setStudentAnswers] = useState<StudentAnswers>({});\n  const [showExplanations, setShowExplanations] = useState<{[key: string]: boolean}>({});\n  const [correctAnswers, setCorrectAnswers] = useState<string[]>([]);\n  const [questionSkillMap, setQuestionSkillMap] = useState<QuestionSkillMapping>({});\n  const [showTreeGrowthBadge, setShowTreeGrowthBadge] = useState<boolean>(false);\n  const [treeBadgeCount, setTreeBadgeCount] = useState<number>(0);\n  const [userData, setUserData] = useState<{firstName?: string, lastName?: string} | null>(null);\n  const [loadingUserData, setLoadingUserData] = useState<boolean>(true);\n  \n  // Group questions by topic for better organization\n  const questionsByTopic = React.useMemo(() => {\n    const grouped: Record<string, GeneratedQuestion[]> = {};\n    generatedQuestions.forEach(q => {\n      if (!grouped[q.topic]) {\n        grouped[q.topic] = [];\n      }\n      grouped[q.topic].push(q);\n    });\n    return grouped;\n  }, [generatedQuestions]);\n\n  // Fetch user data for personalization\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const { data: { user } } = await supabase.auth.getUser();\n        if (user) {\n          const { data: onboardingData, error } = await supabase\n            .from('user_onboarding')\n            .select('first_name, last_name')\n            .eq('user_id', user.id)\n            .single();\n\n          if (error) {\n            console.error(\"Error fetching user onboarding data:\", error);\n          } else if (onboardingData) {\n            setUserData({\n              firstName: onboardingData.first_name,\n              lastName: onboardingData.last_name,\n            });\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching user session:\", error);\n      } finally {\n        setLoadingUserData(false);\n      }\n    };\n\n    fetchUserData();\n  }, []);\n\n  // Maps generated questions to skills\n  const mapQuestionsToSkills = useCallback((questions: GeneratedQuestion[]) => {\n    // Create a mapping between question topics and skill categories\n    const topicToCategory: Record<string, string> = {\n      'Grammar': 'Standard English Conventions',\n      'Punctuation': 'Standard English Conventions',\n      'Sentence Structure': 'Standard English Conventions',\n      'Evidence': 'Expression of Ideas',\n      'Organization': 'Expression of Ideas',\n      'Vocabulary': 'Expression of Ideas',\n      'Algebra': 'Math',\n      'Geometry': 'Math',\n      'Data Analysis': 'Math'\n    };\n    \n    // Generate a mapping between question IDs and skill IDs\n    const mapping: QuestionSkillMapping = {};\n    \n    questions.forEach(question => {\n      // Find matching skills from the skills context\n      const category = topicToCategory[question.topic] || question.topic;\n      \n      // Find skills that match this category\n      const matchingSkills = skills.filter(s => \n        s.category === category || \n        s.subcategory === question.topic ||\n        s.name.toLowerCase().includes(question.topic.toLowerCase())\n      );\n      \n      if (matchingSkills.length > 0) {\n        // Pick a skill to associate with this question (preferably one that's not mastered yet)\n        const notYetMastered = matchingSkills.filter(s => !s.mastered);\n        const skillToUse = notYetMastered.length > 0 \n          ? notYetMastered[Math.floor(Math.random() * notYetMastered.length)]\n          : matchingSkills[Math.floor(Math.random() * matchingSkills.length)];\n        \n        mapping[question.id] = skillToUse.id;\n      }\n    });\n    \n    setQuestionSkillMap(mapping);\n  }, [skills]);\n\n  // Effect to map questions to skills when questions are generated\n  useEffect(() => {\n    if (generatedQuestions.length > 0) {\n      mapQuestionsToSkills(generatedQuestions);\n    }\n  }, [generatedQuestions, mapQuestionsToSkills]);\n\n  const handleDrawerToggle = () => {\n    setDrawerOpen(!drawerOpen);\n  };\n\n  const onDrop = useCallback(async (acceptedFiles: File[]) => {\n    if (acceptedFiles && acceptedFiles.length > 0) {\n      const file = acceptedFiles[0];\n      const validFileTypes = ['application/pdf', 'text/plain'];\n      \n      if (!validFileTypes.includes(file.type)) {\n        setError('Invalid file type. Please upload a PDF or TXT file.');\n        setUploadedFile(null);\n        return;\n      }\n      \n      setUploadedFile(file);\n      setError(null);\n      setExtractedText(null);\n      setGeneratedQuestions([]);\n      setIsLoading(true);\n      setActiveStep(1);\n      \n      try {\n        const { data: { session } } = await supabase.auth.getSession();\n        if (!session) {\n          setError('No active session. Please log in again.');\n          setIsLoading(false);\n          return;\n        }\n\n        // Handle text files the same way as before\n        if (file.type === 'text/plain') {\n          setLoadingMessage('Reading text file content...');\n          const text = await file.text();\n          // Add realistic processing delay\n          await addProcessingDelay(2500);\n          setExtractedText(text);\n          setActiveStep(2);\n          \n          setLoadingMessage('Analyzing report and generating personalized questions...');\n          await addProcessingDelay(15000);\n          const questions = await generateQuestionsFromMistakes(text);\n          setGeneratedQuestions(questions);\n          setActiveStep(3);\n        } else {\n          // For PDF files, now process directly with Gemini 1.5 Flash\n          setLoadingMessage('Processing PDF with Gemini 1.5 Flash...');\n          \n          // We'll upload the file to Supabase for tracking/storage purposes\n          const { storagePath } = await uploadFileToSupabase(file, 'score-reports', { publicAccess: false });\n          console.log('File uploaded to Supabase:', { storagePath });\n          \n          // Skip text extraction step and directly process the PDF with Gemini\n          await addProcessingDelay(3000);\n          \n          // Skip the text extraction step for improved UI flow\n          setActiveStep(2);\n          setLoadingMessage('Analyzing PDF and generating personalized questions...');\n          \n          // Generate questions directly from the PDF file using Gemini 2.0 Flash\n          await addProcessingDelay(15000);\n          const questions = await generateQuestionsFromMistakes(file);\n          setGeneratedQuestions(questions);\n          setActiveStep(3);\n        }\n      } catch (err: any) {\n        console.error(\"Error processing file:\", err);\n        setError(`Failed to process the file: ${err.message || 'Unknown error'}. Check console for details.`);\n      } finally {\n        setIsLoading(false);\n        setLoadingMessage('');\n      }\n    }\n  }, []);\n\n  const handleTextSubmit = async () => {\n    if (!pastedText.trim()) {\n      setError('Please paste some text before submitting.');\n      return;\n    }\n\n    setError(null);\n    setExtractedText(null);\n    setGeneratedQuestions([]);\n    setIsLoading(true);\n    setActiveStep(1);\n    \n    try {\n      const { data: { session } } = await supabase.auth.getSession();\n      if (!session) {\n        setError('No active session. Please log in again.');\n        setIsLoading(false);\n        return;\n      }\n\n      // Process the pasted text with realistic delays\n      setLoadingMessage('Processing your text input...');\n      await addProcessingDelay(1800);\n      setExtractedText(pastedText);\n      setActiveStep(2);\n      \n      setLoadingMessage('Analyzing report data and creating personalized questions...');\n      // Add realistic processing delay - increased to 15 seconds\n      await addProcessingDelay(15000);\n      const questions = await generateQuestionsFromMistakes(pastedText);\n      setGeneratedQuestions(questions);\n      setActiveStep(3);\n    } catch (err: any) {\n      console.error(\"Error processing text:\", err);\n      setError(`Failed to process text: ${err.message || 'Unknown error'}. Check console for details.`);\n    } finally {\n      setIsLoading(false);\n      setLoadingMessage('');\n    }\n  };\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: { \n      'application/pdf': ['.pdf'],\n      'text/plain': ['.txt']\n    },\n    multiple: false,\n    disabled: isLoading || inputMethod === 'text'\n  });\n\n  const handleInputMethodChange = (_event: React.SyntheticEvent, newValue: string) => {\n    setInputMethod(newValue);\n    // Reset state when changing methods\n    setError(null);\n    setUploadedFile(null);\n    setPastedText('');\n    setExtractedText(null);\n    setGeneratedQuestions([]);\n    setActiveStep(0);\n  };\n\n  // Function to determine difficulty level color\n  const getDifficultyColor = (difficulty?: string) => {\n    switch (difficulty?.toLowerCase()) {\n      case 'easy': return theme.palette.success.main;\n      case 'medium': return theme.palette.warning.main;\n      case 'hard': return theme.palette.error.main;\n      default: return theme.palette.info.main;\n    }\n  };\n\n  // Handle student answer selection\n  const handleAnswerSelect = (questionId: string, answer: string) => {\n    setStudentAnswers(prev => ({\n      ...prev,\n      [questionId]: answer\n    }));\n  };\n\n  // Check if an answer is correct and reveal explanation\n  const checkAnswer = (questionId: string) => {\n    setShowExplanations(prev => ({\n      ...prev,\n      [questionId]: true\n    }));\n    \n    const question = generatedQuestions.find(q => q.id === questionId);\n    if (question && isAnswerCorrect(question, studentAnswers[questionId])) {\n      // If correct and not already in correctAnswers, add it\n      if (!correctAnswers.includes(questionId)) {\n        setCorrectAnswers(prev => [...prev, questionId]);\n        \n        // Update the associated skill's progress\n        const skillId = questionSkillMap[questionId];\n        if (skillId) {\n          // Find current skill to determine new progress level\n          const skill = skills.find(s => s.id === skillId);\n          if (skill) {\n            // Increase skill mastery level by 15-25% for each correct answer\n            const progressIncrease = Math.floor(Math.random() * 11) + 15; // 15-25\n            const newProgress = Math.min(100, skill.masteryLevel + progressIncrease);\n            \n            // Ensure we call updateSkillProgress with the correct parameters\n            updateSkillProgress(skillId, newProgress);\n            console.log(`Skill ${skillId} updated: ${skill.masteryLevel} -> ${newProgress}`);\n            \n            // Show growth badge and increment counter\n            setShowTreeGrowthBadge(true);\n            setTreeBadgeCount(prev => prev + 1);\n            \n            // Hide badge after a few seconds\n            setTimeout(() => {\n              setShowTreeGrowthBadge(false);\n            }, 3000);\n          }\n        }\n      }\n    }\n  };\n\n  // Reset a question to try again\n  const resetQuestion = (questionId: string) => {\n    const newAnswers = {...studentAnswers};\n    delete newAnswers[questionId];\n    setStudentAnswers(newAnswers);\n    \n    setShowExplanations(prev => ({\n      ...prev,\n      [questionId]: false\n    }));\n    \n    // If it was a correct answer, remove it from correctAnswers\n    if (correctAnswers.includes(questionId)) {\n      setCorrectAnswers(prev => prev.filter(id => id !== questionId));\n    }\n  };\n\n  // Function to determine if a student's answer is correct\n  const isAnswerCorrect = (question: GeneratedQuestion, studentAnswer: string) => {\n    return studentAnswer === question.answer;\n  };\n\n  // Handle navigate to dashboard to see tree growth\n  const handleViewTreeGrowth = () => {\n    navigate('/dashboard', { \n      state: { \n        fromUpload: true, \n        correctAnswers: correctAnswers.length \n      } \n    });\n  };\n\n  // Background style with animation to match onboarding\n  const getBackgroundStyle = () => {\n    return {\n      background: 'linear-gradient(135deg, #121212 0%, #1e3a34 100%)',\n      backgroundSize: '200% 200%',\n      animation: 'gradient 15s ease infinite',\n      minHeight: '100vh',\n      transition: 'background 0.5s ease-in-out',\n      '@keyframes gradient': {\n        '0%': { backgroundPosition: '0% 50%' },\n        '50%': { backgroundPosition: '100% 50%' },\n        '100%': { backgroundPosition: '0% 50%' }\n      }\n    } as React.CSSProperties;\n  };\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <Box sx={getBackgroundStyle()}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              edge=\"start\"\n              onClick={handleDrawerToggle} \n              sx={{ mr: 2 }}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1, letterSpacing: '-0.01em' }}>\n              Upload Score Report\n            </Typography>\n            \n            {/* User Avatar */}\n            <Avatar sx={{ \n              bgcolor: 'primary.main',\n              boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\n            }}>\n              {loadingUserData ? '' : userData?.firstName?.charAt(0) || 'U'}\n            </Avatar>\n            \n            {/* Tree growth badge */}\n            {correctAnswers.length > 0 && (\n              <Tooltip title=\"Your bonsai tree is growing! Click to view\">\n                <Badge \n                  badgeContent={treeBadgeCount} \n                  color=\"success\"\n                  sx={{ mr: 2, opacity: showTreeGrowthBadge ? 1 : 0.8, transition: 'all 0.3s ease' }}\n                >\n                  <IconButton \n                    color=\"inherit\" \n                    onClick={handleViewTreeGrowth}\n                    sx={{ \n                      animation: showTreeGrowthBadge ? 'treeGrow 1s ease-in-out' : 'none',\n                      '@keyframes treeGrow': {\n                        '0%': { transform: 'scale(1)' },\n                        '50%': { transform: 'scale(1.3)' },\n                        '100%': { transform: 'scale(1)' }\n                      }\n                    }}\n                  >\n                    <EmojiNatureIcon />\n                  </IconButton>\n                </Badge>\n              </Tooltip>\n            )}\n          </Toolbar>\n        </AppBar>\n\n        <Container maxWidth=\"md\" sx={{ py: 4 }}>\n          <FadeIn>\n            <Typography variant=\"h4\" gutterBottom align=\"center\" \n              sx={{ color: 'rgba(255, 255, 255, 0.87)', textShadow: '0 2px 4px rgba(0,0,0,0.3)', fontWeight: 'bold', mb: 2 }}>\n              Upload Your SAT Practice Report\n            </Typography>\n            <Typography variant=\"subtitle1\" paragraph align=\"center\" \n              sx={{ color: 'rgba(255, 255, 255, 0.7)', mb: 4 }}>\n              Upload your report or paste text to get personalized lessons and practice questions\n            </Typography>\n          </FadeIn>\n\n          {apiKeyMissing && (\n            <Alert \n              severity=\"warning\" \n              sx={{ \n                mb: 3, \n                background: 'rgba(237, 108, 2, 0.15)', \n                color: 'rgba(255, 255, 255, 0.87)',\n                '& .MuiAlert-icon': {\n                  color: 'rgba(255, 167, 38, 0.9)'\n                },\n                borderRadius: 2\n              }}\n            >\n              <Typography variant=\"subtitle2\" fontWeight=\"bold\">API Key Missing</Typography>\n              <Typography variant=\"body2\">\n                The application is running in limited mode. Some advanced features may not be available. Please contact the administrator for full functionality.\n              </Typography>\n            </Alert>\n          )}\n\n          <GlassCard sx={{ p: {xs: 3, md: 4}, mb: 4, backdropFilter: 'blur(10px)' }}>\n            <Stepper \n              activeStep={activeStep} \n              alternativeLabel \n              sx={{ \n                mb: 4, \n                display: { xs: 'none', sm: 'flex' },\n                '& .MuiStepLabel-label': {\n                  color: 'rgba(255, 255, 255, 0.6)',\n                  mt: 1\n                },\n                '& .MuiStepLabel-active': {\n                  color: 'rgba(255, 255, 255, 0.87)'\n                },\n                '& .MuiStepIcon-root': {\n                  color: 'rgba(30, 30, 30, 0.8)'\n                },\n                '& .MuiStepIcon-active': {\n                  color: '#88d498'\n                },\n                '& .MuiStepIcon-completed': {\n                  color: 'rgba(136, 212, 152, 0.7)'\n                },\n                '& .MuiStepConnector-line': {\n                  borderColor: 'rgba(255, 255, 255, 0.12)'\n                }\n              }}\n            >\n              <Step>\n                <StepLabel>Upload Report</StepLabel>\n              </Step>\n              <Step>\n                <StepLabel>Process Content</StepLabel>\n              </Step>\n              <Step>\n                <StepLabel>Extract Information</StepLabel>\n              </Step>\n              <Step>\n                <StepLabel>Generate Questions</StepLabel>\n              </Step>\n            </Stepper>\n            \n            {/* Mobile stepper status */}\n            <Box sx={{ mb: 4, display: { xs: 'block', sm: 'none' }, textAlign: 'center' }}>\n              <Typography variant=\"body2\" sx={{ color: 'rgba(255, 255, 255, 0.7)' }}>\n                Step {activeStep + 1} of 4: {['Upload Report', 'Process Content', 'Extract Information', 'Generate Questions'][activeStep]}\n              </Typography>\n            </Box>\n            \n            <Box sx={{ width: '100%', mb: 3 }}>\n              <Tabs\n                value={inputMethod}\n                onChange={handleInputMethodChange}\n                centered\n                sx={{\n                  '& .MuiTabs-indicator': {\n                    backgroundColor: '#88d498',\n                    height: 3\n                  },\n                  '& .MuiTab-root': {\n                    color: 'rgba(255, 255, 255, 0.6)',\n                    fontSize: '1rem',\n                    '&.Mui-selected': {\n                      color: 'rgba(255, 255, 255, 0.87)'\n                    }\n                  }\n                }}\n                variant={isMobile ? \"fullWidth\" : \"standard\"}\n              >\n                <Tab \n                  value=\"file\" \n                  label=\"Upload File\" \n                  icon={<CloudUploadIcon />} \n                  iconPosition=\"start\"\n                  disabled={isLoading}\n                />\n                <Tab \n                  value=\"text\" \n                  label=\"Paste Text\" \n                  icon={<TextFieldsIcon />} \n                  iconPosition=\"start\"\n                  disabled={isLoading}\n                />\n              </Tabs>\n            </Box>\n\n            {!isLoading && activeStep < 3 && (\n              <>\n                {inputMethod === 'file' ? (\n                  <Box\n                    {...getRootProps()}\n                    sx={{\n                      p: 4,\n                      textAlign: 'center',\n                      border: '2px dashed',\n                      borderColor: isDragActive ? '#88d498' : 'rgba(255, 255, 255, 0.23)',\n                      borderRadius: 2,\n                      backgroundColor: isDragActive ? 'rgba(26, 147, 111, 0.08)' : 'rgba(18, 18, 18, 0.5)',\n                      backdropFilter: 'blur(8px)',\n                      cursor: 'pointer',\n                      minHeight: 200,\n                      display: 'flex',\n                      flexDirection: 'column',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      transition: 'all 0.3s ease',\n                      overflow: 'hidden',\n                      position: 'relative',\n                      '&:hover': {\n                        borderColor: '#88d498',\n                        backgroundColor: 'rgba(26, 147, 111, 0.05)'\n                      },\n                      '&::before': {\n                        content: '\"\"',\n                        position: 'absolute',\n                        top: 0,\n                        left: 0,\n                        right: 0,\n                        bottom: 0,\n                        zIndex: -1,\n                        opacity: 0.1,\n                        background: 'linear-gradient(135deg, rgba(136, 212, 152, 0.2) 0%, rgba(12, 59, 46, 0.2) 100%)',\n                        animation: 'gradientBackground 15s ease infinite',\n                        '@keyframes gradientBackground': {\n                          '0%': { backgroundPosition: '0% 50%' },\n                          '50%': { backgroundPosition: '100% 50%' },\n                          '100%': { backgroundPosition: '0% 50%' }\n                        }\n                      }\n                    }}\n                  >\n                    <input {...getInputProps()} />\n                    <Box sx={{ \n                      display: 'flex', \n                      flexDirection: 'column', \n                      alignItems: 'center',\n                      position: 'relative',\n                      zIndex: 1\n                    }}>\n                      <CloudUploadIcon sx={{ \n                        fontSize: 60, \n                        color: '#88d498', \n                        mb: 1,\n                        filter: 'drop-shadow(0 4px 6px rgba(0,0,0,0.2))',\n                        animation: isDragActive ? 'pulse 1.5s infinite' : 'none',\n                        '@keyframes pulse': {\n                          '0%': { transform: 'scale(1)' },\n                          '50%': { transform: 'scale(1.1)' },\n                          '100%': { transform: 'scale(1)' },\n                        }\n                      }} />\n                      <PictureAsPdfIcon sx={{ \n                        fontSize: 40, \n                        color: 'rgba(255, 255, 255, 0.6)', \n                        mb: 2,\n                        filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.1))'\n                      }} />\n                    </Box>\n                    {isDragActive ? (\n                      <Typography variant=\"h6\" sx={{ \n                        color: '#88d498', \n                        fontWeight: 'bold',\n                        textShadow: '0 2px 4px rgba(0,0,0,0.2)'\n                      }}>\n                        Drop the file here ...\n                      </Typography>\n                    ) : (\n                      <Typography variant=\"h6\" sx={{ \n                        color: 'rgba(255, 255, 255, 0.87)', \n                        fontWeight: 'medium',\n                        textShadow: '0 2px 4px rgba(0,0,0,0.2)'\n                      }}>\n                        Drag 'n' drop a file here, or click to select file\n                      </Typography>\n                    )}\n                    <Typography variant=\"body2\" sx={{ color: 'rgba(255, 255, 255, 0.6)', mt: 1 }}>\n                      (Max file size: 10MB. Supported formats: PDF, TXT)\n                    </Typography>\n                  </Box>\n                ) : (\n                  <Box sx={{ p: 2 }}>\n                    <Typography variant=\"h6\" gutterBottom sx={{ \n                      color: 'rgba(255, 255, 255, 0.87)',\n                      fontWeight: 'medium',\n                      mb: 2\n                    }}>\n                      Paste Your SAT Report Text\n                    </Typography>\n                    <TextField\n                      fullWidth\n                      multiline\n                      rows={10}\n                      variant=\"outlined\"\n                      placeholder=\"Paste the content of your SAT report here...\"\n                      value={pastedText}\n                      onChange={(e) => setPastedText(e.target.value)}\n                      disabled={isLoading}\n                      sx={{ \n                        mb: 3,\n                        '& .MuiOutlinedInput-root': {\n                          backgroundColor: 'rgba(18, 18, 18, 0.5)',\n                          backdropFilter: 'blur(8px)',\n                          borderRadius: 2,\n                          '&:hover .MuiOutlinedInput-notchedOutline': {\n                            borderColor: '#88d498'\n                          },\n                          '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                            borderColor: '#88d498',\n                            borderWidth: 2\n                          }\n                        },\n                        '& .MuiInputBase-input': {\n                          color: 'rgba(255, 255, 255, 0.87)'\n                        }\n                      }}\n                    />\n                    <GradientButton \n                      variant=\"contained\" \n                      gradient=\"primary\"\n                      onClick={handleTextSubmit}\n                      disabled={!pastedText.trim() || isLoading}\n                      fullWidth\n                      size=\"large\"\n                      sx={{ py: 1.5 }}\n                    >\n                      Process Text\n                    </GradientButton>\n                  </Box>\n                )}\n              </>\n            )}\n\n            {error && (\n              <Alert \n                severity=\"error\" \n                sx={{ \n                  mt: 2, \n                  backgroundColor: 'rgba(211, 47, 47, 0.15)', \n                  color: 'rgba(255, 255, 255, 0.87)',\n                  '& .MuiAlert-icon': {\n                    color: 'rgba(244, 67, 54, 0.9)'\n                  },\n                  borderRadius: 2\n                }}\n              >\n                {error}\n              </Alert>\n            )}\n\n            {uploadedFile && inputMethod === 'file' && !error && !isLoading && activeStep < 3 && (\n              <ScaleIn>\n                <Box sx={{ \n                  p: 3, \n                  mt: 3, \n                  backgroundColor: 'rgba(18, 18, 18, 0.7)', \n                  backdropFilter: 'blur(10px)',\n                  borderRadius: 2,\n                  border: '1px solid rgba(136, 212, 152, 0.2)',\n                  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.15)'\n                }}>\n                  <Typography variant=\"h6\" sx={{ \n                    color: 'rgba(255, 255, 255, 0.87)',\n                    fontWeight: 'medium',\n                    mb: 2\n                  }}>\n                    Uploaded File:\n                  </Typography>\n                  <Box sx={{ display: 'flex', alignItems: 'center', mt: 1 }}>\n                    <PictureAsPdfIcon sx={{ color: '#88d498', mr: 1, filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.2))' }} />\n                    <Typography sx={{ color: 'rgba(255, 255, 255, 0.8)' }}>\n                      {uploadedFile.name} ({Math.round(uploadedFile.size / 1024)} KB)\n                    </Typography>\n                  </Box>\n                  <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 3 }}>\n                    <GradientButton \n                      variant=\"contained\" \n                      gradient=\"primary\"\n                      onClick={() => {\n                        onDrop([uploadedFile]);\n                      }}\n                      size=\"medium\"\n                    >\n                      Process File\n                    </GradientButton>\n                  </Box>\n                </Box>\n              </ScaleIn>\n            )}\n\n            {isLoading && (\n              <Box sx={{ textAlign: 'center', my: 6, position: 'relative' }}>\n                <FloatAnimation>\n                  <LoadingAnimation\n                    message={loadingMessage || 'Processing...'}\n                    width={280}\n                    height={280}\n                  />\n                </FloatAnimation>\n              </Box>\n            )}\n\n            {extractedText && !isLoading && activeStep === 2 && (\n              <ScaleIn>\n                <Box sx={{ \n                  p: 4, \n                  mt: 4, \n                  backgroundColor: 'rgba(18, 18, 18, 0.7)', \n                  backdropFilter: 'blur(10px)',\n                  borderRadius: 2,\n                  border: '1px solid rgba(136, 212, 152, 0.2)',\n                  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.15)'\n                }}>\n                  <Typography variant=\"h6\" gutterBottom sx={{ \n                    color: 'rgba(255, 255, 255, 0.87)',\n                    fontWeight: 'medium',\n                    mb: 2\n                  }}>\n                    Extracted Text (Preview):\n                  </Typography>\n                  <Box sx={{ \n                    maxHeight: 150, \n                    overflowY: 'auto', \n                    whiteSpace: 'pre-wrap', \n                    backgroundColor: 'rgba(12, 12, 12, 0.9)', \n                    p: 3, \n                    borderRadius: 2,\n                    border: '1px solid rgba(255, 255, 255, 0.1)'\n                  }}>\n                    <Typography variant=\"body2\" sx={{ color: 'rgba(255, 255, 255, 0.8)' }}>\n                      {extractedText}\n                    </Typography>\n                  </Box>\n                </Box>\n              </ScaleIn>\n            )}\n            \n            {generatedQuestions.length > 0 && !isLoading && (\n              <Box sx={{ mt: 4 }}>\n                <FadeIn>\n                  <GlassCard sx={{ \n                    p: 3, \n                    borderRadius: 2, \n                    mb: 4,\n                    backdropFilter: 'blur(10px)',\n                    boxShadow: '0 8px 32px rgba(0, 0, 0, 0.3)',\n                    border: '1px solid rgba(136, 212, 152, 0.2)',\n                  }}>\n                    <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n                      <SchoolIcon sx={{ fontSize: 32, color: '#88d498', mr: 1.5, filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.2))' }} />\n                      <Typography variant=\"h5\" sx={{ color: 'rgba(255, 255, 255, 0.87)', fontWeight: 'bold' }}>\n                        Your Personalized Practice Questions\n                      </Typography>\n                    </Box>\n                    \n                    <Typography variant=\"body1\" paragraph sx={{ color: 'rgba(255, 255, 255, 0.7)' }}>\n                      Based on your test results, we've created {generatedQuestions.length} personalized practice questions \n                      covering different topics to help you improve your SAT score.\n                    </Typography>\n                    \n                    {correctAnswers.length > 0 && (\n                      <Alert \n                        severity=\"success\" \n                        icon={<LocalFloristIcon />}\n                        sx={{ \n                          mb: 3, \n                          display: 'flex', \n                          alignItems: 'center',\n                          background: 'rgba(46, 125, 50, 0.15)',\n                          color: 'rgba(255, 255, 255, 0.87)',\n                          '& .MuiAlert-icon': {\n                            color: 'rgba(129, 199, 132, 0.9)'\n                          }\n                        }}\n                      >\n                        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', width: '100%' }}>\n                          <Typography sx={textStyles.body}>\n                            You've correctly answered {correctAnswers.length} question{correctAnswers.length !== 1 ? 's' : ''}! \n                            Your Bonsai Tree is growing with each correct answer.\n                          </Typography>\n                          <GradientButton \n                            variant=\"outlined\" \n                            size=\"small\" \n                            gradient=\"success\"\n                            startIcon={<EmojiNatureIcon />}\n                            onClick={handleViewTreeGrowth}\n                            sx={{ ml: 2 }}\n                          >\n                            View Growth\n                          </GradientButton>\n                        </Box>\n                      </Alert>\n                    )}\n                    \n                    <Divider sx={{ mb: 3, borderColor: 'rgba(255, 255, 255, 0.1)' }} />\n                    \n                    {Object.entries(questionsByTopic).map(([topic, questions], topicIndex) => (\n                      <Accordion \n                        key={topicIndex} \n                        defaultExpanded={topicIndex === 0} \n                        sx={{ \n                          mb: 2, \n                          boxShadow: 'none', \n                          background: 'rgba(30, 30, 30, 0.4)', \n                          border: '1px solid rgba(255, 255, 255, 0.1)',\n                          borderRadius: '4px !important',\n                          '&:before': {\n                            display: 'none'\n                          },\n                          '&.Mui-expanded': {\n                            margin: '0 0 16px 0'\n                          }\n                        }}\n                      >\n                        <AccordionSummary \n                          expandIcon={<ExpandMoreIcon sx={{ color: 'rgba(255, 255, 255, 0.6)' }} />}\n                          sx={{ \n                            backgroundColor: 'rgba(18, 18, 18, 0.6)',\n                            borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n                            borderRadius: '4px',\n                            '&.Mui-expanded': {\n                              borderBottomLeftRadius: 0,\n                              borderBottomRightRadius: 0\n                            }\n                          }}\n                        >\n                          <Box sx={{ display: 'flex', alignItems: 'center', width: '100%', justifyContent: 'space-between' }}>\n                            <Typography variant=\"h6\" sx={{ ...textStyles.heading, fontWeight: 'bold' }}>\n                              {topic} ({questions.length})\n                            </Typography>\n                            \n                            {/* Show mini progress for this topic */}\n                            {questions.length > 0 && (\n                              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                                <Typography variant=\"body2\" sx={{ ...textStyles.secondary, mr: 1 }}>\n                                  {questions.filter(q => correctAnswers.includes(q.id)).length}/{questions.length} Correct\n                                </Typography>\n                                {questions.some(q => correctAnswers.includes(q.id)) && (\n                                  <LocalFloristIcon \n                                    fontSize=\"small\" \n                                    sx={{ \n                                      color: 'rgba(129, 199, 132, 0.9)',\n                                      opacity: questions.every(q => correctAnswers.includes(q.id)) ? 1 : 0.6,\n                                      animation: showTreeGrowthBadge ? 'pulse 1.5s infinite' : 'none',\n                                      '@keyframes pulse': {\n                                        '0%': { transform: 'scale(1)' },\n                                        '50%': { transform: 'scale(1.2)' },\n                                        '100%': { transform: 'scale(1)' }\n                                      }\n                                    }} \n                                  />\n                                )}\n                              </Box>\n                            )}\n                          </Box>\n                        </AccordionSummary>\n                        <AccordionDetails sx={{ p: 0 }}>\n                          {questions.map((question, qIndex) => (\n                            <Box \n                              key={question.id} \n                              sx={{ \n                                mb: 2, \n                                m: 2, \n                                p: 3,\n                                borderRadius: 2, \n                                background: 'rgba(24, 24, 24, 0.9)',\n                                border: '1px solid rgba(255, 255, 255, 0.1)'\n                              }}\n                            >\n                              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n                                <Typography variant=\"subtitle1\" sx={{ ...textStyles.heading, fontWeight: 'bold' }}>\n                                  Question {topicIndex + 1}.{qIndex + 1}\n                                  \n                                  {/* Show which skill this question helps */}\n                                  {questionSkillMap[question.id] && (\n                                    <Tooltip \n                                      title={`Answering this correctly will help grow your \"${skills.find(s => s.id === questionSkillMap[question.id])?.name}\" skill`}\n                                      arrow\n                                    >\n                                      <Typography\n                                        component=\"span\"\n                                        variant=\"body2\"\n                                        sx={{ \n                                          ml: 1, \n                                          color: 'rgba(255, 255, 255, 0.6)',\n                                          cursor: 'help',\n                                          textDecoration: 'underline',\n                                          textDecorationStyle: 'dotted'\n                                        }}\n                                      >\n                                        (Improves a skill)\n                                      </Typography>\n                                    </Tooltip>\n                                  )}\n                                </Typography>\n                                {question.difficulty && (\n                                  <Chip \n                                    label={question.difficulty} \n                                    size=\"small\" \n                                    sx={{ \n                                      bgcolor: getDifficultyColor(question.difficulty),\n                                      color: 'white',\n                                      fontWeight: 'bold'\n                                    }} \n                                  />\n                                )}\n                              </Box>\n                              \n                              <Typography variant=\"body1\" paragraph sx={{ ...textStyles.body, whiteSpace: 'pre-wrap' }}>\n                                {question.text}\n                              </Typography>\n                              \n                              {question.options && (\n                                <Box sx={{ ml: 2, mb: 2 }}>\n                                  <RadioGroup \n                                    value={studentAnswers[question.id] || ''} \n                                    onChange={(e) => handleAnswerSelect(question.id, e.target.value)}\n                                  >\n                                    {question.options.map((opt, i) => (\n                                      <FormControlLabel\n                                        key={i}\n                                        value={String.fromCharCode(65 + i)} // A, B, C, D...\n                                        control={\n                                          <Radio \n                                            sx={{\n                                              color: 'rgba(255, 255, 255, 0.6)',\n                                              '&.Mui-checked': {\n                                                color: 'rgba(136, 212, 152, 0.9)',\n                                              }\n                                            }}\n                                          />\n                                        }\n                                        label={\n                                          <Box sx={{ \n                                            display: 'flex', \n                                            alignItems: 'center',\n                                            color: showExplanations[question.id] && \n                                                  question.answer === String.fromCharCode(65 + i) ? \n                                                  'rgba(129, 199, 132, 0.9)' : 'rgba(255, 255, 255, 0.87)'\n                                          }}>\n                                            <Typography variant=\"body1\">\n                                              {String.fromCharCode(65 + i)}. {opt}\n                                            </Typography>\n                                            {showExplanations[question.id] && \n                                              question.answer === String.fromCharCode(65 + i) && \n                                              <CheckCircleIcon sx={{ ml:.5, color: 'rgba(129, 199, 132, 0.9)' }} />\n                                            }\n                                          </Box>\n                                        }\n                                        sx={{ \n                                          p: 1.5, \n                                          mb: 1, \n                                          borderRadius: 1, \n                                          border: '1px solid',\n                                          borderColor: 'rgba(255, 255, 255, 0.1)',\n                                          backgroundColor: showExplanations[question.id] && \n                                                    question.answer === String.fromCharCode(65 + i) ? \n                                                    'rgba(76, 175, 80, 0.08)' : 'rgba(30, 30, 30, 0.3)',\n                                          transition: 'all 0.2s ease',\n                                          '&:hover': {\n                                            backgroundColor: !showExplanations[question.id] ? \n                                              'rgba(30, 30, 30, 0.6)' : \n                                              (question.answer === String.fromCharCode(65 + i) ? \n                                                'rgba(76, 175, 80, 0.08)' : 'rgba(30, 30, 30, 0.3)')\n                                          }\n                                        }}\n                                        disabled={showExplanations[question.id]}\n                                      />\n                                    ))}\n                                  </RadioGroup>\n                                </Box>\n                              )}\n                              \n                              <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 2 }}>\n                                {studentAnswers[question.id] && !showExplanations[question.id] && (\n                                  <GradientButton \n                                    variant=\"contained\" \n                                    gradient=\"primary\" \n                                    onClick={() => checkAnswer(question.id)}\n                                    sx={{ mr: 1 }}\n                                  >\n                                    Check Answer\n                                  </GradientButton>\n                                )}\n                                {showExplanations[question.id] && (\n                                  <GradientButton \n                                    variant=\"outlined\" \n                                    gradient=\"primary\"\n                                    onClick={() => resetQuestion(question.id)}\n                                  >\n                                    Try Again\n                                  </GradientButton>\n                                )}\n                              </Box>\n                              \n                              {showExplanations[question.id] && (\n                                <Fade in={showExplanations[question.id]} timeout={500}>\n                                  <Box>\n                                    <Box sx={{ display: 'flex', alignItems: 'center', mt: 2, mb: 1 }}>\n                                      {isAnswerCorrect(question, studentAnswers[question.id]) ? (\n                                        <Alert \n                                          severity=\"success\" \n                                          icon={<CheckCircleIcon fontSize=\"inherit\" />}\n                                          sx={{ \n                                            width: '100%',\n                                            backgroundColor: 'rgba(46, 125, 50, 0.15)',\n                                            color: 'rgba(255, 255, 255, 0.87)',\n                                            '& .MuiAlert-icon': {\n                                              color: 'rgba(129, 199, 132, 0.9)'\n                                            }\n                                          }}\n                                        >\n                                          <Typography variant=\"body1\" fontWeight=\"bold\">\n                                            Correct! Well done.\n                                          </Typography>\n                                        </Alert>\n                                      ) : (\n                                        <Alert \n                                          severity=\"error\" \n                                          icon={<CancelIcon fontSize=\"inherit\" />}\n                                          sx={{ \n                                            width: '100%',\n                                            backgroundColor: 'rgba(211, 47, 47, 0.15)',\n                                            color: 'rgba(255, 255, 255, 0.87)',\n                                            '& .MuiAlert-icon': {\n                                              color: 'rgba(244, 67, 54, 0.9)'\n                                            }\n                                          }}\n                                        >\n                                          <Typography variant=\"body1\" fontWeight=\"bold\">\n                                            Incorrect. The correct answer is {question.answer}.\n                                          </Typography>\n                                        </Alert>\n                                      )}\n                                    </Box>\n                                    \n                                    <Box sx={{ \n                                      mt: 2, \n                                      p: 2, \n                                      bgcolor: 'rgba(18, 18, 18, 0.8)', \n                                      borderRadius: 1.5,\n                                      border: '1px solid rgba(136, 212, 152, 0.2)',\n                                      position: 'relative',\n                                      '&::before': {\n                                        content: '\"\"',\n                                        position: 'absolute',\n                                        top: 0,\n                                        left: 0,\n                                        width: '4px',\n                                        height: '100%',\n                                        backgroundColor: 'rgba(136, 212, 152, 0.9)',\n                                        borderTopLeftRadius: 4,\n                                        borderBottomLeftRadius: 4\n                                      }\n                                    }}>\n                                      <Typography variant=\"subtitle2\" sx={{ fontWeight: 'bold', ...textStyles.heading, mb: 0.5, pl: 1 }}>\n                                        Explanation:\n                                      </Typography>\n                                      <Typography variant=\"body2\" sx={{ ...textStyles.body, whiteSpace: 'pre-wrap', pl: 1 }}>\n                                        {question.explanation}\n                                      </Typography>\n                                    </Box>\n                                  </Box>\n                                </Fade>\n                              )}\n                            </Box>\n                          ))}\n                        </AccordionDetails>\n                      </Accordion>\n                    ))}\n                  </GlassCard>\n                </FadeIn>\n                \n                <Box sx={{ mt: 4, display: 'flex', justifyContent: 'center', gap: 2 }}>\n                  <GradientButton \n                    onClick={handleViewTreeGrowth}\n                    variant=\"outlined\" \n                    gradient=\"success\"\n                    size=\"large\"\n                    startIcon={<EmojiNatureIcon />}\n                  >\n                    View Your Bonsai Tree\n                  </GradientButton>\n                  <GradientButton\n                    variant=\"contained\"\n                    gradient=\"primary\"\n                    size=\"large\"\n                    onClick={() => {\n                      setActiveStep(0);\n                      setGeneratedQuestions([]);\n                      setExtractedText(null);\n                      setInputMethod('file');\n                      setUploadedFile(null);\n                      setPastedText('');\n                      setStudentAnswers({});\n                      setShowExplanations({});\n                      setCorrectAnswers([]);\n                      setQuestionSkillMap({});\n                      setTreeBadgeCount(0);\n                    }}\n                  >\n                    Upload Another Report\n                  </GradientButton>\n                </Box>\n              </Box>\n            )}\n\n          </GlassCard>\n        </Container>\n      </Box>\n    </ThemeProvider>\n  );\n};\n\nexport default UploadReport; "],"mappings":"sHAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,WAAW,CAAEC,SAAS,KAAQ,OAAO,CAC/D,OAAeC,WAAW,KAAQ,kBAAkB,CACpD,OACEC,GAAG,CAEHC,SAAS,CACTC,UAAU,CAEVC,MAAM,CACNC,OAAO,CACPC,UAAU,CAEVC,KAAK,CACLC,IAAI,CACJC,GAAG,CACHC,SAAS,CAGTC,OAAO,CACPC,IAAI,CAEJC,OAAO,CACPC,IAAI,CACJC,SAAS,CACTC,QAAQ,CACRC,aAAa,CACbC,SAAS,CACTC,gBAAgB,CAChBC,gBAAgB,CAChBC,UAAU,CACVC,KAAK,CACLC,gBAAgB,CAEhBC,IAAI,CACJC,KAAK,CACLC,OAAO,CACPC,MAAM,KACD,eAAe,CACtB,OAASC,WAAW,CAAEC,aAAa,KAAQ,sBAAsB,CACjE,MAAO,CAAAC,QAAQ,KAAM,0BAA0B,CAC/C,MAAO,CAAAC,eAAe,KAAM,iCAAiC,CAC7D,MAAO,CAAAC,cAAc,KAAM,gCAAgC,CAC3D,MAAO,CAAAC,UAAU,KAAM,4BAA4B,CACnD,MAAO,CAAAC,cAAc,KAAM,gCAAgC,CAC3D,MAAO,CAAAC,eAAe,KAAM,iCAAiC,CAC7D,MAAO,CAAAC,UAAU,KAAM,4BAA4B,CACnD,MAAO,CAAAC,gBAAgB,KAAM,kCAAkC,CAC/D,MAAO,CAAAC,eAAe,KAAM,iCAAiC,CAC7D,MAAO,CAAAC,gBAAgB,KAAM,kCAAkC,CAE/D,OAASC,WAAW,KAAQ,gBAAgB,CAC5C,OAASC,oBAAoB,KAAQ,wBAAwB,CAC7D,OAASC,6BAA6B,KAA2B,8BAA8B,CAC/F,OAASC,QAAQ,KAAQ,mBAAmB,CAC5C,OAASC,SAAS,KAAQ,8BAA8B,CACxD,MAAO,CAAAC,gBAAgB,KAAM,gCAAgC,CAC7D,MAAO,CAAAC,SAAS,KAAM,yBAAyB,CAC/C,MAAO,CAAAC,cAAc,KAAM,8BAA8B,CACzD,OAASC,MAAM,CAAEC,OAAO,CAAEC,cAAc,KAAiB,gCAAgC,CAEzF;AAKA;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAKA;AACA,KAAM,CAAAC,kBAAkB,CAAIC,EAAU,EAAK,GAAI,CAAAC,OAAO,CAACC,OAAO,EAAIC,UAAU,CAACD,OAAO,CAAEF,EAAE,CAAC,CAAC,CAE1F;AACA,KAAM,CAAAI,UAAU,CAAG,CACjBC,OAAO,CAAE,CACPC,KAAK,CAAE,2BAA2B,CAAE;AACpCC,UAAU,CAAE,2BACd,CAAC,CACDC,UAAU,CAAE,CACVF,KAAK,CAAE,2BAA2B,CAAE;AACpCG,OAAO,CAAE,GACX,CAAC,CACDC,IAAI,CAAE,CACJJ,KAAK,CAAE,0BAA2B;AACpC,CAAC,CACDK,KAAK,CAAE,CACLL,KAAK,CAAE,2BAA2B,CAAG;AACrCM,UAAU,CAAE,GACd,CAAC,CACDC,SAAS,CAAE,CACTP,KAAK,CAAE,0BAA2B;AACpC,CAAC,CACDQ,QAAQ,CAAE,CACRR,KAAK,CAAE,2BAA4B;AACrC,CAAC,CACDS,MAAM,CAAE,CACNT,KAAK,CAAE,0BAA2B;AACpC,CACF,CAAC,CAED;AACA,KAAM,CAAAU,SAAS,CAAG9C,WAAW,CAAC,CAC5B+C,OAAO,CAAE,CACPC,IAAI,CAAE,MAAM,CACZC,OAAO,CAAE,CACPC,IAAI,CAAE,SACR,CAAC,CACDP,SAAS,CAAE,CACTO,IAAI,CAAE,SACR,CAAC,CACDC,UAAU,CAAE,CACVC,KAAK,CAAE,wBAAwB,CAC/BC,OAAO,CAAE,SACX,CAAC,CACDC,IAAI,CAAE,CACJL,OAAO,CAAE,2BAA2B,CACpCN,SAAS,CAAE,0BACb,CACF,CAAC,CACDY,UAAU,CAAE,CACVC,UAAU,CAAE,4CAA4C,CACxDC,EAAE,CAAE,CACFf,UAAU,CAAE,GACd,CAAC,CACDgB,EAAE,CAAE,CACFhB,UAAU,CAAE,GACd,CACF,CAAC,CACDiB,UAAU,CAAE,CACVC,YAAY,CAAE,CACZC,cAAc,CAAE,CACdC,KAAK,CAAE,CACL1B,KAAK,CAAE,2BACT,CAAC,CACD2B,IAAI,CAAE,CACJC,eAAe,CAAE,uBACnB,CACF,CACF,CAAC,CACDC,gBAAgB,CAAE,CAChBJ,cAAc,CAAE,CACdE,IAAI,CAAE,CACJ,0CAA0C,CAAE,CAC1CG,WAAW,CAAE,SACf,CAAC,CACD,gDAAgD,CAAE,CAChDA,WAAW,CAAE,SACf,CACF,CAAC,CACDC,cAAc,CAAE,CACdD,WAAW,CAAE,2BACf,CACF,CACF,CAAC,CACDE,YAAY,CAAE,CACZP,cAAc,CAAE,CACdE,IAAI,CAAE,CACJ3B,KAAK,CAAE,0BAA0B,CACjC,eAAe,CAAE,CACfA,KAAK,CAAE,SACT,CACF,CACF,CACF,CAAC,CACDiC,QAAQ,CAAE,CACRR,cAAc,CAAE,CACdE,IAAI,CAAE,CACJO,eAAe,CAAE,MAAM,CACvBN,eAAe,CAAE,uBAAuB,CACxCO,cAAc,CAAE,YAAY,CAC5BC,YAAY,CAAE,EAAE,CAChBC,MAAM,CAAE,oCACV,CACF,CACF,CAAC,CACDC,OAAO,CAAE,CACPb,cAAc,CAAE,CACdE,IAAI,CAAE,CACJZ,UAAU,CAAE,uBAAuB,CACnCoB,cAAc,CAAE,YAAY,CAC5BC,YAAY,CAAE,EAAE,CAChBC,MAAM,CAAE,oCACV,CACF,CACF,CAAC,CACDE,SAAS,CAAE,CACTd,cAAc,CAAE,CACdE,IAAI,CAAE,CACJZ,UAAU,CAAE,uBAAuB,CACnCoB,cAAc,CAAE,YAAY,CAC5BK,SAAS,CAAE,+BACb,CACF,CACF,CAAC,CACDC,SAAS,CAAE,CACThB,cAAc,CAAE,CACdE,IAAI,CAAE,CACJS,YAAY,CAAE,CAAC,CACfM,aAAa,CAAE,MAAM,CACrBpC,UAAU,CAAE,GACd,CAAC,CACDqC,SAAS,CAAE,CACTH,SAAS,CAAE,+BAA+B,CAC1CZ,eAAe,CAAE,SAAS,CAC1B,SAAS,CAAE,CACTA,eAAe,CAAE,SACnB,CACF,CAAC,CACDgB,QAAQ,CAAE,CACRd,WAAW,CAAE,SAAS,CACtB9B,KAAK,CAAE,SAAS,CAChB,SAAS,CAAE,CACT8B,WAAW,CAAE,SAAS,CACtBF,eAAe,CAAE,2BACnB,CACF,CACF,CACF,CAAC,CACDiB,MAAM,CAAE,CACNpB,cAAc,CAAE,CACdE,IAAI,CAAE,CACJe,aAAa,CAAE,MAAM,CACrBpC,UAAU,CAAE,GAAG,CACf,gBAAgB,CAAE,CAChBN,KAAK,CAAE,SACT,CACF,CACF,CACF,CAAC,CACD8C,OAAO,CAAE,CACPrB,cAAc,CAAE,CACdsB,SAAS,CAAE,CACTnB,eAAe,CAAE,SACnB,CACF,CACF,CAAC,CACDoB,WAAW,CAAE,CACXvB,cAAc,CAAE,CACdE,IAAI,CAAE,CACJ3B,KAAK,CAAE,uBAAuB,CAC9B,cAAc,CAAE,CACdA,KAAK,CAAE,SACT,CAAC,CACD,iBAAiB,CAAE,CACjBA,KAAK,CAAE,SACT,CACF,CACF,CACF,CACF,CACF,CAAC,CAAC,CAEF,KAAM,CAAAiD,YAAsB,CAAGA,CAAA,GAAM,KAAAC,mBAAA,CACnC,KAAM,CAAAC,KAAK,CAAGnG,QAAQ,CAAC,CAAC,CACxB,KAAM,CAAAoG,QAAQ,CAAGnG,aAAa,CAACkG,KAAK,CAACE,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CAC5D,KAAM,CAAAC,QAAQ,CAAGvH,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAEwH,MAAM,CAAEC,mBAAoB,CAAC,CAAG7E,SAAS,CAAC,CAAC,CAEnD,KAAM,CAAC8E,UAAU,CAAEC,aAAa,CAAC,CAAG9H,QAAQ,CAAU,KAAK,CAAC,CAC5D,KAAM,CAAC+H,YAAY,CAAEC,eAAe,CAAC,CAAGhI,QAAQ,CAAc,IAAI,CAAC,CACnE,KAAM,CAACiI,aAAa,CAAEC,gBAAgB,CAAC,CAAGlI,QAAQ,CAAgB,IAAI,CAAC,CACvE,KAAM,CAACmI,kBAAkB,CAAEC,qBAAqB,CAAC,CAAGpI,QAAQ,CAAsB,EAAE,CAAC,CACrF,KAAM,CAACqI,SAAS,CAAEC,YAAY,CAAC,CAAGtI,QAAQ,CAAU,KAAK,CAAC,CAC1D,KAAM,CAACuI,cAAc,CAAEC,iBAAiB,CAAC,CAAGxI,QAAQ,CAAS,EAAE,CAAC,CAChE,KAAM,CAACyI,KAAK,CAAEC,QAAQ,CAAC,CAAG1I,QAAQ,CAAgB,IAAI,CAAC,CACvD,KAAM,CAAC2I,WAAW,CAAEC,cAAc,CAAC,CAAG5I,QAAQ,CAAS,MAAM,CAAC,CAAE;AAChE,KAAM,CAAC6I,UAAU,CAAEC,aAAa,CAAC,CAAG9I,QAAQ,CAAS,EAAE,CAAC,CACxD,KAAM,CAAC+I,UAAU,CAAEC,aAAa,CAAC,CAAGhJ,QAAQ,CAAS,CAAC,CAAC,CACvD,KAAM,CAACiJ,aAAa,CAAEC,gBAAgB,CAAC,CAAGlJ,QAAQ,CAAU,CAACmJ,OAAO,CAACC,GAAG,CAACC,wBAAwB,CAAC,CAElG;AACA,KAAM,CAACC,cAAc,CAAEC,iBAAiB,CAAC,CAAGvJ,QAAQ,CAAiB,CAAC,CAAC,CAAC,CACxE,KAAM,CAACwJ,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGzJ,QAAQ,CAA2B,CAAC,CAAC,CAAC,CACtF,KAAM,CAAC0J,cAAc,CAAEC,iBAAiB,CAAC,CAAG3J,QAAQ,CAAW,EAAE,CAAC,CAClE,KAAM,CAAC4J,gBAAgB,CAAEC,mBAAmB,CAAC,CAAG7J,QAAQ,CAAuB,CAAC,CAAC,CAAC,CAClF,KAAM,CAAC8J,mBAAmB,CAAEC,sBAAsB,CAAC,CAAG/J,QAAQ,CAAU,KAAK,CAAC,CAC9E,KAAM,CAACgK,cAAc,CAAEC,iBAAiB,CAAC,CAAGjK,QAAQ,CAAS,CAAC,CAAC,CAC/D,KAAM,CAACkK,QAAQ,CAAEC,WAAW,CAAC,CAAGnK,QAAQ,CAAiD,IAAI,CAAC,CAC9F,KAAM,CAACoK,eAAe,CAAEC,kBAAkB,CAAC,CAAGrK,QAAQ,CAAU,IAAI,CAAC,CAErE;AACA,KAAM,CAAAsK,gBAAgB,CAAGvK,KAAK,CAACwK,OAAO,CAAC,IAAM,CAC3C,KAAM,CAAAC,OAA4C,CAAG,CAAC,CAAC,CACvDrC,kBAAkB,CAACsC,OAAO,CAACC,CAAC,EAAI,CAC9B,GAAI,CAACF,OAAO,CAACE,CAAC,CAACC,KAAK,CAAC,CAAE,CACrBH,OAAO,CAACE,CAAC,CAACC,KAAK,CAAC,CAAG,EAAE,CACvB,CACAH,OAAO,CAACE,CAAC,CAACC,KAAK,CAAC,CAACC,IAAI,CAACF,CAAC,CAAC,CAC1B,CAAC,CAAC,CACF,MAAO,CAAAF,OAAO,CAChB,CAAC,CAAE,CAACrC,kBAAkB,CAAC,CAAC,CAExB;AACAjI,SAAS,CAAC,IAAM,CACd,KAAM,CAAA2K,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CACF,KAAM,CAAEC,IAAI,CAAE,CAAEC,IAAK,CAAE,CAAC,CAAG,KAAM,CAAAjI,QAAQ,CAACkI,IAAI,CAACC,OAAO,CAAC,CAAC,CACxD,GAAIF,IAAI,CAAE,CACR,KAAM,CAAED,IAAI,CAAEI,cAAc,CAAEzC,KAAM,CAAC,CAAG,KAAM,CAAA3F,QAAQ,CACnDqI,IAAI,CAAC,iBAAiB,CAAC,CACvBC,MAAM,CAAC,uBAAuB,CAAC,CAC/BC,EAAE,CAAC,SAAS,CAAEN,IAAI,CAACO,EAAE,CAAC,CACtBC,MAAM,CAAC,CAAC,CAEX,GAAI9C,KAAK,CAAE,CACT+C,OAAO,CAAC/C,KAAK,CAAC,sCAAsC,CAAEA,KAAK,CAAC,CAC9D,CAAC,IAAM,IAAIyC,cAAc,CAAE,CACzBf,WAAW,CAAC,CACVsB,SAAS,CAAEP,cAAc,CAACQ,UAAU,CACpCC,QAAQ,CAAET,cAAc,CAACU,SAC3B,CAAC,CAAC,CACJ,CACF,CACF,CAAE,MAAOnD,KAAK,CAAE,CACd+C,OAAO,CAAC/C,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACtD,CAAC,OAAS,CACR4B,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CACF,CAAC,CAEDQ,aAAa,CAAC,CAAC,CACjB,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAgB,oBAAoB,CAAG5L,WAAW,CAAE6L,SAA8B,EAAK,CAC3E;AACA,KAAM,CAAAC,eAAuC,CAAG,CAC9C,SAAS,CAAE,8BAA8B,CACzC,aAAa,CAAE,8BAA8B,CAC7C,oBAAoB,CAAE,8BAA8B,CACpD,UAAU,CAAE,qBAAqB,CACjC,cAAc,CAAE,qBAAqB,CACrC,YAAY,CAAE,qBAAqB,CACnC,SAAS,CAAE,MAAM,CACjB,UAAU,CAAE,MAAM,CAClB,eAAe,CAAE,MACnB,CAAC,CAED;AACA,KAAM,CAAAC,OAA6B,CAAG,CAAC,CAAC,CAExCF,SAAS,CAACrB,OAAO,CAACwB,QAAQ,EAAI,CAC5B;AACA,KAAM,CAAAC,QAAQ,CAAGH,eAAe,CAACE,QAAQ,CAACtB,KAAK,CAAC,EAAIsB,QAAQ,CAACtB,KAAK,CAElE;AACA,KAAM,CAAAwB,cAAc,CAAGxE,MAAM,CAACyE,MAAM,CAACC,CAAC,EACpCA,CAAC,CAACH,QAAQ,GAAKA,QAAQ,EACvBG,CAAC,CAACC,WAAW,GAAKL,QAAQ,CAACtB,KAAK,EAChC0B,CAAC,CAACE,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACR,QAAQ,CAACtB,KAAK,CAAC6B,WAAW,CAAC,CAAC,CAC5D,CAAC,CAED,GAAIL,cAAc,CAACO,MAAM,CAAG,CAAC,CAAE,CAC7B;AACA,KAAM,CAAAC,cAAc,CAAGR,cAAc,CAACC,MAAM,CAACC,CAAC,EAAI,CAACA,CAAC,CAACO,QAAQ,CAAC,CAC9D,KAAM,CAAAC,UAAU,CAAGF,cAAc,CAACD,MAAM,CAAG,CAAC,CACxCC,cAAc,CAACG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAGL,cAAc,CAACD,MAAM,CAAC,CAAC,CACjEP,cAAc,CAACW,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAGb,cAAc,CAACO,MAAM,CAAC,CAAC,CAErEV,OAAO,CAACC,QAAQ,CAACX,EAAE,CAAC,CAAGuB,UAAU,CAACvB,EAAE,CACtC,CACF,CAAC,CAAC,CAEFzB,mBAAmB,CAACmC,OAAO,CAAC,CAC9B,CAAC,CAAE,CAACrE,MAAM,CAAC,CAAC,CAEZ;AACAzH,SAAS,CAAC,IAAM,CACd,GAAIiI,kBAAkB,CAACuE,MAAM,CAAG,CAAC,CAAE,CACjCb,oBAAoB,CAAC1D,kBAAkB,CAAC,CAC1C,CACF,CAAC,CAAE,CAACA,kBAAkB,CAAE0D,oBAAoB,CAAC,CAAC,CAE9C,KAAM,CAAAoB,kBAAkB,CAAGA,CAAA,GAAM,CAC/BnF,aAAa,CAAC,CAACD,UAAU,CAAC,CAC5B,CAAC,CAED,KAAM,CAAAqF,MAAM,CAAGjN,WAAW,CAAC,KAAO,CAAAkN,aAAqB,EAAK,CAC1D,GAAIA,aAAa,EAAIA,aAAa,CAACT,MAAM,CAAG,CAAC,CAAE,CAC7C,KAAM,CAAAU,IAAI,CAAGD,aAAa,CAAC,CAAC,CAAC,CAC7B,KAAM,CAAAE,cAAc,CAAG,CAAC,iBAAiB,CAAE,YAAY,CAAC,CAExD,GAAI,CAACA,cAAc,CAACZ,QAAQ,CAACW,IAAI,CAACE,IAAI,CAAC,CAAE,CACvC5E,QAAQ,CAAC,qDAAqD,CAAC,CAC/DV,eAAe,CAAC,IAAI,CAAC,CACrB,OACF,CAEAA,eAAe,CAACoF,IAAI,CAAC,CACrB1E,QAAQ,CAAC,IAAI,CAAC,CACdR,gBAAgB,CAAC,IAAI,CAAC,CACtBE,qBAAqB,CAAC,EAAE,CAAC,CACzBE,YAAY,CAAC,IAAI,CAAC,CAClBU,aAAa,CAAC,CAAC,CAAC,CAEhB,GAAI,CACF,KAAM,CAAE8B,IAAI,CAAE,CAAEyC,OAAQ,CAAE,CAAC,CAAG,KAAM,CAAAzK,QAAQ,CAACkI,IAAI,CAACwC,UAAU,CAAC,CAAC,CAC9D,GAAI,CAACD,OAAO,CAAE,CACZ7E,QAAQ,CAAC,yCAAyC,CAAC,CACnDJ,YAAY,CAAC,KAAK,CAAC,CACnB,OACF,CAEA;AACA,GAAI8E,IAAI,CAACE,IAAI,GAAK,YAAY,CAAE,CAC9B9E,iBAAiB,CAAC,8BAA8B,CAAC,CACjD,KAAM,CAAAnD,IAAI,CAAG,KAAM,CAAA+H,IAAI,CAAC/H,IAAI,CAAC,CAAC,CAC9B;AACA,KAAM,CAAAzB,kBAAkB,CAAC,IAAI,CAAC,CAC9BsE,gBAAgB,CAAC7C,IAAI,CAAC,CACtB2D,aAAa,CAAC,CAAC,CAAC,CAEhBR,iBAAiB,CAAC,2DAA2D,CAAC,CAC9E,KAAM,CAAA5E,kBAAkB,CAAC,KAAK,CAAC,CAC/B,KAAM,CAAAkI,SAAS,CAAG,KAAM,CAAAjJ,6BAA6B,CAACwC,IAAI,CAAC,CAC3D+C,qBAAqB,CAAC0D,SAAS,CAAC,CAChC9C,aAAa,CAAC,CAAC,CAAC,CAClB,CAAC,IAAM,CACL;AACAR,iBAAiB,CAAC,yCAAyC,CAAC,CAE5D;AACA,KAAM,CAAEiF,WAAY,CAAC,CAAG,KAAM,CAAA7K,oBAAoB,CAACwK,IAAI,CAAE,eAAe,CAAE,CAAEM,YAAY,CAAE,KAAM,CAAC,CAAC,CAClGlC,OAAO,CAACmC,GAAG,CAAC,4BAA4B,CAAE,CAAEF,WAAY,CAAC,CAAC,CAE1D;AACA,KAAM,CAAA7J,kBAAkB,CAAC,IAAI,CAAC,CAE9B;AACAoF,aAAa,CAAC,CAAC,CAAC,CAChBR,iBAAiB,CAAC,wDAAwD,CAAC,CAE3E;AACA,KAAM,CAAA5E,kBAAkB,CAAC,KAAK,CAAC,CAC/B,KAAM,CAAAkI,SAAS,CAAG,KAAM,CAAAjJ,6BAA6B,CAACuK,IAAI,CAAC,CAC3DhF,qBAAqB,CAAC0D,SAAS,CAAC,CAChC9C,aAAa,CAAC,CAAC,CAAC,CAClB,CACF,CAAE,MAAO4E,GAAQ,CAAE,CACjBpC,OAAO,CAAC/C,KAAK,CAAC,wBAAwB,CAAEmF,GAAG,CAAC,CAC5ClF,QAAQ,gCAAAmF,MAAA,CAAgCD,GAAG,CAACE,OAAO,EAAI,eAAe,gCAA8B,CAAC,CACvG,CAAC,OAAS,CACRxF,YAAY,CAAC,KAAK,CAAC,CACnBE,iBAAiB,CAAC,EAAE,CAAC,CACvB,CACF,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAuF,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CAAClF,UAAU,CAACmF,IAAI,CAAC,CAAC,CAAE,CACtBtF,QAAQ,CAAC,2CAA2C,CAAC,CACrD,OACF,CAEAA,QAAQ,CAAC,IAAI,CAAC,CACdR,gBAAgB,CAAC,IAAI,CAAC,CACtBE,qBAAqB,CAAC,EAAE,CAAC,CACzBE,YAAY,CAAC,IAAI,CAAC,CAClBU,aAAa,CAAC,CAAC,CAAC,CAEhB,GAAI,CACF,KAAM,CAAE8B,IAAI,CAAE,CAAEyC,OAAQ,CAAE,CAAC,CAAG,KAAM,CAAAzK,QAAQ,CAACkI,IAAI,CAACwC,UAAU,CAAC,CAAC,CAC9D,GAAI,CAACD,OAAO,CAAE,CACZ7E,QAAQ,CAAC,yCAAyC,CAAC,CACnDJ,YAAY,CAAC,KAAK,CAAC,CACnB,OACF,CAEA;AACAE,iBAAiB,CAAC,+BAA+B,CAAC,CAClD,KAAM,CAAA5E,kBAAkB,CAAC,IAAI,CAAC,CAC9BsE,gBAAgB,CAACW,UAAU,CAAC,CAC5BG,aAAa,CAAC,CAAC,CAAC,CAEhBR,iBAAiB,CAAC,8DAA8D,CAAC,CACjF;AACA,KAAM,CAAA5E,kBAAkB,CAAC,KAAK,CAAC,CAC/B,KAAM,CAAAkI,SAAS,CAAG,KAAM,CAAAjJ,6BAA6B,CAACgG,UAAU,CAAC,CACjET,qBAAqB,CAAC0D,SAAS,CAAC,CAChC9C,aAAa,CAAC,CAAC,CAAC,CAClB,CAAE,MAAO4E,GAAQ,CAAE,CACjBpC,OAAO,CAAC/C,KAAK,CAAC,wBAAwB,CAAEmF,GAAG,CAAC,CAC5ClF,QAAQ,4BAAAmF,MAAA,CAA4BD,GAAG,CAACE,OAAO,EAAI,eAAe,gCAA8B,CAAC,CACnG,CAAC,OAAS,CACRxF,YAAY,CAAC,KAAK,CAAC,CACnBE,iBAAiB,CAAC,EAAE,CAAC,CACvB,CACF,CAAC,CAED,KAAM,CAAEyF,YAAY,CAAEC,aAAa,CAAEC,YAAa,CAAC,CAAGxL,WAAW,CAAC,CAChEuK,MAAM,CACNkB,MAAM,CAAE,CACN,iBAAiB,CAAE,CAAC,MAAM,CAAC,CAC3B,YAAY,CAAE,CAAC,MAAM,CACvB,CAAC,CACDC,QAAQ,CAAE,KAAK,CACf1J,QAAQ,CAAE0D,SAAS,EAAIM,WAAW,GAAK,MACzC,CAAC,CAAC,CAEF,KAAM,CAAA2F,uBAAuB,CAAGA,CAACC,MAA4B,CAAEC,QAAgB,GAAK,CAClF5F,cAAc,CAAC4F,QAAQ,CAAC,CACxB;AACA9F,QAAQ,CAAC,IAAI,CAAC,CACdV,eAAe,CAAC,IAAI,CAAC,CACrBc,aAAa,CAAC,EAAE,CAAC,CACjBZ,gBAAgB,CAAC,IAAI,CAAC,CACtBE,qBAAqB,CAAC,EAAE,CAAC,CACzBY,aAAa,CAAC,CAAC,CAAC,CAClB,CAAC,CAED;AACA,KAAM,CAAAyF,kBAAkB,CAAIC,UAAmB,EAAK,CAClD,OAAQA,UAAU,SAAVA,UAAU,iBAAVA,UAAU,CAAElC,WAAW,CAAC,CAAC,EAC/B,IAAK,MAAM,CAAE,MAAO,CAAAlF,KAAK,CAACxC,OAAO,CAAC6J,OAAO,CAAC1J,IAAI,CAC9C,IAAK,QAAQ,CAAE,MAAO,CAAAqC,KAAK,CAACxC,OAAO,CAAC8J,OAAO,CAAC3J,IAAI,CAChD,IAAK,MAAM,CAAE,MAAO,CAAAqC,KAAK,CAACxC,OAAO,CAAC2D,KAAK,CAACxD,IAAI,CAC5C,QAAS,MAAO,CAAAqC,KAAK,CAACxC,OAAO,CAAC+J,IAAI,CAAC5J,IAAI,CACzC,CACF,CAAC,CAED;AACA,KAAM,CAAA6J,kBAAkB,CAAGA,CAACC,UAAkB,CAAEC,MAAc,GAAK,CACjEzF,iBAAiB,CAAC0F,IAAI,EAAAC,aAAA,CAAAA,aAAA,IACjBD,IAAI,MACP,CAACF,UAAU,EAAGC,MAAM,EACpB,CAAC,CACL,CAAC,CAED;AACA,KAAM,CAAAG,WAAW,CAAIJ,UAAkB,EAAK,CAC1CtF,mBAAmB,CAACwF,IAAI,EAAAC,aAAA,CAAAA,aAAA,IACnBD,IAAI,MACP,CAACF,UAAU,EAAG,IAAI,EAClB,CAAC,CAEH,KAAM,CAAA9C,QAAQ,CAAG9D,kBAAkB,CAACiH,IAAI,CAAC1E,CAAC,EAAIA,CAAC,CAACY,EAAE,GAAKyD,UAAU,CAAC,CAClE,GAAI9C,QAAQ,EAAIoD,eAAe,CAACpD,QAAQ,CAAE3C,cAAc,CAACyF,UAAU,CAAC,CAAC,CAAE,CACrE;AACA,GAAI,CAACrF,cAAc,CAAC+C,QAAQ,CAACsC,UAAU,CAAC,CAAE,CACxCpF,iBAAiB,CAACsF,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAEF,UAAU,CAAC,CAAC,CAEhD;AACA,KAAM,CAAAO,OAAO,CAAG1F,gBAAgB,CAACmF,UAAU,CAAC,CAC5C,GAAIO,OAAO,CAAE,CACX;AACA,KAAM,CAAAC,KAAK,CAAG5H,MAAM,CAACyH,IAAI,CAAC/C,CAAC,EAAIA,CAAC,CAACf,EAAE,GAAKgE,OAAO,CAAC,CAChD,GAAIC,KAAK,CAAE,CACT;AACA,KAAM,CAAAC,gBAAgB,CAAG1C,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAG,EAAE,CAAC,CAAG,EAAE,CAAE;AAC9D,KAAM,CAAAyC,WAAW,CAAG3C,IAAI,CAAC4C,GAAG,CAAC,GAAG,CAAEH,KAAK,CAACI,YAAY,CAAGH,gBAAgB,CAAC,CAExE;AACA5H,mBAAmB,CAAC0H,OAAO,CAAEG,WAAW,CAAC,CACzCjE,OAAO,CAACmC,GAAG,UAAAE,MAAA,CAAUyB,OAAO,eAAAzB,MAAA,CAAa0B,KAAK,CAACI,YAAY,SAAA9B,MAAA,CAAO4B,WAAW,CAAE,CAAC,CAEhF;AACA1F,sBAAsB,CAAC,IAAI,CAAC,CAC5BE,iBAAiB,CAACgF,IAAI,EAAIA,IAAI,CAAG,CAAC,CAAC,CAEnC;AACAjL,UAAU,CAAC,IAAM,CACf+F,sBAAsB,CAAC,KAAK,CAAC,CAC/B,CAAC,CAAE,IAAI,CAAC,CACV,CACF,CACF,CACF,CACF,CAAC,CAED;AACA,KAAM,CAAA6F,aAAa,CAAIb,UAAkB,EAAK,CAC5C,KAAM,CAAAc,UAAU,CAAAX,aAAA,IAAO5F,cAAc,CAAC,CACtC,MAAO,CAAAuG,UAAU,CAACd,UAAU,CAAC,CAC7BxF,iBAAiB,CAACsG,UAAU,CAAC,CAE7BpG,mBAAmB,CAACwF,IAAI,EAAAC,aAAA,CAAAA,aAAA,IACnBD,IAAI,MACP,CAACF,UAAU,EAAG,KAAK,EACnB,CAAC,CAEH;AACA,GAAIrF,cAAc,CAAC+C,QAAQ,CAACsC,UAAU,CAAC,CAAE,CACvCpF,iBAAiB,CAACsF,IAAI,EAAIA,IAAI,CAAC7C,MAAM,CAACd,EAAE,EAAIA,EAAE,GAAKyD,UAAU,CAAC,CAAC,CACjE,CACF,CAAC,CAED;AACA,KAAM,CAAAM,eAAe,CAAGA,CAACpD,QAA2B,CAAE6D,aAAqB,GAAK,CAC9E,MAAO,CAAAA,aAAa,GAAK7D,QAAQ,CAAC+C,MAAM,CAC1C,CAAC,CAED;AACA,KAAM,CAAAe,oBAAoB,CAAGA,CAAA,GAAM,CACjCrI,QAAQ,CAAC,YAAY,CAAE,CACrBsI,KAAK,CAAE,CACLC,UAAU,CAAE,IAAI,CAChBvG,cAAc,CAAEA,cAAc,CAACgD,MACjC,CACF,CAAC,CAAC,CACJ,CAAC,CAED;AACA,KAAM,CAAAwD,kBAAkB,CAAGA,CAAA,GAAM,CAC/B,MAAO,CACLhL,UAAU,CAAE,mDAAmD,CAC/DiL,cAAc,CAAE,WAAW,CAC3BC,SAAS,CAAE,4BAA4B,CACvCC,SAAS,CAAE,OAAO,CAClBC,UAAU,CAAE,6BAA6B,CACzC,qBAAqB,CAAE,CACrB,IAAI,CAAE,CAAEC,kBAAkB,CAAE,QAAS,CAAC,CACtC,KAAK,CAAE,CAAEA,kBAAkB,CAAE,UAAW,CAAC,CACzC,MAAM,CAAE,CAAEA,kBAAkB,CAAE,QAAS,CACzC,CACF,CAAC,CACH,CAAC,CAED,mBACEhN,IAAA,CAACvB,aAAa,EAACsF,KAAK,CAAEzC,SAAU,CAAA2L,QAAA,cAC9B/M,KAAA,CAACrD,GAAG,EAACqQ,EAAE,CAAEP,kBAAkB,CAAC,CAAE,CAAAM,QAAA,eAC5BjN,IAAA,CAAChD,MAAM,EAACmQ,QAAQ,CAAC,QAAQ,CAAAF,QAAA,cACvB/M,KAAA,CAACjD,OAAO,EAAAgQ,QAAA,eACNjN,IAAA,CAAC9C,UAAU,EACT0D,KAAK,CAAC,SAAS,CACf,aAAW,aAAa,CACxBwM,IAAI,CAAC,OAAO,CACZC,OAAO,CAAE3D,kBAAmB,CAC5BwD,EAAE,CAAE,CAAEI,EAAE,CAAE,CAAE,CAAE,CAAAL,QAAA,cAEdjN,IAAA,CAACtB,QAAQ,GAAE,CAAC,CACF,CAAC,cACbsB,IAAA,CAACjD,UAAU,EAACwQ,OAAO,CAAC,IAAI,CAACC,SAAS,CAAC,KAAK,CAACN,EAAE,CAAE,CAAEO,QAAQ,CAAE,CAAC,CAAEC,aAAa,CAAE,SAAU,CAAE,CAAAT,QAAA,CAAC,qBAExF,CAAY,CAAC,cAGbjN,IAAA,CAACzB,MAAM,EAAC2O,EAAE,CAAE,CACVS,OAAO,CAAE,cAAc,CACvBvK,SAAS,CAAE,8BACb,CAAE,CAAA6J,QAAA,CACCpG,eAAe,CAAG,EAAE,CAAG,CAAAF,QAAQ,SAARA,QAAQ,kBAAA7C,mBAAA,CAAR6C,QAAQ,CAAEuB,SAAS,UAAApE,mBAAA,iBAAnBA,mBAAA,CAAqB8J,MAAM,CAAC,CAAC,CAAC,GAAI,GAAG,CACvD,CAAC,CAGRzH,cAAc,CAACgD,MAAM,CAAG,CAAC,eACxBnJ,IAAA,CAAC1B,OAAO,EAACuP,KAAK,CAAC,4CAA4C,CAAAZ,QAAA,cACzDjN,IAAA,CAAC3B,KAAK,EACJyP,YAAY,CAAErH,cAAe,CAC7B7F,KAAK,CAAC,SAAS,CACfsM,EAAE,CAAE,CAAEI,EAAE,CAAE,CAAC,CAAEvM,OAAO,CAAEwF,mBAAmB,CAAG,CAAC,CAAG,GAAG,CAAEwG,UAAU,CAAE,eAAgB,CAAE,CAAAE,QAAA,cAEnFjN,IAAA,CAAC9C,UAAU,EACT0D,KAAK,CAAC,SAAS,CACfyM,OAAO,CAAEb,oBAAqB,CAC9BU,EAAE,CAAE,CACFL,SAAS,CAAEtG,mBAAmB,CAAG,yBAAyB,CAAG,MAAM,CACnE,qBAAqB,CAAE,CACrB,IAAI,CAAE,CAAEwH,SAAS,CAAE,UAAW,CAAC,CAC/B,KAAK,CAAE,CAAEA,SAAS,CAAE,YAAa,CAAC,CAClC,MAAM,CAAE,CAAEA,SAAS,CAAE,UAAW,CAClC,CACF,CAAE,CAAAd,QAAA,cAEFjN,IAAA,CAACd,eAAe,GAAE,CAAC,CACT,CAAC,CACR,CAAC,CACD,CACV,EACM,CAAC,CACJ,CAAC,cAETgB,KAAA,CAACpD,SAAS,EAACkR,QAAQ,CAAC,IAAI,CAACd,EAAE,CAAE,CAAEe,EAAE,CAAE,CAAE,CAAE,CAAAhB,QAAA,eACrC/M,KAAA,CAACN,MAAM,EAAAqN,QAAA,eACLjN,IAAA,CAACjD,UAAU,EAACwQ,OAAO,CAAC,IAAI,CAACW,YAAY,MAACC,KAAK,CAAC,QAAQ,CAClDjB,EAAE,CAAE,CAAEtM,KAAK,CAAE,2BAA2B,CAAEC,UAAU,CAAE,2BAA2B,CAAEK,UAAU,CAAE,MAAM,CAAEkN,EAAE,CAAE,CAAE,CAAE,CAAAnB,QAAA,CAAC,iCAElH,CAAY,CAAC,cACbjN,IAAA,CAACjD,UAAU,EAACwQ,OAAO,CAAC,WAAW,CAACc,SAAS,MAACF,KAAK,CAAC,QAAQ,CACtDjB,EAAE,CAAE,CAAEtM,KAAK,CAAE,0BAA0B,CAAEwN,EAAE,CAAE,CAAE,CAAE,CAAAnB,QAAA,CAAC,qFAEpD,CAAY,CAAC,EACP,CAAC,CAERvH,aAAa,eACZxF,KAAA,CAAC/C,KAAK,EACJmR,QAAQ,CAAC,SAAS,CAClBpB,EAAE,CAAE,CACFkB,EAAE,CAAE,CAAC,CACLzM,UAAU,CAAE,yBAAyB,CACrCf,KAAK,CAAE,2BAA2B,CAClC,kBAAkB,CAAE,CAClBA,KAAK,CAAE,yBACT,CAAC,CACDoC,YAAY,CAAE,CAChB,CAAE,CAAAiK,QAAA,eAEFjN,IAAA,CAACjD,UAAU,EAACwQ,OAAO,CAAC,WAAW,CAACrM,UAAU,CAAC,MAAM,CAAA+L,QAAA,CAAC,iBAAe,CAAY,CAAC,cAC9EjN,IAAA,CAACjD,UAAU,EAACwQ,OAAO,CAAC,OAAO,CAAAN,QAAA,CAAC,mJAE5B,CAAY,CAAC,EACR,CACR,cAED/M,KAAA,CAACR,SAAS,EAACwN,EAAE,CAAE,CAAEqB,CAAC,CAAE,CAACC,EAAE,CAAE,CAAC,CAAEC,EAAE,CAAE,CAAC,CAAC,CAAEL,EAAE,CAAE,CAAC,CAAErL,cAAc,CAAE,YAAa,CAAE,CAAAkK,QAAA,eACxE/M,KAAA,CAACzC,OAAO,EACN+H,UAAU,CAAEA,UAAW,CACvBkJ,gBAAgB,MAChBxB,EAAE,CAAE,CACFkB,EAAE,CAAE,CAAC,CACLO,OAAO,CAAE,CAAEH,EAAE,CAAE,MAAM,CAAEI,EAAE,CAAE,MAAO,CAAC,CACnC,uBAAuB,CAAE,CACvBhO,KAAK,CAAE,0BAA0B,CACjCiO,EAAE,CAAE,CACN,CAAC,CACD,wBAAwB,CAAE,CACxBjO,KAAK,CAAE,2BACT,CAAC,CACD,qBAAqB,CAAE,CACrBA,KAAK,CAAE,uBACT,CAAC,CACD,uBAAuB,CAAE,CACvBA,KAAK,CAAE,SACT,CAAC,CACD,0BAA0B,CAAE,CAC1BA,KAAK,CAAE,0BACT,CAAC,CACD,0BAA0B,CAAE,CAC1B8B,WAAW,CAAE,2BACf,CACF,CAAE,CAAAuK,QAAA,eAEFjN,IAAA,CAACtC,IAAI,EAAAuP,QAAA,cACHjN,IAAA,CAACrC,SAAS,EAAAsP,QAAA,CAAC,eAAa,CAAW,CAAC,CAChC,CAAC,cACPjN,IAAA,CAACtC,IAAI,EAAAuP,QAAA,cACHjN,IAAA,CAACrC,SAAS,EAAAsP,QAAA,CAAC,iBAAe,CAAW,CAAC,CAClC,CAAC,cACPjN,IAAA,CAACtC,IAAI,EAAAuP,QAAA,cACHjN,IAAA,CAACrC,SAAS,EAAAsP,QAAA,CAAC,qBAAmB,CAAW,CAAC,CACtC,CAAC,cACPjN,IAAA,CAACtC,IAAI,EAAAuP,QAAA,cACHjN,IAAA,CAACrC,SAAS,EAAAsP,QAAA,CAAC,oBAAkB,CAAW,CAAC,CACrC,CAAC,EACA,CAAC,cAGVjN,IAAA,CAACnD,GAAG,EAACqQ,EAAE,CAAE,CAAEkB,EAAE,CAAE,CAAC,CAAEO,OAAO,CAAE,CAAEH,EAAE,CAAE,OAAO,CAAEI,EAAE,CAAE,MAAO,CAAC,CAAEE,SAAS,CAAE,QAAS,CAAE,CAAA7B,QAAA,cAC5E/M,KAAA,CAACnD,UAAU,EAACwQ,OAAO,CAAC,OAAO,CAACL,EAAE,CAAE,CAAEtM,KAAK,CAAE,0BAA2B,CAAE,CAAAqM,QAAA,EAAC,OAChE,CAACzH,UAAU,CAAG,CAAC,CAAC,SAAO,CAAC,CAAC,eAAe,CAAE,iBAAiB,CAAE,qBAAqB,CAAE,oBAAoB,CAAC,CAACA,UAAU,CAAC,EAChH,CAAC,CACV,CAAC,cAENxF,IAAA,CAACnD,GAAG,EAACqQ,EAAE,CAAE,CAAE6B,KAAK,CAAE,MAAM,CAAEX,EAAE,CAAE,CAAE,CAAE,CAAAnB,QAAA,cAChC/M,KAAA,CAAC9C,IAAI,EACH4R,KAAK,CAAE5J,WAAY,CACnB6J,QAAQ,CAAElE,uBAAwB,CAClCmE,QAAQ,MACRhC,EAAE,CAAE,CACF,sBAAsB,CAAE,CACtB1K,eAAe,CAAE,SAAS,CAC1B2M,MAAM,CAAE,CACV,CAAC,CACD,gBAAgB,CAAE,CAChBvO,KAAK,CAAE,0BAA0B,CACjCwO,QAAQ,CAAE,MAAM,CAChB,gBAAgB,CAAE,CAChBxO,KAAK,CAAE,2BACT,CACF,CACF,CAAE,CACF2M,OAAO,CAAEvJ,QAAQ,CAAG,WAAW,CAAG,UAAW,CAAAiJ,QAAA,eAE7CjN,IAAA,CAAC3C,GAAG,EACF2R,KAAK,CAAC,MAAM,CACZ/N,KAAK,CAAC,aAAa,CACnBoO,IAAI,cAAErP,IAAA,CAACrB,eAAe,GAAE,CAAE,CAC1B2Q,YAAY,CAAC,OAAO,CACpBlO,QAAQ,CAAE0D,SAAU,CACrB,CAAC,cACF9E,IAAA,CAAC3C,GAAG,EACF2R,KAAK,CAAC,MAAM,CACZ/N,KAAK,CAAC,YAAY,CAClBoO,IAAI,cAAErP,IAAA,CAACpB,cAAc,GAAE,CAAE,CACzB0Q,YAAY,CAAC,OAAO,CACpBlO,QAAQ,CAAE0D,SAAU,CACrB,CAAC,EACE,CAAC,CACJ,CAAC,CAEL,CAACA,SAAS,EAAIU,UAAU,CAAG,CAAC,eAC3BxF,IAAA,CAAAI,SAAA,EAAA6M,QAAA,CACG7H,WAAW,GAAK,MAAM,cACrBlF,KAAA,CAACrD,GAAG,CAAA8O,aAAA,CAAAA,aAAA,IACEjB,YAAY,CAAC,CAAC,MAClBwC,EAAE,CAAE,CACFqB,CAAC,CAAE,CAAC,CACJO,SAAS,CAAE,QAAQ,CACnB7L,MAAM,CAAE,YAAY,CACpBP,WAAW,CAAEkI,YAAY,CAAG,SAAS,CAAG,2BAA2B,CACnE5H,YAAY,CAAE,CAAC,CACfR,eAAe,CAAEoI,YAAY,CAAG,0BAA0B,CAAG,uBAAuB,CACpF7H,cAAc,CAAE,WAAW,CAC3BwM,MAAM,CAAE,SAAS,CACjBzC,SAAS,CAAE,GAAG,CACd6B,OAAO,CAAE,MAAM,CACfa,aAAa,CAAE,QAAQ,CACvBC,UAAU,CAAE,QAAQ,CACpBC,cAAc,CAAE,QAAQ,CACxB3C,UAAU,CAAE,eAAe,CAC3B4C,QAAQ,CAAE,QAAQ,CAClBxC,QAAQ,CAAE,UAAU,CACpB,SAAS,CAAE,CACTzK,WAAW,CAAE,SAAS,CACtBF,eAAe,CAAE,0BACnB,CAAC,CACD,WAAW,CAAE,CACXoN,OAAO,CAAE,IAAI,CACbzC,QAAQ,CAAE,UAAU,CACpB0C,GAAG,CAAE,CAAC,CACNC,IAAI,CAAE,CAAC,CACPC,KAAK,CAAE,CAAC,CACRC,MAAM,CAAE,CAAC,CACTC,MAAM,CAAE,CAAC,CAAC,CACVlP,OAAO,CAAE,GAAG,CACZY,UAAU,CAAE,kFAAkF,CAC9FkL,SAAS,CAAE,sCAAsC,CACjD,+BAA+B,CAAE,CAC/B,IAAI,CAAE,CAAEG,kBAAkB,CAAE,QAAS,CAAC,CACtC,KAAK,CAAE,CAAEA,kBAAkB,CAAE,UAAW,CAAC,CACzC,MAAM,CAAE,CAAEA,kBAAkB,CAAE,QAAS,CACzC,CACF,CACF,CAAE,CAAAC,QAAA,eAEFjN,IAAA,SAAA2L,aAAA,IAAWhB,aAAa,CAAC,CAAC,CAAG,CAAC,cAC9BzK,KAAA,CAACrD,GAAG,EAACqQ,EAAE,CAAE,CACPyB,OAAO,CAAE,MAAM,CACfa,aAAa,CAAE,QAAQ,CACvBC,UAAU,CAAE,QAAQ,CACpBtC,QAAQ,CAAE,UAAU,CACpB8C,MAAM,CAAE,CACV,CAAE,CAAAhD,QAAA,eACAjN,IAAA,CAACrB,eAAe,EAACuO,EAAE,CAAE,CACnBkC,QAAQ,CAAE,EAAE,CACZxO,KAAK,CAAE,SAAS,CAChBwN,EAAE,CAAE,CAAC,CACLvF,MAAM,CAAE,wCAAwC,CAChDgE,SAAS,CAAEjC,YAAY,CAAG,qBAAqB,CAAG,MAAM,CACxD,kBAAkB,CAAE,CAClB,IAAI,CAAE,CAAEmD,SAAS,CAAE,UAAW,CAAC,CAC/B,KAAK,CAAE,CAAEA,SAAS,CAAE,YAAa,CAAC,CAClC,MAAM,CAAE,CAAEA,SAAS,CAAE,UAAW,CAClC,CACF,CAAE,CAAE,CAAC,cACL/N,IAAA,CAACb,gBAAgB,EAAC+N,EAAE,CAAE,CACpBkC,QAAQ,CAAE,EAAE,CACZxO,KAAK,CAAE,0BAA0B,CACjCwN,EAAE,CAAE,CAAC,CACLvF,MAAM,CAAE,wCACV,CAAE,CAAE,CAAC,EACF,CAAC,CACL+B,YAAY,cACX5K,IAAA,CAACjD,UAAU,EAACwQ,OAAO,CAAC,IAAI,CAACL,EAAE,CAAE,CAC3BtM,KAAK,CAAE,SAAS,CAChBM,UAAU,CAAE,MAAM,CAClBL,UAAU,CAAE,2BACd,CAAE,CAAAoM,QAAA,CAAC,wBAEH,CAAY,CAAC,cAEbjN,IAAA,CAACjD,UAAU,EAACwQ,OAAO,CAAC,IAAI,CAACL,EAAE,CAAE,CAC3BtM,KAAK,CAAE,2BAA2B,CAClCM,UAAU,CAAE,QAAQ,CACpBL,UAAU,CAAE,2BACd,CAAE,CAAAoM,QAAA,CAAC,oDAEH,CAAY,CACb,cACDjN,IAAA,CAACjD,UAAU,EAACwQ,OAAO,CAAC,OAAO,CAACL,EAAE,CAAE,CAAEtM,KAAK,CAAE,0BAA0B,CAAEiO,EAAE,CAAE,CAAE,CAAE,CAAA5B,QAAA,CAAC,oDAE9E,CAAY,CAAC,GACV,CAAC,cAEN/M,KAAA,CAACrD,GAAG,EAACqQ,EAAE,CAAE,CAAEqB,CAAC,CAAE,CAAE,CAAE,CAAAtB,QAAA,eAChBjN,IAAA,CAACjD,UAAU,EAACwQ,OAAO,CAAC,IAAI,CAACW,YAAY,MAAChB,EAAE,CAAE,CACxCtM,KAAK,CAAE,2BAA2B,CAClCM,UAAU,CAAE,QAAQ,CACpBkN,EAAE,CAAE,CACN,CAAE,CAAAnB,QAAA,CAAC,4BAEH,CAAY,CAAC,cACbjN,IAAA,CAAC1C,SAAS,EACR4S,SAAS,MACTC,SAAS,MACTC,IAAI,CAAE,EAAG,CACT7C,OAAO,CAAC,UAAU,CAClB8C,WAAW,CAAC,8CAA8C,CAC1DrB,KAAK,CAAE1J,UAAW,CAClB2J,QAAQ,CAAGqB,CAAC,EAAK/K,aAAa,CAAC+K,CAAC,CAACC,MAAM,CAACvB,KAAK,CAAE,CAC/C5N,QAAQ,CAAE0D,SAAU,CACpBoI,EAAE,CAAE,CACFkB,EAAE,CAAE,CAAC,CACL,0BAA0B,CAAE,CAC1B5L,eAAe,CAAE,uBAAuB,CACxCO,cAAc,CAAE,WAAW,CAC3BC,YAAY,CAAE,CAAC,CACf,0CAA0C,CAAE,CAC1CN,WAAW,CAAE,SACf,CAAC,CACD,gDAAgD,CAAE,CAChDA,WAAW,CAAE,SAAS,CACtB8N,WAAW,CAAE,CACf,CACF,CAAC,CACD,uBAAuB,CAAE,CACvB5P,KAAK,CAAE,2BACT,CACF,CAAE,CACH,CAAC,cACFZ,IAAA,CAACL,cAAc,EACb4N,OAAO,CAAC,WAAW,CACnBkD,QAAQ,CAAC,SAAS,CAClBpD,OAAO,CAAE7C,gBAAiB,CAC1BpJ,QAAQ,CAAE,CAACkE,UAAU,CAACmF,IAAI,CAAC,CAAC,EAAI3F,SAAU,CAC1CoL,SAAS,MACTQ,IAAI,CAAC,OAAO,CACZxD,EAAE,CAAE,CAAEe,EAAE,CAAE,GAAI,CAAE,CAAAhB,QAAA,CACjB,cAED,CAAgB,CAAC,EACd,CACN,CACD,CACH,CAEA/H,KAAK,eACJlF,IAAA,CAAC7C,KAAK,EACJmR,QAAQ,CAAC,OAAO,CAChBpB,EAAE,CAAE,CACF2B,EAAE,CAAE,CAAC,CACLrM,eAAe,CAAE,yBAAyB,CAC1C5B,KAAK,CAAE,2BAA2B,CAClC,kBAAkB,CAAE,CAClBA,KAAK,CAAE,wBACT,CAAC,CACDoC,YAAY,CAAE,CAChB,CAAE,CAAAiK,QAAA,CAED/H,KAAK,CACD,CACR,CAEAV,YAAY,EAAIY,WAAW,GAAK,MAAM,EAAI,CAACF,KAAK,EAAI,CAACJ,SAAS,EAAIU,UAAU,CAAG,CAAC,eAC/ExF,IAAA,CAACH,OAAO,EAAAoN,QAAA,cACN/M,KAAA,CAACrD,GAAG,EAACqQ,EAAE,CAAE,CACPqB,CAAC,CAAE,CAAC,CACJM,EAAE,CAAE,CAAC,CACLrM,eAAe,CAAE,uBAAuB,CACxCO,cAAc,CAAE,YAAY,CAC5BC,YAAY,CAAE,CAAC,CACfC,MAAM,CAAE,oCAAoC,CAC5CG,SAAS,CAAE,gCACb,CAAE,CAAA6J,QAAA,eACAjN,IAAA,CAACjD,UAAU,EAACwQ,OAAO,CAAC,IAAI,CAACL,EAAE,CAAE,CAC3BtM,KAAK,CAAE,2BAA2B,CAClCM,UAAU,CAAE,QAAQ,CACpBkN,EAAE,CAAE,CACN,CAAE,CAAAnB,QAAA,CAAC,gBAEH,CAAY,CAAC,cACb/M,KAAA,CAACrD,GAAG,EAACqQ,EAAE,CAAE,CAAEyB,OAAO,CAAE,MAAM,CAAEc,UAAU,CAAE,QAAQ,CAAEZ,EAAE,CAAE,CAAE,CAAE,CAAA5B,QAAA,eACxDjN,IAAA,CAACb,gBAAgB,EAAC+N,EAAE,CAAE,CAAEtM,KAAK,CAAE,SAAS,CAAE0M,EAAE,CAAE,CAAC,CAAEzE,MAAM,CAAE,wCAAyC,CAAE,CAAE,CAAC,cACvG3I,KAAA,CAACnD,UAAU,EAACmQ,EAAE,CAAE,CAAEtM,KAAK,CAAE,0BAA2B,CAAE,CAAAqM,QAAA,EACnDzI,YAAY,CAACwE,IAAI,CAAC,IAAE,CAACO,IAAI,CAACoH,KAAK,CAACnM,YAAY,CAACkM,IAAI,CAAG,IAAI,CAAC,CAAC,MAC7D,EAAY,CAAC,EACV,CAAC,cACN1Q,IAAA,CAACnD,GAAG,EAACqQ,EAAE,CAAE,CAAEyB,OAAO,CAAE,MAAM,CAAEe,cAAc,CAAE,UAAU,CAAEb,EAAE,CAAE,CAAE,CAAE,CAAA5B,QAAA,cAC9DjN,IAAA,CAACL,cAAc,EACb4N,OAAO,CAAC,WAAW,CACnBkD,QAAQ,CAAC,SAAS,CAClBpD,OAAO,CAAEA,CAAA,GAAM,CACb1D,MAAM,CAAC,CAACnF,YAAY,CAAC,CAAC,CACxB,CAAE,CACFkM,IAAI,CAAC,QAAQ,CAAAzD,QAAA,CACd,cAED,CAAgB,CAAC,CACd,CAAC,EACH,CAAC,CACC,CACV,CAEAnI,SAAS,eACR9E,IAAA,CAACnD,GAAG,EAACqQ,EAAE,CAAE,CAAE4B,SAAS,CAAE,QAAQ,CAAE8B,EAAE,CAAE,CAAC,CAAEzD,QAAQ,CAAE,UAAW,CAAE,CAAAF,QAAA,cAC5DjN,IAAA,CAACF,cAAc,EAAAmN,QAAA,cACbjN,IAAA,CAACP,gBAAgB,EACf8K,OAAO,CAAEvF,cAAc,EAAI,eAAgB,CAC3C+J,KAAK,CAAE,GAAI,CACXI,MAAM,CAAE,GAAI,CACb,CAAC,CACY,CAAC,CACd,CACN,CAEAzK,aAAa,EAAI,CAACI,SAAS,EAAIU,UAAU,GAAK,CAAC,eAC9CxF,IAAA,CAACH,OAAO,EAAAoN,QAAA,cACN/M,KAAA,CAACrD,GAAG,EAACqQ,EAAE,CAAE,CACPqB,CAAC,CAAE,CAAC,CACJM,EAAE,CAAE,CAAC,CACLrM,eAAe,CAAE,uBAAuB,CACxCO,cAAc,CAAE,YAAY,CAC5BC,YAAY,CAAE,CAAC,CACfC,MAAM,CAAE,oCAAoC,CAC5CG,SAAS,CAAE,gCACb,CAAE,CAAA6J,QAAA,eACAjN,IAAA,CAACjD,UAAU,EAACwQ,OAAO,CAAC,IAAI,CAACW,YAAY,MAAChB,EAAE,CAAE,CACxCtM,KAAK,CAAE,2BAA2B,CAClCM,UAAU,CAAE,QAAQ,CACpBkN,EAAE,CAAE,CACN,CAAE,CAAAnB,QAAA,CAAC,2BAEH,CAAY,CAAC,cACbjN,IAAA,CAACnD,GAAG,EAACqQ,EAAE,CAAE,CACP2D,SAAS,CAAE,GAAG,CACdC,SAAS,CAAE,MAAM,CACjBC,UAAU,CAAE,UAAU,CACtBvO,eAAe,CAAE,uBAAuB,CACxC+L,CAAC,CAAE,CAAC,CACJvL,YAAY,CAAE,CAAC,CACfC,MAAM,CAAE,oCACV,CAAE,CAAAgK,QAAA,cACAjN,IAAA,CAACjD,UAAU,EAACwQ,OAAO,CAAC,OAAO,CAACL,EAAE,CAAE,CAAEtM,KAAK,CAAE,0BAA2B,CAAE,CAAAqM,QAAA,CACnEvI,aAAa,CACJ,CAAC,CACV,CAAC,EACH,CAAC,CACC,CACV,CAEAE,kBAAkB,CAACuE,MAAM,CAAG,CAAC,EAAI,CAACrE,SAAS,eAC1C5E,KAAA,CAACrD,GAAG,EAACqQ,EAAE,CAAE,CAAE2B,EAAE,CAAE,CAAE,CAAE,CAAA5B,QAAA,eACjBjN,IAAA,CAACJ,MAAM,EAAAqN,QAAA,cACL/M,KAAA,CAACR,SAAS,EAACwN,EAAE,CAAE,CACbqB,CAAC,CAAE,CAAC,CACJvL,YAAY,CAAE,CAAC,CACfoL,EAAE,CAAE,CAAC,CACLrL,cAAc,CAAE,YAAY,CAC5BK,SAAS,CAAE,+BAA+B,CAC1CH,MAAM,CAAE,oCACV,CAAE,CAAAgK,QAAA,eACA/M,KAAA,CAACrD,GAAG,EAACqQ,EAAE,CAAE,CAAEyB,OAAO,CAAE,MAAM,CAAEc,UAAU,CAAE,QAAQ,CAAErB,EAAE,CAAE,CAAE,CAAE,CAAAnB,QAAA,eACxDjN,IAAA,CAACnB,UAAU,EAACqO,EAAE,CAAE,CAAEkC,QAAQ,CAAE,EAAE,CAAExO,KAAK,CAAE,SAAS,CAAE0M,EAAE,CAAE,GAAG,CAAEzE,MAAM,CAAE,wCAAyC,CAAE,CAAE,CAAC,cACjH7I,IAAA,CAACjD,UAAU,EAACwQ,OAAO,CAAC,IAAI,CAACL,EAAE,CAAE,CAAEtM,KAAK,CAAE,2BAA2B,CAAEM,UAAU,CAAE,MAAO,CAAE,CAAA+L,QAAA,CAAC,sCAEzF,CAAY,CAAC,EACV,CAAC,cAEN/M,KAAA,CAACnD,UAAU,EAACwQ,OAAO,CAAC,OAAO,CAACc,SAAS,MAACnB,EAAE,CAAE,CAAEtM,KAAK,CAAE,0BAA2B,CAAE,CAAAqM,QAAA,EAAC,4CACrC,CAACrI,kBAAkB,CAACuE,MAAM,CAAC,gGAEvE,EAAY,CAAC,CAEZhD,cAAc,CAACgD,MAAM,CAAG,CAAC,eACxBnJ,IAAA,CAAC7C,KAAK,EACJmR,QAAQ,CAAC,SAAS,CAClBe,IAAI,cAAErP,IAAA,CAACf,gBAAgB,GAAE,CAAE,CAC3BiO,EAAE,CAAE,CACFkB,EAAE,CAAE,CAAC,CACLO,OAAO,CAAE,MAAM,CACfc,UAAU,CAAE,QAAQ,CACpB9N,UAAU,CAAE,yBAAyB,CACrCf,KAAK,CAAE,2BAA2B,CAClC,kBAAkB,CAAE,CAClBA,KAAK,CAAE,0BACT,CACF,CAAE,CAAAqM,QAAA,cAEF/M,KAAA,CAACrD,GAAG,EAACqQ,EAAE,CAAE,CAAEyB,OAAO,CAAE,MAAM,CAAEc,UAAU,CAAE,QAAQ,CAAEC,cAAc,CAAE,eAAe,CAAEX,KAAK,CAAE,MAAO,CAAE,CAAA9B,QAAA,eACjG/M,KAAA,CAACnD,UAAU,EAACmQ,EAAE,CAAExM,UAAU,CAACM,IAAK,CAAAiM,QAAA,EAAC,4BACL,CAAC9G,cAAc,CAACgD,MAAM,CAAC,WAAS,CAAChD,cAAc,CAACgD,MAAM,GAAK,CAAC,CAAG,GAAG,CAAG,EAAE,CAAC,yDAEpG,EAAY,CAAC,cACbnJ,IAAA,CAACL,cAAc,EACb4N,OAAO,CAAC,UAAU,CAClBmD,IAAI,CAAC,OAAO,CACZD,QAAQ,CAAC,SAAS,CAClBO,SAAS,cAAEhR,IAAA,CAACd,eAAe,GAAE,CAAE,CAC/BmO,OAAO,CAAEb,oBAAqB,CAC9BU,EAAE,CAAE,CAAE+D,EAAE,CAAE,CAAE,CAAE,CAAAhE,QAAA,CACf,aAED,CAAgB,CAAC,EACd,CAAC,CACD,CACR,cAEDjN,IAAA,CAACzC,OAAO,EAAC2P,EAAE,CAAE,CAAEkB,EAAE,CAAE,CAAC,CAAE1L,WAAW,CAAE,0BAA2B,CAAE,CAAE,CAAC,CAElEwO,MAAM,CAACC,OAAO,CAACpK,gBAAgB,CAAC,CAACqK,GAAG,CAAC,CAAAC,IAAA,CAAqBC,UAAU,OAA9B,CAAClK,KAAK,CAAEmB,SAAS,CAAC,CAAA8I,IAAA,oBACvDnR,KAAA,CAACpC,SAAS,EAERyT,eAAe,CAAED,UAAU,GAAK,CAAE,CAClCpE,EAAE,CAAE,CACFkB,EAAE,CAAE,CAAC,CACLhL,SAAS,CAAE,MAAM,CACjBzB,UAAU,CAAE,uBAAuB,CACnCsB,MAAM,CAAE,oCAAoC,CAC5CD,YAAY,CAAE,gBAAgB,CAC9B,UAAU,CAAE,CACV2L,OAAO,CAAE,MACX,CAAC,CACD,gBAAgB,CAAE,CAChB6C,MAAM,CAAE,YACV,CACF,CAAE,CAAAvE,QAAA,eAEFjN,IAAA,CAACjC,gBAAgB,EACf0T,UAAU,cAAEzR,IAAA,CAAClB,cAAc,EAACoO,EAAE,CAAE,CAAEtM,KAAK,CAAE,0BAA2B,CAAE,CAAE,CAAE,CAC1EsM,EAAE,CAAE,CACF1K,eAAe,CAAE,uBAAuB,CACxCkP,YAAY,CAAE,oCAAoC,CAClD1O,YAAY,CAAE,KAAK,CACnB,gBAAgB,CAAE,CAChB2O,sBAAsB,CAAE,CAAC,CACzBC,uBAAuB,CAAE,CAC3B,CACF,CAAE,CAAA3E,QAAA,cAEF/M,KAAA,CAACrD,GAAG,EAACqQ,EAAE,CAAE,CAAEyB,OAAO,CAAE,MAAM,CAAEc,UAAU,CAAE,QAAQ,CAAEV,KAAK,CAAE,MAAM,CAAEW,cAAc,CAAE,eAAgB,CAAE,CAAAzC,QAAA,eACjG/M,KAAA,CAACnD,UAAU,EAACwQ,OAAO,CAAC,IAAI,CAACL,EAAE,CAAAvB,aAAA,CAAAA,aAAA,IAAOjL,UAAU,CAACC,OAAO,MAAEO,UAAU,CAAE,MAAM,EAAG,CAAA+L,QAAA,EACxE7F,KAAK,CAAC,IAAE,CAACmB,SAAS,CAACY,MAAM,CAAC,GAC7B,EAAY,CAAC,CAGZZ,SAAS,CAACY,MAAM,CAAG,CAAC,eACnBjJ,KAAA,CAACrD,GAAG,EAACqQ,EAAE,CAAE,CAAEyB,OAAO,CAAE,MAAM,CAAEc,UAAU,CAAE,QAAS,CAAE,CAAAxC,QAAA,eACjD/M,KAAA,CAACnD,UAAU,EAACwQ,OAAO,CAAC,OAAO,CAACL,EAAE,CAAAvB,aAAA,CAAAA,aAAA,IAAOjL,UAAU,CAACS,SAAS,MAAEmM,EAAE,CAAE,CAAC,EAAG,CAAAL,QAAA,EAChE1E,SAAS,CAACM,MAAM,CAAC1B,CAAC,EAAIhB,cAAc,CAAC+C,QAAQ,CAAC/B,CAAC,CAACY,EAAE,CAAC,CAAC,CAACoB,MAAM,CAAC,GAAC,CAACZ,SAAS,CAACY,MAAM,CAAC,UAClF,EAAY,CAAC,CACZZ,SAAS,CAACsJ,IAAI,CAAC1K,CAAC,EAAIhB,cAAc,CAAC+C,QAAQ,CAAC/B,CAAC,CAACY,EAAE,CAAC,CAAC,eACjD/H,IAAA,CAACf,gBAAgB,EACfmQ,QAAQ,CAAC,OAAO,CAChBlC,EAAE,CAAE,CACFtM,KAAK,CAAE,0BAA0B,CACjCG,OAAO,CAAEwH,SAAS,CAACuJ,KAAK,CAAC3K,CAAC,EAAIhB,cAAc,CAAC+C,QAAQ,CAAC/B,CAAC,CAACY,EAAE,CAAC,CAAC,CAAG,CAAC,CAAG,GAAG,CACtE8E,SAAS,CAAEtG,mBAAmB,CAAG,qBAAqB,CAAG,MAAM,CAC/D,kBAAkB,CAAE,CAClB,IAAI,CAAE,CAAEwH,SAAS,CAAE,UAAW,CAAC,CAC/B,KAAK,CAAE,CAAEA,SAAS,CAAE,YAAa,CAAC,CAClC,MAAM,CAAE,CAAEA,SAAS,CAAE,UAAW,CAClC,CACF,CAAE,CACH,CACF,EACE,CACN,EACE,CAAC,CACU,CAAC,cACnB/N,IAAA,CAAChC,gBAAgB,EAACkP,EAAE,CAAE,CAAEqB,CAAC,CAAE,CAAE,CAAE,CAAAtB,QAAA,CAC5B1E,SAAS,CAAC6I,GAAG,CAAC,CAAC1I,QAAQ,CAAEqJ,MAAM,QAAAC,YAAA,oBAC9B9R,KAAA,CAACrD,GAAG,EAEFqQ,EAAE,CAAE,CACFkB,EAAE,CAAE,CAAC,CACL6D,CAAC,CAAE,CAAC,CACJ1D,CAAC,CAAE,CAAC,CACJvL,YAAY,CAAE,CAAC,CACfrB,UAAU,CAAE,uBAAuB,CACnCsB,MAAM,CAAE,oCACV,CAAE,CAAAgK,QAAA,eAEF/M,KAAA,CAACrD,GAAG,EAACqQ,EAAE,CAAE,CAAEyB,OAAO,CAAE,MAAM,CAAEe,cAAc,CAAE,eAAe,CAAED,UAAU,CAAE,QAAQ,CAAErB,EAAE,CAAE,CAAE,CAAE,CAAAnB,QAAA,eACzF/M,KAAA,CAACnD,UAAU,EAACwQ,OAAO,CAAC,WAAW,CAACL,EAAE,CAAAvB,aAAA,CAAAA,aAAA,IAAOjL,UAAU,CAACC,OAAO,MAAEO,UAAU,CAAE,MAAM,EAAG,CAAA+L,QAAA,EAAC,WACxE,CAACqE,UAAU,CAAG,CAAC,CAAC,GAAC,CAACS,MAAM,CAAG,CAAC,CAGpC1L,gBAAgB,CAACqC,QAAQ,CAACX,EAAE,CAAC,eAC5B/H,IAAA,CAAC1B,OAAO,EACNuP,KAAK,mDAAAvD,MAAA,EAAA0H,YAAA,CAAmD5N,MAAM,CAACyH,IAAI,CAAC/C,CAAC,EAAIA,CAAC,CAACf,EAAE,GAAK1B,gBAAgB,CAACqC,QAAQ,CAACX,EAAE,CAAC,CAAC,UAAAiK,YAAA,iBAAxDA,YAAA,CAA0DhJ,IAAI,YAAU,CAChIkJ,KAAK,MAAAjF,QAAA,cAELjN,IAAA,CAACjD,UAAU,EACTyQ,SAAS,CAAC,MAAM,CAChBD,OAAO,CAAC,OAAO,CACfL,EAAE,CAAE,CACF+D,EAAE,CAAE,CAAC,CACLrQ,KAAK,CAAE,0BAA0B,CACjC2O,MAAM,CAAE,MAAM,CACd4C,cAAc,CAAE,WAAW,CAC3BC,mBAAmB,CAAE,QACvB,CAAE,CAAAnF,QAAA,CACH,oBAED,CAAY,CAAC,CACN,CACV,EACS,CAAC,CACZvE,QAAQ,CAACyC,UAAU,eAClBnL,IAAA,CAACxC,IAAI,EACHyD,KAAK,CAAEyH,QAAQ,CAACyC,UAAW,CAC3BuF,IAAI,CAAC,OAAO,CACZxD,EAAE,CAAE,CACFS,OAAO,CAAEzC,kBAAkB,CAACxC,QAAQ,CAACyC,UAAU,CAAC,CAChDvK,KAAK,CAAE,OAAO,CACdM,UAAU,CAAE,MACd,CAAE,CACH,CACF,EACE,CAAC,cAENlB,IAAA,CAACjD,UAAU,EAACwQ,OAAO,CAAC,OAAO,CAACc,SAAS,MAACnB,EAAE,CAAAvB,aAAA,CAAAA,aAAA,IAAOjL,UAAU,CAACM,IAAI,MAAE+P,UAAU,CAAE,UAAU,EAAG,CAAA9D,QAAA,CACtFvE,QAAQ,CAAC5G,IAAI,CACJ,CAAC,CAEZ4G,QAAQ,CAAC2J,OAAO,eACfrS,IAAA,CAACnD,GAAG,EAACqQ,EAAE,CAAE,CAAE+D,EAAE,CAAE,CAAC,CAAE7C,EAAE,CAAE,CAAE,CAAE,CAAAnB,QAAA,cACxBjN,IAAA,CAAC/B,UAAU,EACT+Q,KAAK,CAAEjJ,cAAc,CAAC2C,QAAQ,CAACX,EAAE,CAAC,EAAI,EAAG,CACzCkH,QAAQ,CAAGqB,CAAC,EAAK/E,kBAAkB,CAAC7C,QAAQ,CAACX,EAAE,CAAEuI,CAAC,CAACC,MAAM,CAACvB,KAAK,CAAE,CAAA/B,QAAA,CAEhEvE,QAAQ,CAAC2J,OAAO,CAACjB,GAAG,CAAC,CAACkB,GAAG,CAAEC,CAAC,gBAC3BvS,IAAA,CAAC7B,gBAAgB,EAEf6Q,KAAK,CAAEwD,MAAM,CAACC,YAAY,CAAC,EAAE,CAAGF,CAAC,CAAG;AAAA,CACpCG,OAAO,cACL1S,IAAA,CAAC9B,KAAK,EACJgP,EAAE,CAAE,CACFtM,KAAK,CAAE,0BAA0B,CACjC,eAAe,CAAE,CACfA,KAAK,CAAE,0BACT,CACF,CAAE,CACH,CACF,CACDK,KAAK,cACHf,KAAA,CAACrD,GAAG,EAACqQ,EAAE,CAAE,CACPyB,OAAO,CAAE,MAAM,CACfc,UAAU,CAAE,QAAQ,CACpB7O,KAAK,CAAEqF,gBAAgB,CAACyC,QAAQ,CAACX,EAAE,CAAC,EAC9BW,QAAQ,CAAC+C,MAAM,GAAK+G,MAAM,CAACC,YAAY,CAAC,EAAE,CAAGF,CAAC,CAAC,CAC/C,0BAA0B,CAAG,2BACrC,CAAE,CAAAtF,QAAA,eACA/M,KAAA,CAACnD,UAAU,EAACwQ,OAAO,CAAC,OAAO,CAAAN,QAAA,EACxBuF,MAAM,CAACC,YAAY,CAAC,EAAE,CAAGF,CAAC,CAAC,CAAC,IAAE,CAACD,GAAG,EACzB,CAAC,CACZrM,gBAAgB,CAACyC,QAAQ,CAACX,EAAE,CAAC,EAC5BW,QAAQ,CAAC+C,MAAM,GAAK+G,MAAM,CAACC,YAAY,CAAC,EAAE,CAAGF,CAAC,CAAC,eAC/CvS,IAAA,CAACjB,eAAe,EAACmO,EAAE,CAAE,CAAE+D,EAAE,CAAC,EAAE,CAAErQ,KAAK,CAAE,0BAA2B,CAAE,CAAE,CAAC,EAEpE,CACN,CACDsM,EAAE,CAAE,CACFqB,CAAC,CAAE,GAAG,CACNH,EAAE,CAAE,CAAC,CACLpL,YAAY,CAAE,CAAC,CACfC,MAAM,CAAE,WAAW,CACnBP,WAAW,CAAE,0BAA0B,CACvCF,eAAe,CAAEyD,gBAAgB,CAACyC,QAAQ,CAACX,EAAE,CAAC,EACpCW,QAAQ,CAAC+C,MAAM,GAAK+G,MAAM,CAACC,YAAY,CAAC,EAAE,CAAGF,CAAC,CAAC,CAC/C,yBAAyB,CAAG,uBAAuB,CAC7DxF,UAAU,CAAE,eAAe,CAC3B,SAAS,CAAE,CACTvK,eAAe,CAAE,CAACyD,gBAAgB,CAACyC,QAAQ,CAACX,EAAE,CAAC,CAC7C,uBAAuB,CACtBW,QAAQ,CAAC+C,MAAM,GAAK+G,MAAM,CAACC,YAAY,CAAC,EAAE,CAAGF,CAAC,CAAC,CAC9C,yBAAyB,CAAG,uBAClC,CACF,CAAE,CACFnR,QAAQ,CAAE6E,gBAAgB,CAACyC,QAAQ,CAACX,EAAE,CAAE,EA9CnCwK,CA+CN,CACF,CAAC,CACQ,CAAC,CACV,CACN,cAEDrS,KAAA,CAACrD,GAAG,EAACqQ,EAAE,CAAE,CAAEyB,OAAO,CAAE,MAAM,CAAEe,cAAc,CAAE,UAAU,CAAEb,EAAE,CAAE,CAAE,CAAE,CAAA5B,QAAA,EAC7DlH,cAAc,CAAC2C,QAAQ,CAACX,EAAE,CAAC,EAAI,CAAC9B,gBAAgB,CAACyC,QAAQ,CAACX,EAAE,CAAC,eAC5D/H,IAAA,CAACL,cAAc,EACb4N,OAAO,CAAC,WAAW,CACnBkD,QAAQ,CAAC,SAAS,CAClBpD,OAAO,CAAEA,CAAA,GAAMzB,WAAW,CAAClD,QAAQ,CAACX,EAAE,CAAE,CACxCmF,EAAE,CAAE,CAAEI,EAAE,CAAE,CAAE,CAAE,CAAAL,QAAA,CACf,cAED,CAAgB,CACjB,CACAhH,gBAAgB,CAACyC,QAAQ,CAACX,EAAE,CAAC,eAC5B/H,IAAA,CAACL,cAAc,EACb4N,OAAO,CAAC,UAAU,CAClBkD,QAAQ,CAAC,SAAS,CAClBpD,OAAO,CAAEA,CAAA,GAAMhB,aAAa,CAAC3D,QAAQ,CAACX,EAAE,CAAE,CAAAkF,QAAA,CAC3C,WAED,CAAgB,CACjB,EACE,CAAC,CAELhH,gBAAgB,CAACyC,QAAQ,CAACX,EAAE,CAAC,eAC5B/H,IAAA,CAAC5B,IAAI,EAACuU,EAAE,CAAE1M,gBAAgB,CAACyC,QAAQ,CAACX,EAAE,CAAE,CAAC6K,OAAO,CAAE,GAAI,CAAA3F,QAAA,cACpD/M,KAAA,CAACrD,GAAG,EAAAoQ,QAAA,eACFjN,IAAA,CAACnD,GAAG,EAACqQ,EAAE,CAAE,CAAEyB,OAAO,CAAE,MAAM,CAAEc,UAAU,CAAE,QAAQ,CAAEZ,EAAE,CAAE,CAAC,CAAET,EAAE,CAAE,CAAE,CAAE,CAAAnB,QAAA,CAC9DnB,eAAe,CAACpD,QAAQ,CAAE3C,cAAc,CAAC2C,QAAQ,CAACX,EAAE,CAAC,CAAC,cACrD/H,IAAA,CAAC7C,KAAK,EACJmR,QAAQ,CAAC,SAAS,CAClBe,IAAI,cAAErP,IAAA,CAACjB,eAAe,EAACqQ,QAAQ,CAAC,SAAS,CAAE,CAAE,CAC7ClC,EAAE,CAAE,CACF6B,KAAK,CAAE,MAAM,CACbvM,eAAe,CAAE,yBAAyB,CAC1C5B,KAAK,CAAE,2BAA2B,CAClC,kBAAkB,CAAE,CAClBA,KAAK,CAAE,0BACT,CACF,CAAE,CAAAqM,QAAA,cAEFjN,IAAA,CAACjD,UAAU,EAACwQ,OAAO,CAAC,OAAO,CAACrM,UAAU,CAAC,MAAM,CAAA+L,QAAA,CAAC,qBAE9C,CAAY,CAAC,CACR,CAAC,cAERjN,IAAA,CAAC7C,KAAK,EACJmR,QAAQ,CAAC,OAAO,CAChBe,IAAI,cAAErP,IAAA,CAAChB,UAAU,EAACoQ,QAAQ,CAAC,SAAS,CAAE,CAAE,CACxClC,EAAE,CAAE,CACF6B,KAAK,CAAE,MAAM,CACbvM,eAAe,CAAE,yBAAyB,CAC1C5B,KAAK,CAAE,2BAA2B,CAClC,kBAAkB,CAAE,CAClBA,KAAK,CAAE,wBACT,CACF,CAAE,CAAAqM,QAAA,cAEF/M,KAAA,CAACnD,UAAU,EAACwQ,OAAO,CAAC,OAAO,CAACrM,UAAU,CAAC,MAAM,CAAA+L,QAAA,EAAC,mCACX,CAACvE,QAAQ,CAAC+C,MAAM,CAAC,GACpD,EAAY,CAAC,CACR,CACR,CACE,CAAC,cAENvL,KAAA,CAACrD,GAAG,EAACqQ,EAAE,CAAE,CACP2B,EAAE,CAAE,CAAC,CACLN,CAAC,CAAE,CAAC,CACJZ,OAAO,CAAE,uBAAuB,CAChC3K,YAAY,CAAE,GAAG,CACjBC,MAAM,CAAE,oCAAoC,CAC5CkK,QAAQ,CAAE,UAAU,CACpB,WAAW,CAAE,CACXyC,OAAO,CAAE,IAAI,CACbzC,QAAQ,CAAE,UAAU,CACpB0C,GAAG,CAAE,CAAC,CACNC,IAAI,CAAE,CAAC,CACPf,KAAK,CAAE,KAAK,CACZI,MAAM,CAAE,MAAM,CACd3M,eAAe,CAAE,0BAA0B,CAC3CqQ,mBAAmB,CAAE,CAAC,CACtBlB,sBAAsB,CAAE,CAC1B,CACF,CAAE,CAAA1E,QAAA,eACAjN,IAAA,CAACjD,UAAU,EAACwQ,OAAO,CAAC,WAAW,CAACL,EAAE,CAAAvB,aAAA,CAAAA,aAAA,EAAIzK,UAAU,CAAE,MAAM,EAAKR,UAAU,CAACC,OAAO,MAAEyN,EAAE,CAAE,GAAG,CAAE0E,EAAE,CAAE,CAAC,EAAG,CAAA7F,QAAA,CAAC,cAEnG,CAAY,CAAC,cACbjN,IAAA,CAACjD,UAAU,EAACwQ,OAAO,CAAC,OAAO,CAACL,EAAE,CAAAvB,aAAA,CAAAA,aAAA,IAAOjL,UAAU,CAACM,IAAI,MAAE+P,UAAU,CAAE,UAAU,CAAE+B,EAAE,CAAE,CAAC,EAAG,CAAA7F,QAAA,CACnFvE,QAAQ,CAACqK,WAAW,CACX,CAAC,EACV,CAAC,EACH,CAAC,CACF,CACP,GA7MIrK,QAAQ,CAACX,EA8MX,CAAC,EACP,CAAC,CACc,CAAC,GA7QduJ,UA8QI,CAAC,EACb,CAAC,EACO,CAAC,CACN,CAAC,cAETpR,KAAA,CAACrD,GAAG,EAACqQ,EAAE,CAAE,CAAE2B,EAAE,CAAE,CAAC,CAAEF,OAAO,CAAE,MAAM,CAAEe,cAAc,CAAE,QAAQ,CAAEsD,GAAG,CAAE,CAAE,CAAE,CAAA/F,QAAA,eACpEjN,IAAA,CAACL,cAAc,EACb0N,OAAO,CAAEb,oBAAqB,CAC9Be,OAAO,CAAC,UAAU,CAClBkD,QAAQ,CAAC,SAAS,CAClBC,IAAI,CAAC,OAAO,CACZM,SAAS,cAAEhR,IAAA,CAACd,eAAe,GAAE,CAAE,CAAA+N,QAAA,CAChC,uBAED,CAAgB,CAAC,cACjBjN,IAAA,CAACL,cAAc,EACb4N,OAAO,CAAC,WAAW,CACnBkD,QAAQ,CAAC,SAAS,CAClBC,IAAI,CAAC,OAAO,CACZrD,OAAO,CAAEA,CAAA,GAAM,CACb5H,aAAa,CAAC,CAAC,CAAC,CAChBZ,qBAAqB,CAAC,EAAE,CAAC,CACzBF,gBAAgB,CAAC,IAAI,CAAC,CACtBU,cAAc,CAAC,MAAM,CAAC,CACtBZ,eAAe,CAAC,IAAI,CAAC,CACrBc,aAAa,CAAC,EAAE,CAAC,CACjBS,iBAAiB,CAAC,CAAC,CAAC,CAAC,CACrBE,mBAAmB,CAAC,CAAC,CAAC,CAAC,CACvBE,iBAAiB,CAAC,EAAE,CAAC,CACrBE,mBAAmB,CAAC,CAAC,CAAC,CAAC,CACvBI,iBAAiB,CAAC,CAAC,CAAC,CACtB,CAAE,CAAAuG,QAAA,CACH,uBAED,CAAgB,CAAC,EACd,CAAC,EACH,CACN,EAEQ,CAAC,EACH,CAAC,EACT,CAAC,CACO,CAAC,CAEpB,CAAC,CAED,cAAe,CAAApJ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}