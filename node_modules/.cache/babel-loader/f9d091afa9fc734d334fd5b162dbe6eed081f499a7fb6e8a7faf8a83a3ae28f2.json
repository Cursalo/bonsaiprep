{"ast":null,"code":"var _jsxFileName = \"/Users/gerardo/Downloads/Bonsaito/src/components/BonsaiTree.tsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { Box, Typography, Paper, useTheme } from '@mui/material';\nimport { useSpring, animated, config, useSprings } from 'react-spring';\n\n// Helper functions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst lerp = (a, b, t) => a * (1 - t) + b * t;\nconst clamp = (num, min, max) => Math.min(Math.max(num, min), max);\nconst randRange = (min, max) => Math.random() * (max - min) + min;\n\n// Simplified structure - focusing on trunk and foliage pads\n\n// New Color Palette based on the target image\nconst TRUNK_COLOR = '#604E43';\nconst FOLIAGE_HIGHLIGHT_COLOR = '#A1D490';\nconst FOLIAGE_SHADE_COLOR = '#7CAC6C';\nconst POT_COLOR = '#8D7B6F';\nconst BonsaiTree = ({\n  skills,\n  totalSkills\n}) => {\n  _s();\n  const theme = useTheme(); // Keep for potential future use or if other elements need it\n\n  // Define SVG dimensions at the component level\n  const svgWidth = 400;\n  const svgHeight = 450; // Adjusted height for the new design\n\n  const masteredSkillsCount = useMemo(() => {\n    return skills.filter(skill => skill.mastered).length;\n  }, [skills]);\n  const overallMasteryRatio = useMemo(() => {\n    return totalSkills > 0 ? masteredSkillsCount / totalSkills : 0;\n  }, [masteredSkillsCount, totalSkills]);\n  const skillsByCategory = useMemo(() => {\n    return skills.reduce((acc, skill) => {\n      if (!acc[skill.category]) acc[skill.category] = [];\n      acc[skill.category].push(skill);\n      return acc;\n    }, {});\n  }, [skills]);\n  const treeElements = useMemo(() => {\n    const categories = Object.keys(skillsByCategory);\n    let numFoliagePads = clamp(categories.length, 1, 3); // 1 to 3 main pads\n    if (skills.length === 0) numFoliagePads = 1; // Default to one pad if no skills\n\n    // Pot - Lower, wider, shallower\n    const potHeight = 35;\n    const potWidth = 120;\n    const potY = svgHeight - potHeight - 5; // 5 for feet clearance\n    const potFeetHeight = 5;\n    const potFeetWidth = 15;\n    const potPath = `M${svgWidth / 2 - potWidth / 2},${potY} h${potWidth} v${potHeight} h-${potWidth} Z`;\n    const potFeet = [`M${svgWidth / 2 - potWidth / 2 + 10},${potY + potHeight} h${potFeetWidth} v${potFeetHeight} h-${potFeetWidth} Z`, `M${svgWidth / 2 + potWidth / 2 - 10 - potFeetWidth},${potY + potHeight} h${potFeetWidth} v${potFeetHeight} h-${potFeetWidth} Z`];\n\n    // Trunk - Single graceful curve, leaning\n    const trunkBaseWidth = clamp(18 + overallMasteryRatio * 12, 15, 30);\n    const trunkTopWidth = trunkBaseWidth * 0.5;\n    const trunkHeight = clamp(90 + overallMasteryRatio * 40, 70, 130);\n    const trunkStartX = svgWidth / 2;\n    const trunkStartY = potY;\n    const trunkEndX = trunkStartX + randRange(15, 30) * (Math.random() > 0.5 ? 1 : -1); // Lean\n    const trunkEndY = trunkStartY - trunkHeight;\n\n    // Control points for a C-like curve\n    const cp1X = trunkStartX + (trunkEndX - trunkStartX) * 0.1 + randRange(-20, 20);\n    const cp1Y = trunkStartY - trunkHeight * 0.3;\n    const cp2X = trunkStartX + (trunkEndX - trunkStartX) * 0.9 + randRange(-15, 15);\n    const cp2Y = trunkStartY - trunkHeight * 0.8;\n\n    // Path for tapering trunk\n    const trunkPath = `\n      M ${trunkStartX - trunkBaseWidth / 2}, ${trunkStartY}\n      C ${cp1X - trunkBaseWidth * 0.4}, ${cp1Y},\n        ${cp2X - trunkTopWidth * 0.6}, ${cp2Y},\n        ${trunkEndX - trunkTopWidth / 2}, ${trunkEndY}\n      L ${trunkEndX + trunkTopWidth / 2}, ${trunkEndY}\n      C ${cp2X + trunkTopWidth * 0.6}, ${cp2Y},\n        ${cp1X + trunkBaseWidth * 0.4}, ${cp1Y},\n        ${trunkStartX + trunkBaseWidth / 2}, ${trunkStartY}\n      Z\n    `;\n    const foliagePads = [];\n    const padBaseSize = clamp(40 + overallMasteryRatio * 20, 35, 60);\n\n    // Define points along the trunk curve where foliage pads can be placed\n    // Simple approach: divide trunk height into sections\n    const numPadAttachmentPoints = numFoliagePads;\n    const attachmentPoints = [];\n    for (let i = 0; i < numPadAttachmentPoints; i++) {\n      const t = (i + 1) / (numPadAttachmentPoints + 1); // Distribute along 0.25 to 0.75 of trunk height approx.\n      // Calculate point on Bezier curve (simplified for this example)\n      // A proper calculation would use the Bezier formula based on t\n      const pX = lerp(lerp(cp1X, cp2X, t), lerp(trunkStartX, trunkEndX, t), t) + randRange(-10, 10);\n      const pY = lerp(lerp(cp1Y, cp2Y, t), lerp(trunkStartY, trunkEndY, t), t) + randRange(-15, 5);\n      attachmentPoints.push({\n        x: pX,\n        y: pY\n      });\n    }\n    if (numFoliagePads === 1) {\n      // Center single pad more towards the top\n      attachmentPoints[0] = {\n        x: trunkEndX + randRange(-5, 5),\n        y: trunkEndY + randRange(-5, 10)\n      };\n    }\n    for (let i = 0; i < numFoliagePads; i++) {\n      const basePoint = attachmentPoints[i % attachmentPoints.length]; // Cycle through attachment points if more pads than points\n      const padRx = padBaseSize * randRange(0.9, 1.2);\n      const padRy = padBaseSize * randRange(0.7, 1.0);\n      const rotation = randRange(-15, 15);\n\n      // Layered effect for foliage pad\n      const layers = [{\n        color: FOLIAGE_SHADE_COLOR,\n        opacity: 0.8,\n        scale: 1.0\n      },\n      // Base, slightly darker\n      {\n        color: FOLIAGE_HIGHLIGHT_COLOR,\n        opacity: 0.85,\n        scale: 0.85\n      },\n      // Middle highlight\n      {\n        color: FOLIAGE_HIGHLIGHT_COLOR,\n        opacity: 0.6,\n        scale: 0.65\n      } // Smaller, brighter highlight\n      ];\n      foliagePads.push({\n        id: `foliage-${i}`,\n        cx: basePoint.x,\n        cy: basePoint.y,\n        rx: padRx,\n        ry: padRy,\n        rotation,\n        layers\n      });\n    }\n    return {\n      potPath,\n      potFeet,\n      trunkPath,\n      foliagePads\n    };\n  }, [skillsByCategory, overallMasteryRatio, skills.length, svgWidth, svgHeight]);\n\n  // Animations\n  const containerAnimation = useSpring({\n    opacity: 1,\n    from: {\n      opacity: 0\n    },\n    config: {\n      ...config.gentle,\n      duration: 500\n    }\n  });\n  const potAnim = useSpring({\n    opacity: 1,\n    transform: 'translateY(0px)',\n    from: {\n      opacity: 0,\n      transform: 'translateY(20px)'\n    },\n    delay: 100,\n    config: config.gentle\n  });\n  const trunkAnim = useSpring({\n    opacity: 1,\n    transform: 'scaleY(1)',\n    from: {\n      opacity: 0,\n      transform: 'scaleY(0.5)'\n    },\n    delay: 250,\n    config: config.gentle,\n    transformOrigin: 'bottom'\n  });\n  const foliageAnims = useSprings(treeElements.foliagePads.length, treeElements.foliagePads.map((pad, i) => ({\n    opacity: 1,\n    transform: 'scale(1)',\n    from: {\n      opacity: 0,\n      transform: 'scale(0.5)'\n    },\n    delay: 400 + i * 150,\n    config: config.wobbly\n  })));\n  return /*#__PURE__*/_jsxDEV(animated.div, {\n    style: containerAnimation,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 0,\n      sx: {\n        p: 3,\n        mb: 4,\n        borderRadius: '20px',\n        backgroundColor: 'transparent',\n        position: 'relative',\n        '&::before': {\n          content: '\"\"',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          backgroundImage: 'url(/altar2.png)',\n          backgroundSize: 'cover',\n          backgroundPosition: 'center',\n          opacity: 0.85,\n          borderRadius: '20px',\n          zIndex: 0\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'relative',\n          zIndex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          align: \"center\",\n          sx: {\n            fontWeight: 'bold',\n            color: '#2C1810',\n            textShadow: '0 2px 4px rgba(0,0,0,0.1)',\n            mb: 3\n          },\n          children: \"Your Learning Bonsai\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '100%',\n            height: svgHeight,\n            position: 'relative',\n            mt: 2,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"100%\",\n            height: \"100%\",\n            viewBox: `0 0 ${svgWidth} ${svgHeight}`,\n            style: {\n              overflow: 'visible'\n            },\n            preserveAspectRatio: \"xMidYMid meet\",\n            children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n              children: /*#__PURE__*/_jsxDEV(\"radialGradient\", {\n                id: \"treeGlow\",\n                cx: \"50%\",\n                cy: \"50%\",\n                r: \"50%\",\n                fx: \"50%\",\n                fy: \"50%\",\n                children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n                  offset: \"0%\",\n                  stopColor: \"#FFF8E1\",\n                  stopOpacity: \"0.3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n                  offset: \"100%\",\n                  stopColor: \"#FFF8E1\",\n                  stopOpacity: \"0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: svgWidth / 2,\n              cy: svgHeight / 2,\n              r: Math.min(svgWidth, svgHeight) / 2.5,\n              fill: \"url(#treeGlow)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(animated.g, {\n              style: potAnim,\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                d: treeElements.potPath,\n                fill: POT_COLOR\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this), treeElements.potFeet.map((footPath, i) => /*#__PURE__*/_jsxDEV(\"path\", {\n                d: footPath,\n                fill: POT_COLOR\n              }, `pot-foot-${i}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(animated.g, {\n              style: trunkAnim,\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: treeElements.trunkPath,\n                fill: TRUNK_COLOR,\n                filter: \"url(#trunkShadow)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this), treeElements.foliagePads.map((pad, index) => /*#__PURE__*/_jsxDEV(animated.g, {\n              style: foliageAnims[index],\n              transform: `rotate(${pad.rotation} ${pad.cx} ${pad.cy})`,\n              children: pad.layers.map((layer, layerIndex) => /*#__PURE__*/_jsxDEV(\"ellipse\", {\n                cx: pad.cx,\n                cy: pad.cy,\n                rx: pad.rx * layer.scale,\n                ry: pad.ry * layer.scale,\n                fill: layer.color,\n                opacity: layer.opacity,\n                filter: \"url(#foliageShadow)\"\n              }, `${pad.id}-layer-${layerIndex}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 21\n              }, this))\n            }, pad.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"defs\", {\n              children: [/*#__PURE__*/_jsxDEV(\"filter\", {\n                id: \"trunkShadow\",\n                x: \"-20%\",\n                y: \"-20%\",\n                width: \"140%\",\n                height: \"140%\",\n                children: [/*#__PURE__*/_jsxDEV(\"feGaussianBlur\", {\n                  in: \"SourceAlpha\",\n                  stdDeviation: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"feOffset\", {\n                  dx: \"2\",\n                  dy: \"2\",\n                  result: \"offsetblur\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"feComponentTransfer\", {\n                  children: /*#__PURE__*/_jsxDEV(\"feFuncA\", {\n                    type: \"linear\",\n                    slope: \"0.3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"feMerge\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"feMergeNode\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"feMergeNode\", {\n                    in: \"SourceGraphic\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"filter\", {\n                id: \"foliageShadow\",\n                x: \"-20%\",\n                y: \"-20%\",\n                width: \"140%\",\n                height: \"140%\",\n                children: [/*#__PURE__*/_jsxDEV(\"feGaussianBlur\", {\n                  in: \"SourceAlpha\",\n                  stdDeviation: \"1.5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"feOffset\", {\n                  dx: \"1\",\n                  dy: \"1\",\n                  result: \"offsetblur\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"feComponentTransfer\", {\n                  children: /*#__PURE__*/_jsxDEV(\"feFuncA\", {\n                    type: \"linear\",\n                    slope: \"0.2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"feMerge\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"feMergeNode\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"feMergeNode\", {\n                    in: \"SourceGraphic\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n_s(BonsaiTree, \"npV+HSGRgodz54RzFOYQhyDcLFk=\", false, function () {\n  return [useTheme, useSpring, useSpring, useSpring, useSprings];\n});\n_c = BonsaiTree;\nexport default BonsaiTree;\nvar _c;\n$RefreshReg$(_c, \"BonsaiTree\");","map":{"version":3,"names":["React","useMemo","Box","Typography","Paper","useTheme","useSpring","animated","config","useSprings","jsxDEV","_jsxDEV","lerp","a","b","t","clamp","num","min","max","Math","randRange","random","TRUNK_COLOR","FOLIAGE_HIGHLIGHT_COLOR","FOLIAGE_SHADE_COLOR","POT_COLOR","BonsaiTree","skills","totalSkills","_s","theme","svgWidth","svgHeight","masteredSkillsCount","filter","skill","mastered","length","overallMasteryRatio","skillsByCategory","reduce","acc","category","push","treeElements","categories","Object","keys","numFoliagePads","potHeight","potWidth","potY","potFeetHeight","potFeetWidth","potPath","potFeet","trunkBaseWidth","trunkTopWidth","trunkHeight","trunkStartX","trunkStartY","trunkEndX","trunkEndY","cp1X","cp1Y","cp2X","cp2Y","trunkPath","foliagePads","padBaseSize","numPadAttachmentPoints","attachmentPoints","i","pX","pY","x","y","basePoint","padRx","padRy","rotation","layers","color","opacity","scale","id","cx","cy","rx","ry","containerAnimation","from","gentle","duration","potAnim","transform","delay","trunkAnim","transformOrigin","foliageAnims","map","pad","wobbly","div","style","children","elevation","sx","p","mb","borderRadius","backgroundColor","position","content","top","left","right","bottom","backgroundImage","backgroundSize","backgroundPosition","zIndex","variant","gutterBottom","align","fontWeight","textShadow","fileName","_jsxFileName","lineNumber","columnNumber","width","height","mt","display","justifyContent","alignItems","viewBox","overflow","preserveAspectRatio","r","fx","fy","offset","stopColor","stopOpacity","fill","g","d","footPath","index","layer","layerIndex","in","stdDeviation","dx","dy","result","type","slope","_c","$RefreshReg$"],"sources":["/Users/gerardo/Downloads/Bonsaito/src/components/BonsaiTree.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { Box, Typography, Paper, useTheme } from '@mui/material';\nimport { useSpring, animated, config, useSprings } from 'react-spring';\n\n// Helper functions\nconst lerp = (a: number, b: number, t: number): number => a * (1 - t) + b * t;\nconst clamp = (num: number, min: number, max: number): number => Math.min(Math.max(num, min), max);\nconst randRange = (min: number, max: number): number => Math.random() * (max - min) + min;\n\ninterface Skill {\n  id: string;\n  name: string;\n  category: string;\n  mastered: boolean;\n  masteryLevel: number; // Assuming 0-100\n}\n\ninterface BonsaiTreeProps {\n  skills: Skill[];\n  totalSkills: number;\n}\n\ninterface Point {\n  x: number;\n  y: number;\n}\n\n// Simplified structure - focusing on trunk and foliage pads\ninterface FoliagePadElement {\n  id: string;\n  cx: number;\n  cy: number;\n  rx: number;\n  ry: number;\n  rotation: number;\n  // Elements for gradient/layering\n  layers: {\n    color: string;\n    opacity: number;\n    scale: number; // To create inner layers\n  }[];\n}\n\n// New Color Palette based on the target image\nconst TRUNK_COLOR = '#604E43'; \nconst FOLIAGE_HIGHLIGHT_COLOR = '#A1D490';\nconst FOLIAGE_SHADE_COLOR = '#7CAC6C'; \nconst POT_COLOR = '#8D7B6F';\n\nconst BonsaiTree: React.FC<BonsaiTreeProps> = ({ skills, totalSkills }) => {\n  const theme = useTheme(); // Keep for potential future use or if other elements need it\n\n  // Define SVG dimensions at the component level\n  const svgWidth = 400;\n  const svgHeight = 450; // Adjusted height for the new design\n\n  const masteredSkillsCount = useMemo(() => {\n    return skills.filter(skill => skill.mastered).length;\n  }, [skills]);\n\n  const overallMasteryRatio = useMemo(() => {\n    return totalSkills > 0 ? masteredSkillsCount / totalSkills : 0;\n  }, [masteredSkillsCount, totalSkills]);\n\n  const skillsByCategory = useMemo(() => {\n    return skills.reduce((acc, skill) => {\n      if (!acc[skill.category]) acc[skill.category] = [];\n      acc[skill.category].push(skill);\n      return acc;\n    }, {} as Record<string, Skill[]>);\n  }, [skills]);\n\n  const treeElements = useMemo(() => {\n    const categories = Object.keys(skillsByCategory);\n    let numFoliagePads = clamp(categories.length, 1, 3); // 1 to 3 main pads\n    if (skills.length === 0) numFoliagePads = 1; // Default to one pad if no skills\n\n    // Pot - Lower, wider, shallower\n    const potHeight = 35;\n    const potWidth = 120;\n    const potY = svgHeight - potHeight - 5; // 5 for feet clearance\n    const potFeetHeight = 5;\n    const potFeetWidth = 15;\n    const potPath = `M${svgWidth/2 - potWidth/2},${potY} h${potWidth} v${potHeight} h-${potWidth} Z`;\n    const potFeet = [\n      `M${svgWidth/2 - potWidth/2 + 10},${potY + potHeight} h${potFeetWidth} v${potFeetHeight} h-${potFeetWidth} Z`,\n      `M${svgWidth/2 + potWidth/2 - 10 - potFeetWidth},${potY + potHeight} h${potFeetWidth} v${potFeetHeight} h-${potFeetWidth} Z`,\n    ];\n\n    // Trunk - Single graceful curve, leaning\n    const trunkBaseWidth = clamp(18 + overallMasteryRatio * 12, 15, 30);\n    const trunkTopWidth = trunkBaseWidth * 0.5;\n    const trunkHeight = clamp(90 + overallMasteryRatio * 40, 70, 130);\n    \n    const trunkStartX = svgWidth / 2;\n    const trunkStartY = potY;\n    const trunkEndX = trunkStartX + randRange(15, 30) * (Math.random() > 0.5 ? 1 : -1); // Lean\n    const trunkEndY = trunkStartY - trunkHeight;\n\n    // Control points for a C-like curve\n    const cp1X = trunkStartX + (trunkEndX - trunkStartX) * 0.1 + randRange(-20, 20);\n    const cp1Y = trunkStartY - trunkHeight * 0.3;\n    const cp2X = trunkStartX + (trunkEndX - trunkStartX) * 0.9 + randRange(-15, 15);\n    const cp2Y = trunkStartY - trunkHeight * 0.8;\n\n    // Path for tapering trunk\n    const trunkPath = `\n      M ${trunkStartX - trunkBaseWidth / 2}, ${trunkStartY}\n      C ${cp1X - trunkBaseWidth * 0.4}, ${cp1Y},\n        ${cp2X - trunkTopWidth * 0.6}, ${cp2Y},\n        ${trunkEndX - trunkTopWidth / 2}, ${trunkEndY}\n      L ${trunkEndX + trunkTopWidth / 2}, ${trunkEndY}\n      C ${cp2X + trunkTopWidth * 0.6}, ${cp2Y},\n        ${cp1X + trunkBaseWidth * 0.4}, ${cp1Y},\n        ${trunkStartX + trunkBaseWidth / 2}, ${trunkStartY}\n      Z\n    `;\n\n    const foliagePads: FoliagePadElement[] = [];\n    const padBaseSize = clamp(40 + overallMasteryRatio * 20, 35, 60);\n\n    // Define points along the trunk curve where foliage pads can be placed\n    // Simple approach: divide trunk height into sections\n    const numPadAttachmentPoints = numFoliagePads;\n    const attachmentPoints: Point[] = [];\n    for (let i = 0; i < numPadAttachmentPoints; i++) {\n        const t = (i + 1) / (numPadAttachmentPoints + 1); // Distribute along 0.25 to 0.75 of trunk height approx.\n        // Calculate point on Bezier curve (simplified for this example)\n        // A proper calculation would use the Bezier formula based on t\n        const pX = lerp(lerp(cp1X, cp2X, t), lerp(trunkStartX, trunkEndX, t), t) + randRange(-10,10) ;\n        const pY = lerp(lerp(cp1Y, cp2Y, t), lerp(trunkStartY, trunkEndY, t), t) + randRange(-15,5);\n        attachmentPoints.push({x: pX, y: pY });\n    }\n    if (numFoliagePads === 1) { // Center single pad more towards the top\n        attachmentPoints[0] = {x: trunkEndX + randRange(-5,5), y: trunkEndY + randRange(-5,10)};\n    }\n\n\n    for (let i = 0; i < numFoliagePads; i++) {\n      const basePoint = attachmentPoints[i % attachmentPoints.length]; // Cycle through attachment points if more pads than points\n      const padRx = padBaseSize * randRange(0.9, 1.2);\n      const padRy = padBaseSize * randRange(0.7, 1.0);\n      const rotation = randRange(-15, 15);\n\n      // Layered effect for foliage pad\n      const layers = [\n        { color: FOLIAGE_SHADE_COLOR, opacity: 0.8, scale: 1.0 },        // Base, slightly darker\n        { color: FOLIAGE_HIGHLIGHT_COLOR, opacity: 0.85, scale: 0.85 }, // Middle highlight\n        { color: FOLIAGE_HIGHLIGHT_COLOR, opacity: 0.6, scale: 0.65 }   // Smaller, brighter highlight\n      ];\n\n      foliagePads.push({\n        id: `foliage-${i}`,\n        cx: basePoint.x,\n        cy: basePoint.y,\n        rx: padRx,\n        ry: padRy,\n        rotation,\n        layers\n      });\n    }\n\n    return { potPath, potFeet, trunkPath, foliagePads };\n\n  }, [skillsByCategory, overallMasteryRatio, skills.length, svgWidth, svgHeight]);\n\n  // Animations\n  const containerAnimation = useSpring({ opacity: 1, from: { opacity: 0 }, config: {...config.gentle, duration: 500} });\n  const potAnim = useSpring({ opacity: 1, transform: 'translateY(0px)', from: { opacity: 0, transform: 'translateY(20px)' }, delay: 100, config: config.gentle });\n  const trunkAnim = useSpring({ opacity: 1, transform: 'scaleY(1)', from: { opacity: 0, transform: 'scaleY(0.5)' }, delay: 250, config: config.gentle, transformOrigin: 'bottom' });\n  \n  const foliageAnims = useSprings(\n    treeElements.foliagePads.length,\n    treeElements.foliagePads.map((pad, i) => ({\n      opacity: 1,\n      transform: 'scale(1)',\n      from: { opacity: 0, transform: 'scale(0.5)' },\n      delay: 400 + i * 150,\n      config: config.wobbly,\n    }))\n  );\n\n  return (\n    <animated.div style={containerAnimation}>\n      <Paper \n        elevation={0} \n        sx={{ \n          p: 3, \n          mb: 4, \n          borderRadius: '20px',\n          backgroundColor: 'transparent',\n          position: 'relative',\n          '&::before': {\n            content: '\"\"',\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            backgroundImage: 'url(/altar2.png)',\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n            opacity: 0.85,\n            borderRadius: '20px',\n            zIndex: 0,\n          }\n        }}\n      >\n        <Box sx={{ position: 'relative', zIndex: 1 }}>\n          <Typography \n            variant=\"h5\" \n            gutterBottom \n            align=\"center\" \n            sx={{ \n              fontWeight: 'bold', \n              color: '#2C1810',\n              textShadow: '0 2px 4px rgba(0,0,0,0.1)',\n              mb: 3\n            }}\n          >\n            Your Learning Bonsai\n          </Typography>\n          <Box sx={{ \n            width: '100%', \n            height: svgHeight, \n            position: 'relative', \n            mt: 2,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          }}>\n            <svg \n              width=\"100%\" \n              height=\"100%\" \n              viewBox={`0 0 ${svgWidth} ${svgHeight}`} \n              style={{ overflow: 'visible' }}\n              preserveAspectRatio=\"xMidYMid meet\"\n            >\n              {/* Ambient Glow Effect */}\n              <defs>\n                <radialGradient id=\"treeGlow\" cx=\"50%\" cy=\"50%\" r=\"50%\" fx=\"50%\" fy=\"50%\">\n                  <stop offset=\"0%\" stopColor=\"#FFF8E1\" stopOpacity=\"0.3\" />\n                  <stop offset=\"100%\" stopColor=\"#FFF8E1\" stopOpacity=\"0\" />\n                </radialGradient>\n              </defs>\n              \n              <circle \n                cx={svgWidth / 2} \n                cy={svgHeight / 2} \n                r={Math.min(svgWidth, svgHeight) / 2.5} \n                fill=\"url(#treeGlow)\" \n              />\n\n              {/* Pot */}\n              <animated.g style={potAnim}>\n                <path d={treeElements.potPath} fill={POT_COLOR} />\n                {treeElements.potFeet.map((footPath, i) => (\n                  <path key={`pot-foot-${i}`} d={footPath} fill={POT_COLOR} />\n                ))}\n              </animated.g>\n\n              {/* Trunk with enhanced shadow */}\n              <animated.g style={trunkAnim}>\n                <path\n                  d={treeElements.trunkPath}\n                  fill={TRUNK_COLOR}\n                  filter=\"url(#trunkShadow)\"\n                />\n              </animated.g>\n\n              {/* Foliage */}\n              {treeElements.foliagePads.map((pad, index) => (\n                <animated.g\n                  key={pad.id}\n                  style={foliageAnims[index]}\n                  transform={`rotate(${pad.rotation} ${pad.cx} ${pad.cy})`}\n                >\n                  {pad.layers.map((layer, layerIndex) => (\n                    <ellipse\n                      key={`${pad.id}-layer-${layerIndex}`}\n                      cx={pad.cx}\n                      cy={pad.cy}\n                      rx={pad.rx * layer.scale}\n                      ry={pad.ry * layer.scale}\n                      fill={layer.color}\n                      opacity={layer.opacity}\n                      filter=\"url(#foliageShadow)\"\n                    />\n                  ))}\n                </animated.g>\n              ))}\n\n              {/* Enhanced Shadows */}\n              <defs>\n                <filter id=\"trunkShadow\" x=\"-20%\" y=\"-20%\" width=\"140%\" height=\"140%\">\n                  <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"2\" />\n                  <feOffset dx=\"2\" dy=\"2\" result=\"offsetblur\" />\n                  <feComponentTransfer>\n                    <feFuncA type=\"linear\" slope=\"0.3\" />\n                  </feComponentTransfer>\n                  <feMerge>\n                    <feMergeNode />\n                    <feMergeNode in=\"SourceGraphic\" />\n                  </feMerge>\n                </filter>\n\n                <filter id=\"foliageShadow\" x=\"-20%\" y=\"-20%\" width=\"140%\" height=\"140%\">\n                  <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"1.5\" />\n                  <feOffset dx=\"1\" dy=\"1\" result=\"offsetblur\" />\n                  <feComponentTransfer>\n                    <feFuncA type=\"linear\" slope=\"0.2\" />\n                  </feComponentTransfer>\n                  <feMerge>\n                    <feMergeNode />\n                    <feMergeNode in=\"SourceGraphic\" />\n                  </feMerge>\n                </filter>\n              </defs>\n            </svg>\n          </Box>\n        </Box>\n      </Paper>\n    </animated.div>\n  );\n};\n\nexport default BonsaiTree;\n\n "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}