{"ast":null,"code":"import React,{useMemo,useEffect,useState}from'react';import{Box,Typography,Paper,useTheme,Tooltip}from'@mui/material';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const BonsaiTree=_ref=>{let{skills,totalSkills}=_ref;const theme=useTheme();const[animation,setAnimation]=useState(false);const[recentlyMastered,setRecentlyMastered]=useState([]);// Calculate mastery percentage\nconst masteryPercentage=useMemo(()=>{const masteredSkills=skills.filter(skill=>skill.mastered).length;return Math.round(masteredSkills/totalSkills*100);},[skills,totalSkills]);// Group skills by category\nconst skillsByCategory=useMemo(()=>{return skills.reduce((acc,skill)=>{if(!acc[skill.category]){acc[skill.category]=[];}acc[skill.category].push(skill);return acc;},{});},[skills]);// Track skills that were recently mastered\nuseEffect(()=>{const previouslyMastered=recentlyMastered;const currentlyMastered=skills.filter(skill=>skill.mastered).map(skill=>skill.id);// Find newly mastered skills\nconst newlyMastered=currentlyMastered.filter(id=>!previouslyMastered.includes(id));if(newlyMastered.length>0){setRecentlyMastered(currentlyMastered);setAnimation(true);// Reset animation state after animation completes\nconst timer=setTimeout(()=>{setAnimation(false);},2000);return()=>clearTimeout(timer);}},[skills,recentlyMastered]);// Calculate tree health/vitality based on mastery\nconst treeVitality=useMemo(()=>{const healthPercentage=masteryPercentage;// Define tree colors based on health\nconst leafBaseColor=healthPercentage<30?'#A5D6A7'// Pale green for low mastery\n:healthPercentage<60?'#81C784'// Medium green\n:'#4CAF50';// Vibrant green for high mastery\nconst trunkColor=healthPercentage<40?'#8D6E63'// Lighter brown for younger tree\n:healthPercentage<70?'#795548'// Medium brown\n:'#5D4037';// Dark rich brown for mature tree\n// Calculate trunk width based on total mastered skills\nconst trunkWidth=10+masteryPercentage/10;// Calculate trunk height - grows as tree masters more skills\nconst trunkHeight=80+masteryPercentage/2;return{leafBaseColor,trunkColor,trunkWidth,trunkHeight,canopy:100+masteryPercentage*1.5// Size of the canopy grows with mastery\n};},[masteryPercentage]);// Map categories to branches\nconst branches=useMemo(()=>{return Object.entries(skillsByCategory).map((_ref2,index)=>{let[category,skills]=_ref2;const numCategories=Object.keys(skillsByCategory).length;// Distribute branches in a more natural, asymmetric way\nlet angle;if(numCategories===1){angle=-Math.PI/2;// Just one branch pointing up\n}else if(numCategories===2){angle=index===0?-Math.PI/2-0.5:-Math.PI/2+0.5;}else{// Distribute branches over about 200 degrees (not a full circle)\nconst angleRange=Math.PI*1.1;// ~200 degrees\nconst angleOffset=-Math.PI/2-angleRange/2;// Center around top\nangle=angleOffset+index*(angleRange/(numCategories-1));}const masteredInCategory=skills.filter(s=>s.mastered).length;const categoryProgress=skills.length>0?masteredInCategory/skills.length:0;// Branch length based on category progress and total skills in category\nconst baseLength=30+skills.length*3;// Base length depends on how many skills\nconst progressBoost=70*categoryProgress;// Additional length from mastery\nconst branchLength=baseLength+progressBoost;// Add a slight curve to the branches for more natural look\nconst curveControl={x:150+Math.cos(angle)*(branchLength*0.3),y:300+Math.sin(angle)*(branchLength*0.3)-15// Pull control point up a bit\n};return{category,// Start point (trunk)\nx1:150,y1:300,// End point\nx2:150+Math.cos(angle)*branchLength,y2:300+Math.sin(angle)*branchLength,// Control point for curve\ncX:curveControl.x,cY:curveControl.y,skills,masteredCount:masteredInCategory,totalCount:skills.length,angle,thickness:3+masteredInCategory/2// Branch thickness grows with mastery\n};});},[skillsByCategory]);return/*#__PURE__*/_jsxs(Paper,{elevation:3,sx:{p:3,mb:4,position:'relative',overflow:'hidden',borderRadius:2,transition:'all 0.5s ease',background:\"linear-gradient(to bottom, \".concat(theme.palette.background.paper,\" 0%, \").concat(theme.palette.background.paper,\" 70%, #f0f4c3 100%)\")},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,align:\"center\",sx:{fontWeight:'bold',color:theme.palette.primary.main},children:\"Your Bonsai Learning Tree\"}),/*#__PURE__*/_jsxs(Box,{sx:{textAlign:'center',mb:2,animation:animation?'pulse 2s ease-in-out':'none','@keyframes pulse':{'0%':{transform:'scale(1)'},'50%':{transform:'scale(1.1)'},'100%':{transform:'scale(1)'}}},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",color:\"primary\",sx:{fontWeight:'bold',animation:animation?'colorShift 2s ease-in-out':'none','@keyframes colorShift':{'0%':{color:theme.palette.primary.main},'50%':{color:theme.palette.success.main},'100%':{color:theme.palette.primary.main}}},children:[masteryPercentage,\"%\"]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Skills Mastered\"})]}),/*#__PURE__*/_jsxs(Box,{sx:{width:'100%',height:450,// Increased height\nposition:'relative',borderRadius:2,overflow:'hidden'},children:[/*#__PURE__*/_jsx(Box,{sx:{position:'absolute',top:30,right:30,width:40,height:40,borderRadius:'50%',background:theme.palette.mode==='dark'?'radial-gradient(circle, #f9f9f9 30%, rgba(255,255,255,0.5) 70%)':'radial-gradient(circle, #FFEB3B 30%, rgba(255,235,59,0.2) 75%)',boxShadow:theme.palette.mode==='dark'?'0 0 20px 5px rgba(255,255,255,0.2)':'0 0 30px 10px rgba(255,235,59,0.3)'}}),/*#__PURE__*/_jsxs(\"svg\",{width:\"100%\",height:\"100%\",viewBox:\"0 0 300 450\",overflow:\"visible\",children:[theme.palette.mode!=='dark'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"ellipse\",{cx:\"50\",cy:\"80\",rx:\"30\",ry:\"15\",fill:\"rgba(255,255,255,0.7)\"}),/*#__PURE__*/_jsx(\"ellipse\",{cx:\"65\",cy:\"75\",rx:\"25\",ry:\"18\",fill:\"rgba(255,255,255,0.8)\"}),/*#__PURE__*/_jsx(\"ellipse\",{cx:\"80\",cy:\"85\",rx:\"20\",ry:\"12\",fill:\"rgba(255,255,255,0.9)\"}),/*#__PURE__*/_jsx(\"ellipse\",{cx:\"230\",cy:\"60\",rx:\"25\",ry:\"13\",fill:\"rgba(255,255,255,0.8)\"}),/*#__PURE__*/_jsx(\"ellipse\",{cx:\"250\",cy:\"55\",rx:\"20\",ry:\"15\",fill:\"rgba(255,255,255,0.9)\"}),/*#__PURE__*/_jsx(\"ellipse\",{cx:\"270\",cy:\"63\",rx:\"18\",ry:\"10\",fill:\"rgba(255,255,255,0.7)\"})]}),/*#__PURE__*/_jsx(\"ellipse\",{cx:\"150\",cy:\"400\",rx:\"120\",ry:\"20\",fill:\"url(#groundGradient)\"}),/*#__PURE__*/_jsx(\"defs\",{children:/*#__PURE__*/_jsxs(\"radialGradient\",{id:\"groundGradient\",cx:\"50%\",cy:\"50%\",r:\"50%\",fx:\"50%\",fy:\"50%\",children:[/*#__PURE__*/_jsx(\"stop\",{offset:\"0%\",stopColor:\"#8D6E63\"}),/*#__PURE__*/_jsx(\"stop\",{offset:\"90%\",stopColor:\"#5D4037\"})]})}),/*#__PURE__*/_jsx(\"rect\",{x:150-treeVitality.trunkWidth/2,y:300,width:treeVitality.trunkWidth,height:treeVitality.trunkHeight,fill:\"url(#trunkGradient)\"}),/*#__PURE__*/_jsx(\"defs\",{children:/*#__PURE__*/_jsxs(\"linearGradient\",{id:\"trunkGradient\",x1:\"0%\",y1:\"0%\",x2:\"100%\",y2:\"0%\",children:[/*#__PURE__*/_jsx(\"stop\",{offset:\"0%\",stopColor:treeVitality.trunkColor}),/*#__PURE__*/_jsx(\"stop\",{offset:\"50%\",stopColor:\"#8B4513\"}),/*#__PURE__*/_jsx(\"stop\",{offset:\"100%\",stopColor:treeVitality.trunkColor})]})}),/*#__PURE__*/_jsx(\"path\",{d:\"\\n              M\".concat(145,\",\",300+treeVitality.trunkHeight,\" \\n              Q\",120,\",\").concat(320+treeVitality.trunkHeight,\" \",100,\",\").concat(310+treeVitality.trunkHeight,\" \\n              Q\",130,\",\").concat(300+treeVitality.trunkHeight,\" \",150,\",\").concat(300+treeVitality.trunkHeight,\"\\n              \\n              M\",155,\",\").concat(300+treeVitality.trunkHeight,\" \\n              Q\",180,\",\").concat(315+treeVitality.trunkHeight,\" \",200,\",\").concat(305+treeVitality.trunkHeight,\" \\n              Q\",170,\",\").concat(295+treeVitality.trunkHeight,\" \",150,\",\").concat(300+treeVitality.trunkHeight,\"\\n              \\n              M\",150,\",\").concat(300+treeVitality.trunkHeight,\" \\n              Q\",140,\",\").concat(330+treeVitality.trunkHeight,\" \",130,\",\").concat(340+treeVitality.trunkHeight,\"\\n              \\n              M\",150,\",\").concat(300+treeVitality.trunkHeight,\" \\n              Q\",160,\",\").concat(325+treeVitality.trunkHeight,\" \",170,\",\").concat(335+treeVitality.trunkHeight,\"\\n            \"),fill:\"none\",stroke:treeVitality.trunkColor,strokeWidth:\"3\"}),/*#__PURE__*/_jsx(\"ellipse\",{cx:\"140\",cy:300+treeVitality.trunkHeight-5,rx:\"12\",ry:\"5\",fill:\"#81C784\",opacity:\"0.7\"}),/*#__PURE__*/_jsx(\"ellipse\",{cx:\"160\",cy:300+treeVitality.trunkHeight-3,rx:\"15\",ry:\"4\",fill:\"#81C784\",opacity:\"0.6\"}),branches.map((branch,index)=>/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"path\",{d:\"M\".concat(branch.x1,\",\").concat(branch.y1,\" Q\").concat(branch.cX,\",\").concat(branch.cY,\" \").concat(branch.x2,\",\").concat(branch.y2),stroke:\"url(#branchGradient)\",strokeWidth:branch.thickness,fill:\"none\",strokeLinecap:\"round\",className:animation?'branch-grow':'',style:{animation:animation?\"growBranch 2s ease-out\":'none'}}),/*#__PURE__*/_jsx(\"defs\",{children:/*#__PURE__*/_jsxs(\"linearGradient\",{id:\"branchGradient-\".concat(index),x1:\"0%\",y1:\"0%\",x2:\"100%\",y2:\"0%\",children:[/*#__PURE__*/_jsx(\"stop\",{offset:\"0%\",stopColor:\"#8B4513\"}),/*#__PURE__*/_jsx(\"stop\",{offset:\"100%\",stopColor:\"#A1887F\"})]})}),/*#__PURE__*/_jsx(\"text\",{x:branch.x2,y:branch.y2-10,textAnchor:branch.angle<-Math.PI/2||branch.angle>Math.PI/2?\"end\":\"start\",fill:theme.palette.text.secondary,fontSize:\"10\",fontWeight:\"bold\",style:{pointerEvents:'none'},transform:\"rotate(\".concat(branch.angle*(180/Math.PI)+(branch.angle<-Math.PI/2||branch.angle>Math.PI/2?180:0),\", \").concat(branch.x2,\", \").concat(branch.y2,\")\"),children:branch.category}),branch.skills.map((skill,skillIndex)=>{const spacing=0.2;const skillAngle=branch.angle+(skillIndex-branch.skills.length/2)*spacing;const distanceRatio=(skillIndex+1)/branch.skills.length;const distance=20+distanceRatio*branch.totalCount*6;// Position along the curved branch path\nconst t=distanceRatio*0.8+0.2;// parameterized position along path (0.2 to 1)\nconst x=branch.x1*(1-t)*(1-t)+2*branch.cX*(1-t)*t+branch.x2*t*t;const y=branch.y1*(1-t)*(1-t)+2*branch.cY*(1-t)*t+branch.y2*t*t;// Add a small random offset for more natural look\nconst randomOffsetX=(Math.random()-0.5)*10;const randomOffsetY=(Math.random()-0.5)*10;// Calculate size based on mastery level\nconst baseSize=5;const masteryBonus=skill.mastered?3:skill.masteryLevel/20;const size=baseSize+masteryBonus;// Determine if this skill was recently mastered\nconst isRecentlyMastered=recentlyMastered.includes(skill.id)&&skill.mastered;return/*#__PURE__*/_jsxs(\"g\",{children:[skill.mastered&&/*#__PURE__*/_jsx(\"circle\",{cx:x+randomOffsetX,cy:y+randomOffsetY,r:size+2,fill:\"none\",stroke:theme.palette.primary.main,strokeWidth:\"1\",opacity:isRecentlyMastered?0.8:0.3,style:{animation:isRecentlyMastered&&animation?'glowPulse 2s infinite':'none',animationDelay:\"\".concat(skillIndex*0.1,\"s\"),filter:isRecentlyMastered?'drop-shadow(0 0 3px rgba(76, 175, 80, 0.6))':'none'}}),/*#__PURE__*/_jsx(Tooltip,{title:skill.name,arrow:true,placement:\"top\",children:/*#__PURE__*/_jsx(\"circle\",{cx:x+randomOffsetX,cy:y+randomOffsetY,r:size,fill:skill.mastered?theme.palette.primary.main:treeVitality.leafBaseColor,opacity:skill.mastered?1:0.5+skill.masteryLevel/200,style:{cursor:'pointer',transition:'r 0.3s, fill 0.3s, opacity 0.3s',animation:isRecentlyMastered&&animation?'leafGrow 2s ease-out':'none',animationDelay:\"\".concat(skillIndex*0.1,\"s\")}})})]},\"skill-\".concat(skill.id));})]},index))]}),/*#__PURE__*/_jsxs(Box,{sx:{position:'absolute',bottom:10,right:10,backgroundColor:'rgba(255,255,255,0.8)',p:1.5,borderRadius:1,boxShadow:'0 2px 8px rgba(0,0,0,0.1)'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"caption\",display:\"block\",sx:{fontWeight:'bold',mb:0.5},children:\"Your Learning Growth\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",display:\"block\",children:[/*#__PURE__*/_jsx(Box,{component:\"span\",sx:{display:'inline-block',width:10,height:10,borderRadius:'50%',backgroundColor:theme.palette.primary.main,mr:1}}),\"Mastered Skills\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",display:\"block\",children:[/*#__PURE__*/_jsx(Box,{component:\"span\",sx:{display:'inline-block',width:10,height:10,borderRadius:'50%',backgroundColor:treeVitality.leafBaseColor,opacity:0.7,mr:1}}),\"Skills In Progress\"]})]}),/*#__PURE__*/_jsx(\"style\",{type:\"text/css\",children:\"\\n            @keyframes leafGrow {\\n              0% { transform: scale(0.5); opacity: 0.3; }\\n              50% { transform: scale(1.5); opacity: 0.9; }\\n              100% { transform: scale(1); opacity: 1; }\\n            }\\n            \\n            @keyframes growBranch {\\n              0% { stroke-dashoffset: 300; }\\n              100% { stroke-dashoffset: 0; }\\n            }\\n            \\n            @keyframes glowPulse {\\n              0% { opacity: 0.3; }\\n              50% { opacity: 0.8; }\\n              100% { opacity: 0.3; }\\n            }\\n          \"})]})]});};export default BonsaiTree;","map":{"version":3,"names":["React","useMemo","useEffect","useState","Box","Typography","Paper","useTheme","Tooltip","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","BonsaiTree","_ref","skills","totalSkills","theme","animation","setAnimation","recentlyMastered","setRecentlyMastered","masteryPercentage","masteredSkills","filter","skill","mastered","length","Math","round","skillsByCategory","reduce","acc","category","push","previouslyMastered","currentlyMastered","map","id","newlyMastered","includes","timer","setTimeout","clearTimeout","treeVitality","healthPercentage","leafBaseColor","trunkColor","trunkWidth","trunkHeight","canopy","branches","Object","entries","_ref2","index","numCategories","keys","angle","PI","angleRange","angleOffset","masteredInCategory","s","categoryProgress","baseLength","progressBoost","branchLength","curveControl","x","cos","y","sin","x1","y1","x2","y2","cX","cY","masteredCount","totalCount","thickness","elevation","sx","p","mb","position","overflow","borderRadius","transition","background","concat","palette","paper","children","variant","gutterBottom","align","fontWeight","color","primary","main","textAlign","transform","success","width","height","top","right","mode","boxShadow","viewBox","cx","cy","rx","ry","fill","r","fx","fy","offset","stopColor","d","stroke","strokeWidth","opacity","branch","strokeLinecap","className","style","textAnchor","text","secondary","fontSize","pointerEvents","skillIndex","spacing","skillAngle","distanceRatio","distance","t","randomOffsetX","random","randomOffsetY","baseSize","masteryBonus","masteryLevel","size","isRecentlyMastered","animationDelay","title","name","arrow","placement","cursor","bottom","backgroundColor","display","component","mr","type"],"sources":["/Users/gerardo/Downloads/Bonsaito/src/components/BonsaiTree.tsx"],"sourcesContent":["import React, { useMemo, useEffect, useState } from 'react';\nimport { Box, Typography, Paper, useTheme, Tooltip } from '@mui/material';\n\ninterface Skill {\n  id: string;\n  name: string;\n  category: string;\n  mastered: boolean;\n  masteryLevel: number;\n}\n\ninterface BonsaiTreeProps {\n  skills: Skill[];\n  totalSkills: number;\n}\n\nconst BonsaiTree: React.FC<BonsaiTreeProps> = ({ skills, totalSkills }) => {\n  const theme = useTheme();\n  const [animation, setAnimation] = useState<boolean>(false);\n  const [recentlyMastered, setRecentlyMastered] = useState<string[]>([]);\n  \n  // Calculate mastery percentage\n  const masteryPercentage = useMemo(() => {\n    const masteredSkills = skills.filter(skill => skill.mastered).length;\n    return Math.round((masteredSkills / totalSkills) * 100);\n  }, [skills, totalSkills]);\n\n  // Group skills by category\n  const skillsByCategory = useMemo(() => {\n    return skills.reduce((acc, skill) => {\n      if (!acc[skill.category]) {\n        acc[skill.category] = [];\n      }\n      acc[skill.category].push(skill);\n      return acc;\n    }, {} as Record<string, Skill[]>);\n  }, [skills]);\n\n  // Track skills that were recently mastered\n  useEffect(() => {\n    const previouslyMastered = recentlyMastered;\n    const currentlyMastered = skills.filter(skill => skill.mastered).map(skill => skill.id);\n    \n    // Find newly mastered skills\n    const newlyMastered = currentlyMastered.filter(id => !previouslyMastered.includes(id));\n    \n    if (newlyMastered.length > 0) {\n      setRecentlyMastered(currentlyMastered);\n      setAnimation(true);\n      \n      // Reset animation state after animation completes\n      const timer = setTimeout(() => {\n        setAnimation(false);\n      }, 2000);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [skills, recentlyMastered]);\n\n  // Calculate tree health/vitality based on mastery\n  const treeVitality = useMemo(() => {\n    const healthPercentage = masteryPercentage;\n    \n    // Define tree colors based on health\n    const leafBaseColor = healthPercentage < 30 \n      ? '#A5D6A7' // Pale green for low mastery\n      : healthPercentage < 60 \n        ? '#81C784' // Medium green\n        : '#4CAF50'; // Vibrant green for high mastery\n        \n    const trunkColor = healthPercentage < 40\n      ? '#8D6E63' // Lighter brown for younger tree\n      : healthPercentage < 70\n        ? '#795548' // Medium brown\n        : '#5D4037'; // Dark rich brown for mature tree\n        \n    // Calculate trunk width based on total mastered skills\n    const trunkWidth = 10 + (masteryPercentage / 10);\n    \n    // Calculate trunk height - grows as tree masters more skills\n    const trunkHeight = 80 + (masteryPercentage / 2);\n    \n    return { \n      leafBaseColor, \n      trunkColor, \n      trunkWidth, \n      trunkHeight,\n      canopy: 100 + masteryPercentage * 1.5 // Size of the canopy grows with mastery\n    };\n  }, [masteryPercentage]);\n\n  // Map categories to branches\n  const branches = useMemo(() => {\n    return Object.entries(skillsByCategory).map(([category, skills], index) => {\n      const numCategories = Object.keys(skillsByCategory).length;\n      // Distribute branches in a more natural, asymmetric way\n      let angle;\n      if (numCategories === 1) {\n        angle = -Math.PI/2; // Just one branch pointing up\n      } else if (numCategories === 2) {\n        angle = (index === 0) ? -Math.PI/2 - 0.5 : -Math.PI/2 + 0.5;\n      } else {\n        // Distribute branches over about 200 degrees (not a full circle)\n        const angleRange = Math.PI * 1.1; // ~200 degrees\n        const angleOffset = -Math.PI/2 - angleRange/2; // Center around top\n        angle = angleOffset + (index * (angleRange / (numCategories - 1)));\n      }\n      \n      const masteredInCategory = skills.filter(s => s.mastered).length;\n      const categoryProgress = skills.length > 0 ? masteredInCategory / skills.length : 0;\n      \n      // Branch length based on category progress and total skills in category\n      const baseLength = 30 + (skills.length * 3); // Base length depends on how many skills\n      const progressBoost = 70 * categoryProgress; // Additional length from mastery\n      const branchLength = baseLength + progressBoost;\n      \n      // Add a slight curve to the branches for more natural look\n      const curveControl = {\n        x: 150 + Math.cos(angle) * (branchLength * 0.3),\n        y: 300 + Math.sin(angle) * (branchLength * 0.3) - 15 // Pull control point up a bit\n      };\n      \n      return {\n        category,\n        // Start point (trunk)\n        x1: 150,\n        y1: 300,\n        // End point\n        x2: 150 + Math.cos(angle) * branchLength,\n        y2: 300 + Math.sin(angle) * branchLength,\n        // Control point for curve\n        cX: curveControl.x,\n        cY: curveControl.y,\n        skills,\n        masteredCount: masteredInCategory,\n        totalCount: skills.length,\n        angle,\n        thickness: 3 + (masteredInCategory / 2) // Branch thickness grows with mastery\n      };\n    });\n  }, [skillsByCategory]);\n\n  return (\n    <Paper \n      elevation={3} \n      sx={{ \n        p: 3, \n        mb: 4, \n        position: 'relative',\n        overflow: 'hidden',\n        borderRadius: 2,\n        transition: 'all 0.5s ease',\n        background: `linear-gradient(to bottom, ${theme.palette.background.paper} 0%, ${theme.palette.background.paper} 70%, #f0f4c3 100%)`,\n      }}\n    >\n      <Typography variant=\"h5\" gutterBottom align=\"center\" sx={{ fontWeight: 'bold', color: theme.palette.primary.main }}>\n        Your Bonsai Learning Tree\n      </Typography>\n      \n      <Box sx={{ \n        textAlign: 'center', \n        mb: 2,\n        animation: animation ? 'pulse 2s ease-in-out' : 'none',\n        '@keyframes pulse': {\n          '0%': { transform: 'scale(1)' },\n          '50%': { transform: 'scale(1.1)' },\n          '100%': { transform: 'scale(1)' }\n        }\n      }}>\n        <Typography \n          variant=\"h4\" \n          color=\"primary\" \n          sx={{ \n            fontWeight: 'bold',\n            animation: animation ? 'colorShift 2s ease-in-out' : 'none',\n            '@keyframes colorShift': {\n              '0%': { color: theme.palette.primary.main },\n              '50%': { color: theme.palette.success.main },\n              '100%': { color: theme.palette.primary.main }\n            }\n          }}\n        >\n          {masteryPercentage}%\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          Skills Mastered\n        </Typography>\n      </Box>\n      \n      <Box sx={{ \n        width: '100%', \n        height: 450, // Increased height\n        position: 'relative',\n        borderRadius: 2,\n        overflow: 'hidden',\n      }}>\n        {/* Sun or moon based on theme */}\n        <Box sx={{\n          position: 'absolute',\n          top: 30,\n          right: 30,\n          width: 40,\n          height: 40,\n          borderRadius: '50%',\n          background: theme.palette.mode === 'dark' \n            ? 'radial-gradient(circle, #f9f9f9 30%, rgba(255,255,255,0.5) 70%)' \n            : 'radial-gradient(circle, #FFEB3B 30%, rgba(255,235,59,0.2) 75%)',\n          boxShadow: theme.palette.mode === 'dark'\n            ? '0 0 20px 5px rgba(255,255,255,0.2)'\n            : '0 0 30px 10px rgba(255,235,59,0.3)',\n        }}/>\n        \n        <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 300 450\" overflow=\"visible\">\n          {/* Add some clouds or birds depending on theme */}\n          {theme.palette.mode !== 'dark' && (\n            <>\n              <ellipse cx=\"50\" cy=\"80\" rx=\"30\" ry=\"15\" fill=\"rgba(255,255,255,0.7)\" />\n              <ellipse cx=\"65\" cy=\"75\" rx=\"25\" ry=\"18\" fill=\"rgba(255,255,255,0.8)\" />\n              <ellipse cx=\"80\" cy=\"85\" rx=\"20\" ry=\"12\" fill=\"rgba(255,255,255,0.9)\" />\n              \n              <ellipse cx=\"230\" cy=\"60\" rx=\"25\" ry=\"13\" fill=\"rgba(255,255,255,0.8)\" />\n              <ellipse cx=\"250\" cy=\"55\" rx=\"20\" ry=\"15\" fill=\"rgba(255,255,255,0.9)\" />\n              <ellipse cx=\"270\" cy=\"63\" rx=\"18\" ry=\"10\" fill=\"rgba(255,255,255,0.7)\" />\n            </>\n          )}\n          \n          {/* Ground with gradient */}\n          <ellipse cx=\"150\" cy=\"400\" rx=\"120\" ry=\"20\" fill=\"url(#groundGradient)\" />\n          <defs>\n            <radialGradient id=\"groundGradient\" cx=\"50%\" cy=\"50%\" r=\"50%\" fx=\"50%\" fy=\"50%\">\n              <stop offset=\"0%\" stopColor=\"#8D6E63\" />\n              <stop offset=\"90%\" stopColor=\"#5D4037\" />\n            </radialGradient>\n          </defs>\n          \n          {/* Tree trunk with gradient */}\n          <rect \n            x={150 - treeVitality.trunkWidth/2} \n            y={300} \n            width={treeVitality.trunkWidth} \n            height={treeVitality.trunkHeight} \n            fill=\"url(#trunkGradient)\" \n          />\n          <defs>\n            <linearGradient id=\"trunkGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n              <stop offset=\"0%\" stopColor={treeVitality.trunkColor} />\n              <stop offset=\"50%\" stopColor=\"#8B4513\" />\n              <stop offset=\"100%\" stopColor={treeVitality.trunkColor} />\n            </linearGradient>\n          </defs>\n          \n          {/* Tree roots */}\n          <path \n            d={`\n              M${145},${300 + treeVitality.trunkHeight} \n              Q${120},${320 + treeVitality.trunkHeight} ${100},${310 + treeVitality.trunkHeight} \n              Q${130},${300 + treeVitality.trunkHeight} ${150},${300 + treeVitality.trunkHeight}\n              \n              M${155},${300 + treeVitality.trunkHeight} \n              Q${180},${315 + treeVitality.trunkHeight} ${200},${305 + treeVitality.trunkHeight} \n              Q${170},${295 + treeVitality.trunkHeight} ${150},${300 + treeVitality.trunkHeight}\n              \n              M${150},${300 + treeVitality.trunkHeight} \n              Q${140},${330 + treeVitality.trunkHeight} ${130},${340 + treeVitality.trunkHeight}\n              \n              M${150},${300 + treeVitality.trunkHeight} \n              Q${160},${325 + treeVitality.trunkHeight} ${170},${335 + treeVitality.trunkHeight}\n            `} \n            fill=\"none\"\n            stroke={treeVitality.trunkColor}\n            strokeWidth=\"3\"\n          />\n          \n          {/* Moss or small plants at base of tree */}\n          <ellipse cx=\"140\" cy={300 + treeVitality.trunkHeight - 5} rx=\"12\" ry=\"5\" fill=\"#81C784\" opacity=\"0.7\" />\n          <ellipse cx=\"160\" cy={300 + treeVitality.trunkHeight - 3} rx=\"15\" ry=\"4\" fill=\"#81C784\" opacity=\"0.6\" />\n          \n          {/* Branches as curved paths */}\n          {branches.map((branch, index) => (\n            <g key={index}>\n              <path\n                d={`M${branch.x1},${branch.y1} Q${branch.cX},${branch.cY} ${branch.x2},${branch.y2}`}\n                stroke=\"url(#branchGradient)\"\n                strokeWidth={branch.thickness}\n                fill=\"none\"\n                strokeLinecap=\"round\"\n                className={animation ? 'branch-grow' : ''}\n                style={{\n                  animation: animation ? `growBranch 2s ease-out` : 'none',\n                }}\n              />\n              <defs>\n                <linearGradient id={`branchGradient-${index}`} x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                  <stop offset=\"0%\" stopColor=\"#8B4513\" />\n                  <stop offset=\"100%\" stopColor=\"#A1887F\" />\n                </linearGradient>\n              </defs>\n              \n              {/* Category name on branch */}\n              <text \n                x={branch.x2} \n                y={branch.y2 - 10}\n                textAnchor={branch.angle < -Math.PI/2 || branch.angle > Math.PI/2 ? \"end\" : \"start\"}\n                fill={theme.palette.text.secondary}\n                fontSize=\"10\"\n                fontWeight=\"bold\"\n                style={{ pointerEvents: 'none' }}\n                transform={`rotate(${branch.angle * (180/Math.PI) + (branch.angle < -Math.PI/2 || branch.angle > Math.PI/2 ? 180 : 0)}, ${branch.x2}, ${branch.y2})`}\n              >\n                {branch.category}\n              </text>\n              \n              {/* Leaves/Skills */}\n              {branch.skills.map((skill, skillIndex) => {\n                const spacing = 0.2;\n                const skillAngle = branch.angle + (skillIndex - branch.skills.length/2) * spacing;\n                const distanceRatio = (skillIndex + 1) / branch.skills.length;\n                const distance = 20 + distanceRatio * branch.totalCount * 6;\n                \n                // Position along the curved branch path\n                const t = distanceRatio * 0.8 + 0.2; // parameterized position along path (0.2 to 1)\n                const x = branch.x1 * (1-t)*(1-t) + 2*branch.cX*(1-t)*t + branch.x2*t*t;\n                const y = branch.y1 * (1-t)*(1-t) + 2*branch.cY*(1-t)*t + branch.y2*t*t;\n                \n                // Add a small random offset for more natural look\n                const randomOffsetX = (Math.random() - 0.5) * 10;\n                const randomOffsetY = (Math.random() - 0.5) * 10;\n                \n                // Calculate size based on mastery level\n                const baseSize = 5;\n                const masteryBonus = skill.mastered ? 3 : (skill.masteryLevel / 20);\n                const size = baseSize + masteryBonus;\n                \n                // Determine if this skill was recently mastered\n                const isRecentlyMastered = recentlyMastered.includes(skill.id) && skill.mastered;\n                \n                return (\n                  <g key={`skill-${skill.id}`}>\n                    {/* Leaf glow effect for mastered skills */}\n                    {skill.mastered && (\n                      <circle\n                        cx={x + randomOffsetX}\n                        cy={y + randomOffsetY}\n                        r={size + 2}\n                        fill=\"none\"\n                        stroke={theme.palette.primary.main}\n                        strokeWidth=\"1\"\n                        opacity={isRecentlyMastered ? 0.8 : 0.3}\n                        style={{\n                          animation: isRecentlyMastered && animation ? 'glowPulse 2s infinite' : 'none',\n                          animationDelay: `${skillIndex * 0.1}s`,\n                          filter: isRecentlyMastered ? 'drop-shadow(0 0 3px rgba(76, 175, 80, 0.6))' : 'none'\n                        }}\n                      />\n                    )}\n                    \n                    {/* Leaf/Skill node */}\n                    <Tooltip title={skill.name} arrow placement=\"top\">\n                      <circle\n                        cx={x + randomOffsetX}\n                        cy={y + randomOffsetY}\n                        r={size}\n                        fill={skill.mastered ? theme.palette.primary.main : treeVitality.leafBaseColor}\n                        opacity={skill.mastered ? 1 : 0.5 + (skill.masteryLevel / 200)}\n                        style={{\n                          cursor: 'pointer',\n                          transition: 'r 0.3s, fill 0.3s, opacity 0.3s',\n                          animation: isRecentlyMastered && animation ? 'leafGrow 2s ease-out' : 'none',\n                          animationDelay: `${skillIndex * 0.1}s`\n                        }}\n                      />\n                    </Tooltip>\n                  </g>\n                );\n              })}\n            </g>\n          ))}\n        </svg>\n        \n        {/* Tree legend */}\n        <Box \n          sx={{ \n            position: 'absolute', \n            bottom: 10, \n            right: 10,\n            backgroundColor: 'rgba(255,255,255,0.8)', \n            p: 1.5,\n            borderRadius: 1,\n            boxShadow: '0 2px 8px rgba(0,0,0,0.1)'\n          }}\n        >\n          <Typography variant=\"caption\" display=\"block\" sx={{ fontWeight: 'bold', mb: 0.5 }}>\n            Your Learning Growth\n          </Typography>\n          <Typography variant=\"caption\" display=\"block\">\n            <Box component=\"span\" sx={{ \n              display: 'inline-block', \n              width: 10, \n              height: 10, \n              borderRadius: '50%', \n              backgroundColor: theme.palette.primary.main,\n              mr: 1\n            }}/>\n            Mastered Skills\n          </Typography>\n          <Typography variant=\"caption\" display=\"block\">\n            <Box component=\"span\" sx={{ \n              display: 'inline-block', \n              width: 10, \n              height: 10, \n              borderRadius: '50%', \n              backgroundColor: treeVitality.leafBaseColor,\n              opacity: 0.7,\n              mr: 1\n            }}/>\n            Skills In Progress\n          </Typography>\n        </Box>\n        \n        {/* Add global animation keyframes */}\n        <style type=\"text/css\">\n          {`\n            @keyframes leafGrow {\n              0% { transform: scale(0.5); opacity: 0.3; }\n              50% { transform: scale(1.5); opacity: 0.9; }\n              100% { transform: scale(1); opacity: 1; }\n            }\n            \n            @keyframes growBranch {\n              0% { stroke-dashoffset: 300; }\n              100% { stroke-dashoffset: 0; }\n            }\n            \n            @keyframes glowPulse {\n              0% { opacity: 0.3; }\n              50% { opacity: 0.8; }\n              100% { opacity: 0.3; }\n            }\n          `}\n        </style>\n      </Box>\n    </Paper>\n  );\n};\n\nexport default BonsaiTree;\n\n "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}