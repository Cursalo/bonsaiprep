{"ast":null,"code":"var _jsxFileName = \"/Users/gerardo/Downloads/Bonsaito/src/pages/UploadReport.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Container, Typography, AppBar, Toolbar, IconButton, Alert, Tabs, Tab, TextField, Divider, Chip, Stepper, Step, StepLabel, useTheme, useMediaQuery, Accordion, AccordionSummary, AccordionDetails, RadioGroup, Radio, FormControlLabel, Fade, Badge, Tooltip, Avatar } from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport TextFieldsIcon from '@mui/icons-material/TextFields';\nimport SchoolIcon from '@mui/icons-material/School';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport LocalFloristIcon from '@mui/icons-material/LocalFlorist';\nimport EmojiNatureIcon from '@mui/icons-material/EmojiNature';\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\nimport { useDropzone } from 'react-dropzone';\nimport { uploadFileToSupabase } from '../services/ocrService';\nimport { generateQuestionsFromMistakes } from '../services/geminiPdfService';\nimport { supabase } from '../supabaseClient';\nimport { useSkills } from '../components/SkillsProvider';\nimport LoadingAnimation from '../components/LoadingAnimation';\nimport GlassCard from '../components/GlassCard';\nimport GradientButton from '../components/GradientButton';\nimport { FadeIn, ScaleIn, FloatAnimation } from '../components/AnimationEffects';\n\n// Define an interface for user answers\n\n// Interface for tracking which skills are improved by which questions\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Function to simulate processing delay\nconst addProcessingDelay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n// Text styles for better readability based on dark theme best practices\nconst textStyles = {\n  heading: {\n    color: 'rgba(255, 255, 255, 0.87)',\n    // High-emphasis text at 87% opacity\n    textShadow: '0 1px 2px rgba(0,0,0,0.2)'\n  },\n  subheading: {\n    color: 'rgba(255, 255, 255, 0.87)',\n    // High-emphasis text at 87% opacity\n    opacity: 0.9\n  },\n  body: {\n    color: 'rgba(255, 255, 255, 0.7)' // Medium-emphasis text at 70% opacity\n  },\n  label: {\n    color: 'rgba(255, 255, 255, 0.87)',\n    // High-emphasis text at 87% opacity\n    fontWeight: 500\n  },\n  secondary: {\n    color: 'rgba(255, 255, 255, 0.6)' // Secondary text at 60% opacity\n  },\n  disabled: {\n    color: 'rgba(255, 255, 255, 0.38)' // Disabled text at 38% opacity\n  },\n  accent: {\n    color: 'rgba(136, 212, 152, 0.9)' // Desaturated accent color\n  }\n};\n\n// Create a dark theme to match onboarding\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#88d498'\n    },\n    secondary: {\n      main: '#88d498'\n    },\n    background: {\n      paper: 'rgba(33, 33, 33, 0.95)',\n      default: '#121212'\n    },\n    text: {\n      primary: 'rgba(255, 255, 255, 0.87)',\n      secondary: 'rgba(255, 255, 255, 0.6)'\n    }\n  },\n  typography: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    h4: {\n      fontWeight: 600\n    },\n    h6: {\n      fontWeight: 500\n    }\n  },\n  components: {\n    MuiInputBase: {\n      styleOverrides: {\n        input: {\n          color: 'rgba(255, 255, 255, 0.87)'\n        },\n        root: {\n          backgroundColor: 'rgba(30, 30, 30, 0.4)'\n        }\n      }\n    },\n    MuiOutlinedInput: {\n      styleOverrides: {\n        root: {\n          '&:hover .MuiOutlinedInput-notchedOutline': {\n            borderColor: '#88d498'\n          },\n          '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n            borderColor: '#88d498'\n          }\n        },\n        notchedOutline: {\n          borderColor: 'rgba(255, 255, 255, 0.23)'\n        }\n      }\n    },\n    MuiFormLabel: {\n      styleOverrides: {\n        root: {\n          color: 'rgba(255, 255, 255, 0.6)',\n          '&.Mui-focused': {\n            color: '#88d498'\n          }\n        }\n      }\n    },\n    MuiPaper: {\n      styleOverrides: {\n        root: {\n          backgroundImage: 'none',\n          backgroundColor: 'rgba(30, 30, 30, 0.6)',\n          backdropFilter: 'blur(10px)',\n          borderRadius: 12,\n          border: '1px solid rgba(255, 255, 255, 0.1)'\n        }\n      }\n    },\n    MuiCard: {\n      styleOverrides: {\n        root: {\n          background: 'rgba(24, 24, 24, 0.8)',\n          backdropFilter: 'blur(10px)',\n          borderRadius: 12,\n          border: '1px solid rgba(255, 255, 255, 0.1)'\n        }\n      }\n    },\n    MuiAppBar: {\n      styleOverrides: {\n        root: {\n          background: 'rgba(12, 59, 46, 0.8)',\n          backdropFilter: 'blur(10px)',\n          boxShadow: '0 4px 20px rgba(0, 0, 0, 0.2)'\n        }\n      }\n    },\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          borderRadius: 8,\n          textTransform: 'none',\n          fontWeight: 500\n        },\n        contained: {\n          boxShadow: '0 4px 12px rgba(0, 0, 0, 0.2)',\n          backgroundColor: '#88d498',\n          '&:hover': {\n            backgroundColor: '#6bbb7b'\n          }\n        },\n        outlined: {\n          borderColor: '#88d498',\n          color: '#88d498',\n          '&:hover': {\n            borderColor: '#6bbb7b',\n            backgroundColor: 'rgba(136, 212, 152, 0.08)'\n          }\n        }\n      }\n    },\n    MuiTab: {\n      styleOverrides: {\n        root: {\n          textTransform: 'none',\n          fontWeight: 500,\n          '&.Mui-selected': {\n            color: '#88d498'\n          }\n        }\n      }\n    },\n    MuiTabs: {\n      styleOverrides: {\n        indicator: {\n          backgroundColor: '#88d498'\n        }\n      }\n    },\n    MuiStepIcon: {\n      styleOverrides: {\n        root: {\n          color: 'rgba(30, 30, 30, 0.8)',\n          '&.Mui-active': {\n            color: '#88d498'\n          },\n          '&.Mui-completed': {\n            color: '#6bbb7b'\n          }\n        }\n      }\n    }\n  }\n});\nconst UploadReport = () => {\n  _s();\n  var _userData$firstName;\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const navigate = useNavigate();\n  const {\n    skills,\n    updateSkillProgress\n  } = useSkills();\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [uploadedFile, setUploadedFile] = useState(null);\n  const [extractedText, setExtractedText] = useState(null);\n  const [generatedQuestions, setGeneratedQuestions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingMessage, setLoadingMessage] = useState('');\n  const [error, setError] = useState(null);\n  const [inputMethod, setInputMethod] = useState('file'); // 'file' or 'text'\n  const [pastedText, setPastedText] = useState('');\n  const [activeStep, setActiveStep] = useState(0);\n  const [apiKeyMissing, setApiKeyMissing] = useState(!process.env.REACT_APP_GEMINI_API_KEY);\n\n  // New state for tracking student answers and showing explanations\n  const [studentAnswers, setStudentAnswers] = useState({});\n  const [showExplanations, setShowExplanations] = useState({});\n  const [correctAnswers, setCorrectAnswers] = useState([]);\n  const [questionSkillMap, setQuestionSkillMap] = useState({});\n  const [showTreeGrowthBadge, setShowTreeGrowthBadge] = useState(false);\n  const [treeBadgeCount, setTreeBadgeCount] = useState(0);\n  const [userData, setUserData] = useState(null);\n  const [loadingUserData, setLoadingUserData] = useState(true);\n\n  // Group questions by topic for better organization\n  const questionsByTopic = React.useMemo(() => {\n    const grouped = {};\n    generatedQuestions.forEach(q => {\n      if (!grouped[q.topic]) {\n        grouped[q.topic] = [];\n      }\n      grouped[q.topic].push(q);\n    });\n    return grouped;\n  }, [generatedQuestions]);\n\n  // Fetch user data for personalization\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const {\n          data: {\n            user\n          }\n        } = await supabase.auth.getUser();\n        if (user) {\n          const {\n            data: onboardingData,\n            error\n          } = await supabase.from('user_onboarding').select('first_name, last_name').eq('user_id', user.id).single();\n          if (error) {\n            console.error(\"Error fetching user onboarding data:\", error);\n          } else if (onboardingData) {\n            setUserData({\n              firstName: onboardingData.first_name,\n              lastName: onboardingData.last_name\n            });\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching user session:\", error);\n      } finally {\n        setLoadingUserData(false);\n      }\n    };\n    fetchUserData();\n  }, []);\n\n  // Maps generated questions to skills\n  const mapQuestionsToSkills = useCallback(questions => {\n    // Create a mapping between question topics and skill categories\n    const topicToCategory = {\n      'Grammar': 'Standard English Conventions',\n      'Punctuation': 'Standard English Conventions',\n      'Sentence Structure': 'Standard English Conventions',\n      'Evidence': 'Expression of Ideas',\n      'Organization': 'Expression of Ideas',\n      'Vocabulary': 'Expression of Ideas',\n      'Algebra': 'Math',\n      'Geometry': 'Math',\n      'Data Analysis': 'Math'\n    };\n\n    // Generate a mapping between question IDs and skill IDs\n    const mapping = {};\n    questions.forEach(question => {\n      // Find matching skills from the skills context\n      const category = topicToCategory[question.topic] || question.topic;\n\n      // Find skills that match this category\n      const matchingSkills = skills.filter(s => s.category === category || s.subcategory === question.topic || s.name.toLowerCase().includes(question.topic.toLowerCase()));\n      if (matchingSkills.length > 0) {\n        // Pick a skill to associate with this question (preferably one that's not mastered yet)\n        const notYetMastered = matchingSkills.filter(s => !s.mastered);\n        const skillToUse = notYetMastered.length > 0 ? notYetMastered[Math.floor(Math.random() * notYetMastered.length)] : matchingSkills[Math.floor(Math.random() * matchingSkills.length)];\n        mapping[question.id] = skillToUse.id;\n      }\n    });\n    setQuestionSkillMap(mapping);\n  }, [skills]);\n\n  // Effect to map questions to skills when questions are generated\n  useEffect(() => {\n    if (generatedQuestions.length > 0) {\n      mapQuestionsToSkills(generatedQuestions);\n    }\n  }, [generatedQuestions, mapQuestionsToSkills]);\n  const handleDrawerToggle = () => {\n    setDrawerOpen(!drawerOpen);\n  };\n  const onDrop = useCallback(async acceptedFiles => {\n    if (acceptedFiles && acceptedFiles.length > 0) {\n      const file = acceptedFiles[0];\n      const validFileTypes = ['application/pdf', 'text/plain'];\n      if (!validFileTypes.includes(file.type)) {\n        setError('Invalid file type. Please upload a PDF or TXT file.');\n        setUploadedFile(null);\n        return;\n      }\n      setUploadedFile(file);\n      setError(null);\n      setExtractedText(null);\n      setGeneratedQuestions([]);\n      setIsLoading(true);\n      setActiveStep(1);\n      try {\n        const {\n          data: {\n            session\n          }\n        } = await supabase.auth.getSession();\n        if (!session) {\n          setError('No active session. Please log in again.');\n          setIsLoading(false);\n          return;\n        }\n\n        // Handle text files the same way as before\n        if (file.type === 'text/plain') {\n          setLoadingMessage('Reading text file content...');\n          const text = await file.text();\n          // Add realistic processing delay\n          await addProcessingDelay(2500);\n          setExtractedText(text);\n          setActiveStep(2);\n          setLoadingMessage('Analyzing report and generating personalized questions...');\n          await addProcessingDelay(15000);\n          const questions = await generateQuestionsFromMistakes(text);\n          setGeneratedQuestions(questions);\n          setActiveStep(3);\n        } else {\n          // For PDF files, now process directly with Gemini 1.5 Flash\n          setLoadingMessage('Processing PDF with Gemini 1.5 Flash...');\n\n          // We'll upload the file to Supabase for tracking/storage purposes\n          const {\n            storagePath\n          } = await uploadFileToSupabase(file, 'score-reports', {\n            publicAccess: false\n          });\n          console.log('File uploaded to Supabase:', {\n            storagePath\n          });\n\n          // Skip text extraction step and directly process the PDF with Gemini\n          await addProcessingDelay(3000);\n\n          // Skip the text extraction step for improved UI flow\n          setActiveStep(2);\n          setLoadingMessage('Analyzing PDF and generating personalized questions...');\n\n          // Generate questions directly from the PDF file using Gemini 2.0 Flash\n          await addProcessingDelay(15000);\n          const questions = await generateQuestionsFromMistakes(file);\n          setGeneratedQuestions(questions);\n          setActiveStep(3);\n        }\n      } catch (err) {\n        console.error(\"Error processing file:\", err);\n        setError(`Failed to process the file: ${err.message || 'Unknown error'}. Check console for details.`);\n      } finally {\n        setIsLoading(false);\n        setLoadingMessage('');\n      }\n    }\n  }, []);\n  const handleTextSubmit = async () => {\n    if (!pastedText.trim()) {\n      setError('Please paste some text before submitting.');\n      return;\n    }\n    setError(null);\n    setExtractedText(null);\n    setGeneratedQuestions([]);\n    setIsLoading(true);\n    setActiveStep(1);\n    try {\n      const {\n        data: {\n          session\n        }\n      } = await supabase.auth.getSession();\n      if (!session) {\n        setError('No active session. Please log in again.');\n        setIsLoading(false);\n        return;\n      }\n\n      // Process the pasted text with realistic delays\n      setLoadingMessage('Processing your text input...');\n      await addProcessingDelay(1800);\n      setExtractedText(pastedText);\n      setActiveStep(2);\n      setLoadingMessage('Analyzing report data and creating personalized questions...');\n      // Add realistic processing delay - increased to 15 seconds\n      await addProcessingDelay(15000);\n      const questions = await generateQuestionsFromMistakes(pastedText);\n      setGeneratedQuestions(questions);\n      setActiveStep(3);\n    } catch (err) {\n      console.error(\"Error processing text:\", err);\n      setError(`Failed to process text: ${err.message || 'Unknown error'}. Check console for details.`);\n    } finally {\n      setIsLoading(false);\n      setLoadingMessage('');\n    }\n  };\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'application/pdf': ['.pdf'],\n      'text/plain': ['.txt']\n    },\n    multiple: false,\n    disabled: isLoading || inputMethod === 'text'\n  });\n  const handleInputMethodChange = (_event, newValue) => {\n    setInputMethod(newValue);\n    // Reset state when changing methods\n    setError(null);\n    setUploadedFile(null);\n    setPastedText('');\n    setExtractedText(null);\n    setGeneratedQuestions([]);\n    setActiveStep(0);\n  };\n\n  // Function to determine difficulty level color\n  const getDifficultyColor = difficulty => {\n    switch (difficulty === null || difficulty === void 0 ? void 0 : difficulty.toLowerCase()) {\n      case 'easy':\n        return theme.palette.success.main;\n      case 'medium':\n        return theme.palette.warning.main;\n      case 'hard':\n        return theme.palette.error.main;\n      default:\n        return theme.palette.info.main;\n    }\n  };\n\n  // Handle student answer selection\n  const handleAnswerSelect = (questionId, answer) => {\n    setStudentAnswers(prev => ({\n      ...prev,\n      [questionId]: answer\n    }));\n  };\n\n  // Check if an answer is correct and reveal explanation\n  const checkAnswer = questionId => {\n    setShowExplanations(prev => ({\n      ...prev,\n      [questionId]: true\n    }));\n    const question = generatedQuestions.find(q => q.id === questionId);\n    if (question && isAnswerCorrect(question, studentAnswers[questionId])) {\n      // If correct and not already in correctAnswers, add it\n      if (!correctAnswers.includes(questionId)) {\n        setCorrectAnswers(prev => [...prev, questionId]);\n\n        // Update the associated skill's progress\n        const skillId = questionSkillMap[questionId];\n        if (skillId) {\n          // Find current skill to determine new progress level\n          const skill = skills.find(s => s.id === skillId);\n          if (skill) {\n            // Increase skill mastery level by 15-25% for each correct answer\n            const progressIncrease = Math.floor(Math.random() * 11) + 15; // 15-25\n            const newProgress = Math.min(100, skill.masteryLevel + progressIncrease);\n\n            // Ensure we call updateSkillProgress with the correct parameters\n            updateSkillProgress(skillId, newProgress);\n            console.log(`Skill ${skillId} updated: ${skill.masteryLevel} -> ${newProgress}`);\n\n            // Show growth badge and increment counter\n            setShowTreeGrowthBadge(true);\n            setTreeBadgeCount(prev => prev + 1);\n\n            // Hide badge after a few seconds\n            setTimeout(() => {\n              setShowTreeGrowthBadge(false);\n            }, 3000);\n          }\n        }\n      }\n    }\n  };\n\n  // Reset a question to try again\n  const resetQuestion = questionId => {\n    const newAnswers = {\n      ...studentAnswers\n    };\n    delete newAnswers[questionId];\n    setStudentAnswers(newAnswers);\n    setShowExplanations(prev => ({\n      ...prev,\n      [questionId]: false\n    }));\n\n    // If it was a correct answer, remove it from correctAnswers\n    if (correctAnswers.includes(questionId)) {\n      setCorrectAnswers(prev => prev.filter(id => id !== questionId));\n    }\n  };\n\n  // Function to determine if a student's answer is correct\n  const isAnswerCorrect = (question, studentAnswer) => {\n    return studentAnswer === question.answer;\n  };\n\n  // Handle navigate to dashboard to see tree growth\n  const handleViewTreeGrowth = () => {\n    navigate('/dashboard', {\n      state: {\n        fromUpload: true,\n        correctAnswers: correctAnswers.length\n      }\n    });\n  };\n\n  // Background style with animation to match onboarding\n  const getBackgroundStyle = () => {\n    return {\n      background: 'linear-gradient(135deg, #121212 0%, #1e3a34 100%)',\n      backgroundSize: '200% 200%',\n      animation: 'gradient 15s ease infinite',\n      minHeight: '100vh',\n      transition: 'background 0.5s ease-in-out',\n      '@keyframes gradient': {\n        '0%': {\n          backgroundPosition: '0% 50%'\n        },\n        '50%': {\n          backgroundPosition: '100% 50%'\n        },\n        '100%': {\n          backgroundPosition: '0% 50%'\n        }\n      }\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkTheme,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: getBackgroundStyle(),\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"inherit\",\n            \"aria-label\": \"open drawer\",\n            edge: \"start\",\n            onClick: handleDrawerToggle,\n            sx: {\n              mr: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"div\",\n            sx: {\n              flexGrow: 1,\n              letterSpacing: '-0.01em'\n            },\n            children: \"Upload Score Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              bgcolor: 'primary.main',\n              boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)'\n            },\n            children: loadingUserData ? '' : (userData === null || userData === void 0 ? void 0 : (_userData$firstName = userData.firstName) === null || _userData$firstName === void 0 ? void 0 : _userData$firstName.charAt(0)) || 'U'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 13\n          }, this), correctAnswers.length > 0 && /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Your bonsai tree is growing! Click to view\",\n            children: /*#__PURE__*/_jsxDEV(Badge, {\n              badgeContent: treeBadgeCount,\n              color: \"success\",\n              sx: {\n                mr: 2,\n                opacity: showTreeGrowthBadge ? 1 : 0.8,\n                transition: 'all 0.3s ease'\n              },\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"inherit\",\n                onClick: handleViewTreeGrowth,\n                sx: {\n                  animation: showTreeGrowthBadge ? 'treeGrow 1s ease-in-out' : 'none',\n                  '@keyframes treeGrow': {\n                    '0%': {\n                      transform: 'scale(1)'\n                    },\n                    '50%': {\n                      transform: 'scale(1.3)'\n                    },\n                    '100%': {\n                      transform: 'scale(1)'\n                    }\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(EmojiNatureIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 665,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 653,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        sx: {\n          py: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(FadeIn, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            gutterBottom: true,\n            align: \"center\",\n            sx: {\n              color: 'rgba(255, 255, 255, 0.87)',\n              textShadow: '0 2px 4px rgba(0,0,0,0.3)',\n              fontWeight: 'bold',\n              mb: 2\n            },\n            children: \"Upload Your SAT Practice Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            paragraph: true,\n            align: \"center\",\n            sx: {\n              color: 'rgba(255, 255, 255, 0.7)',\n              mb: 4\n            },\n            children: \"Upload your report or paste text to get personalized lessons and practice questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 11\n        }, this), apiKeyMissing && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"warning\",\n          sx: {\n            mb: 3,\n            background: 'rgba(237, 108, 2, 0.15)',\n            color: 'rgba(255, 255, 255, 0.87)',\n            '& .MuiAlert-icon': {\n              color: 'rgba(255, 167, 38, 0.9)'\n            },\n            borderRadius: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            fontWeight: \"bold\",\n            children: \"API Key Missing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: \"The application is running in limited mode. Some advanced features may not be available. Please contact the administrator for full functionality.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GlassCard, {\n          sx: {\n            p: {\n              xs: 3,\n              md: 4\n            },\n            mb: 4,\n            backdropFilter: 'blur(10px)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Stepper, {\n            activeStep: activeStep,\n            alternativeLabel: true,\n            sx: {\n              mb: 4,\n              display: {\n                xs: 'none',\n                sm: 'flex'\n              },\n              '& .MuiStepLabel-label': {\n                color: 'rgba(255, 255, 255, 0.6)',\n                mt: 1\n              },\n              '& .MuiStepLabel-active': {\n                color: 'rgba(255, 255, 255, 0.87)'\n              },\n              '& .MuiStepIcon-root': {\n                color: 'rgba(30, 30, 30, 0.8)'\n              },\n              '& .MuiStepIcon-active': {\n                color: '#88d498'\n              },\n              '& .MuiStepIcon-completed': {\n                color: 'rgba(136, 212, 152, 0.7)'\n              },\n              '& .MuiStepConnector-line': {\n                borderColor: 'rgba(255, 255, 255, 0.12)'\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(Step, {\n              children: /*#__PURE__*/_jsxDEV(StepLabel, {\n                children: \"Upload Report\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 734,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Step, {\n              children: /*#__PURE__*/_jsxDEV(StepLabel, {\n                children: \"Process Content\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 737,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 736,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Step, {\n              children: /*#__PURE__*/_jsxDEV(StepLabel, {\n                children: \"Extract Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 740,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 739,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Step, {\n              children: /*#__PURE__*/_jsxDEV(StepLabel, {\n                children: \"Generate Questions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 743,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 4,\n              display: {\n                xs: 'block',\n                sm: 'none'\n              },\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                color: 'rgba(255, 255, 255, 0.7)'\n              },\n              children: [\"Step \", activeStep + 1, \" of 4: \", ['Upload Report', 'Process Content', 'Extract Information', 'Generate Questions'][activeStep]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 749,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 748,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%',\n              mb: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(Tabs, {\n              value: inputMethod,\n              onChange: handleInputMethodChange,\n              centered: true,\n              sx: {\n                '& .MuiTabs-indicator': {\n                  backgroundColor: '#88d498',\n                  height: 3\n                },\n                '& .MuiTab-root': {\n                  color: 'rgba(255, 255, 255, 0.6)',\n                  fontSize: '1rem',\n                  '&.Mui-selected': {\n                    color: 'rgba(255, 255, 255, 0.87)'\n                  }\n                }\n              },\n              variant: isMobile ? \"fullWidth\" : \"standard\",\n              children: [/*#__PURE__*/_jsxDEV(Tab, {\n                value: \"file\",\n                label: \"Upload File\",\n                icon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 777,\n                  columnNumber: 25\n                }, this),\n                iconPosition: \"start\",\n                disabled: isLoading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 774,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                value: \"text\",\n                label: \"Paste Text\",\n                icon: /*#__PURE__*/_jsxDEV(TextFieldsIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 784,\n                  columnNumber: 25\n                }, this),\n                iconPosition: \"start\",\n                disabled: isLoading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 781,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 13\n          }, this), !isLoading && activeStep < 3 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: inputMethod === 'file' ? /*#__PURE__*/_jsxDEV(Box, {\n              ...getRootProps(),\n              sx: {\n                p: 4,\n                textAlign: 'center',\n                border: '2px dashed',\n                borderColor: isDragActive ? '#88d498' : 'rgba(255, 255, 255, 0.23)',\n                borderRadius: 2,\n                backgroundColor: isDragActive ? 'rgba(26, 147, 111, 0.08)' : 'rgba(18, 18, 18, 0.5)',\n                backdropFilter: 'blur(8px)',\n                cursor: 'pointer',\n                minHeight: 200,\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                justifyContent: 'center',\n                transition: 'all 0.3s ease',\n                overflow: 'hidden',\n                position: 'relative',\n                '&:hover': {\n                  borderColor: '#88d498',\n                  backgroundColor: 'rgba(26, 147, 111, 0.05)'\n                },\n                '&::before': {\n                  content: '\"\"',\n                  position: 'absolute',\n                  top: 0,\n                  left: 0,\n                  right: 0,\n                  bottom: 0,\n                  zIndex: -1,\n                  opacity: 0.1,\n                  background: 'linear-gradient(135deg, rgba(136, 212, 152, 0.2) 0%, rgba(12, 59, 46, 0.2) 100%)',\n                  animation: 'gradientBackground 15s ease infinite',\n                  '@keyframes gradientBackground': {\n                    '0%': {\n                      backgroundPosition: '0% 50%'\n                    },\n                    '50%': {\n                      backgroundPosition: '100% 50%'\n                    },\n                    '100%': {\n                      backgroundPosition: '0% 50%'\n                    }\n                  }\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                ...getInputProps()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 836,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  position: 'relative',\n                  zIndex: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(CloudUploadIcon, {\n                  sx: {\n                    fontSize: 60,\n                    color: '#88d498',\n                    mb: 1,\n                    filter: 'drop-shadow(0 4px 6px rgba(0,0,0,0.2))',\n                    animation: isDragActive ? 'pulse 1.5s infinite' : 'none',\n                    '@keyframes pulse': {\n                      '0%': {\n                        transform: 'scale(1)'\n                      },\n                      '50%': {\n                        transform: 'scale(1.1)'\n                      },\n                      '100%': {\n                        transform: 'scale(1)'\n                      }\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 844,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(PictureAsPdfIcon, {\n                  sx: {\n                    fontSize: 40,\n                    color: 'rgba(255, 255, 255, 0.6)',\n                    mb: 2,\n                    filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.1))'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 856,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 837,\n                columnNumber: 21\n              }, this), isDragActive ? /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                sx: {\n                  color: '#88d498',\n                  fontWeight: 'bold',\n                  textShadow: '0 2px 4px rgba(0,0,0,0.2)'\n                },\n                children: \"Drop the file here ...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 864,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                sx: {\n                  color: 'rgba(255, 255, 255, 0.87)',\n                  fontWeight: 'medium',\n                  textShadow: '0 2px 4px rgba(0,0,0,0.2)'\n                },\n                children: \"Drag 'n' drop a file here, or click to select file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 872,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  color: 'rgba(255, 255, 255, 0.6)',\n                  mt: 1\n                },\n                children: \"(PDF files are now processed directly with Gemini 1.5 Flash)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 880,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  color: 'rgba(255, 255, 255, 0.6)',\n                  mt: 0.5\n                },\n                children: \"(Max file size: 10MB. Supported formats: PDF, TXT)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 883,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 794,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                sx: {\n                  color: 'rgba(255, 255, 255, 0.87)',\n                  fontWeight: 'medium',\n                  mb: 2\n                },\n                children: \"Paste Your SAT Report Text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 889,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                multiline: true,\n                rows: 10,\n                variant: \"outlined\",\n                placeholder: \"Paste the content of your SAT report here...\",\n                value: pastedText,\n                onChange: e => setPastedText(e.target.value),\n                disabled: isLoading,\n                sx: {\n                  mb: 3,\n                  '& .MuiOutlinedInput-root': {\n                    backgroundColor: 'rgba(18, 18, 18, 0.5)',\n                    backdropFilter: 'blur(8px)',\n                    borderRadius: 2,\n                    '&:hover .MuiOutlinedInput-notchedOutline': {\n                      borderColor: '#88d498'\n                    },\n                    '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                      borderColor: '#88d498',\n                      borderWidth: 2\n                    }\n                  },\n                  '& .MuiInputBase-input': {\n                    color: 'rgba(255, 255, 255, 0.87)'\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 896,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(GradientButton, {\n                variant: \"contained\",\n                gradient: \"primary\",\n                onClick: handleTextSubmit,\n                disabled: !pastedText.trim() || isLoading,\n                fullWidth: true,\n                size: \"large\",\n                sx: {\n                  py: 1.5\n                },\n                children: \"Process Text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 924,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 888,\n              columnNumber: 19\n            }, this)\n          }, void 0, false), error && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            sx: {\n              mt: 2,\n              backgroundColor: 'rgba(211, 47, 47, 0.15)',\n              color: 'rgba(255, 255, 255, 0.87)',\n              '& .MuiAlert-icon': {\n                color: 'rgba(244, 67, 54, 0.9)'\n              },\n              borderRadius: 2\n            },\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 941,\n            columnNumber: 15\n          }, this), uploadedFile && inputMethod === 'file' && !error && !isLoading && activeStep < 3 && /*#__PURE__*/_jsxDEV(ScaleIn, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 3,\n                mt: 3,\n                backgroundColor: 'rgba(18, 18, 18, 0.7)',\n                backdropFilter: 'blur(10px)',\n                borderRadius: 2,\n                border: '1px solid rgba(136, 212, 152, 0.2)',\n                boxShadow: '0 4px 20px rgba(0, 0, 0, 0.15)'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                sx: {\n                  color: 'rgba(255, 255, 255, 0.87)',\n                  fontWeight: 'medium',\n                  mb: 2\n                },\n                children: \"Uploaded File:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 968,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  mt: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(PictureAsPdfIcon, {\n                  sx: {\n                    color: '#88d498',\n                    mr: 1,\n                    filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.2))'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 976,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    color: 'rgba(255, 255, 255, 0.8)'\n                  },\n                  children: [uploadedFile.name, \" (\", Math.round(uploadedFile.size / 1024), \" KB)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 977,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 975,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'flex-end',\n                  mt: 3\n                },\n                children: /*#__PURE__*/_jsxDEV(GradientButton, {\n                  variant: \"contained\",\n                  gradient: \"primary\",\n                  onClick: () => {\n                    onDrop([uploadedFile]);\n                  },\n                  size: \"medium\",\n                  children: \"Process File\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 982,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 981,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 959,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 958,\n            columnNumber: 15\n          }, this), isLoading && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center',\n              my: 6,\n              position: 'relative'\n            },\n            children: /*#__PURE__*/_jsxDEV(FloatAnimation, {\n              children: /*#__PURE__*/_jsxDEV(LoadingAnimation, {\n                message: loadingMessage || 'Processing...',\n                width: 280,\n                height: 280\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1000,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 999,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 998,\n            columnNumber: 15\n          }, this), extractedText && !isLoading && activeStep === 2 && /*#__PURE__*/_jsxDEV(ScaleIn, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 4,\n                mt: 4,\n                backgroundColor: 'rgba(18, 18, 18, 0.7)',\n                backdropFilter: 'blur(10px)',\n                borderRadius: 2,\n                border: '1px solid rgba(136, 212, 152, 0.2)',\n                boxShadow: '0 4px 20px rgba(0, 0, 0, 0.15)'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                sx: {\n                  color: 'rgba(255, 255, 255, 0.87)',\n                  fontWeight: 'medium',\n                  mb: 2\n                },\n                children: \"Extracted Text (Preview):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1020,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  maxHeight: 150,\n                  overflowY: 'auto',\n                  whiteSpace: 'pre-wrap',\n                  backgroundColor: 'rgba(12, 12, 12, 0.9)',\n                  p: 3,\n                  borderRadius: 2,\n                  border: '1px solid rgba(255, 255, 255, 0.1)'\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    color: 'rgba(255, 255, 255, 0.8)'\n                  },\n                  children: extractedText\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1036,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1027,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1011,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1010,\n            columnNumber: 15\n          }, this), generatedQuestions.length > 0 && !isLoading && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(FadeIn, {\n              children: /*#__PURE__*/_jsxDEV(GlassCard, {\n                sx: {\n                  p: 3,\n                  borderRadius: 2,\n                  mb: 4,\n                  backdropFilter: 'blur(10px)',\n                  boxShadow: '0 8px 32px rgba(0, 0, 0, 0.3)',\n                  border: '1px solid rgba(136, 212, 152, 0.2)'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    mb: 3\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(SchoolIcon, {\n                    sx: {\n                      fontSize: 32,\n                      color: '#88d498',\n                      mr: 1.5,\n                      filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.2))'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1056,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h5\",\n                    sx: {\n                      color: 'rgba(255, 255, 255, 0.87)',\n                      fontWeight: 'bold'\n                    },\n                    children: \"Your Personalized Practice Questions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1057,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1055,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  paragraph: true,\n                  sx: {\n                    color: 'rgba(255, 255, 255, 0.7)'\n                  },\n                  children: [\"Based on your test results, we've created \", generatedQuestions.length, \" personalized practice questions covering different topics to help you improve your SAT score.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1062,\n                  columnNumber: 21\n                }, this), correctAnswers.length > 0 && /*#__PURE__*/_jsxDEV(Alert, {\n                  severity: \"success\",\n                  icon: /*#__PURE__*/_jsxDEV(LocalFloristIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1070,\n                    columnNumber: 31\n                  }, this),\n                  sx: {\n                    mb: 3,\n                    display: 'flex',\n                    alignItems: 'center',\n                    background: 'rgba(46, 125, 50, 0.15)',\n                    color: 'rgba(255, 255, 255, 0.87)',\n                    '& .MuiAlert-icon': {\n                      color: 'rgba(129, 199, 132, 0.9)'\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'space-between',\n                      width: '100%'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      sx: textStyles.body,\n                      children: [\"You've correctly answered \", correctAnswers.length, \" question\", correctAnswers.length !== 1 ? 's' : '', \"! Your Bonsai Tree is growing with each correct answer.\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1083,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(GradientButton, {\n                      variant: \"outlined\",\n                      size: \"small\",\n                      gradient: \"success\",\n                      startIcon: /*#__PURE__*/_jsxDEV(EmojiNatureIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1091,\n                        columnNumber: 40\n                      }, this),\n                      onClick: handleViewTreeGrowth,\n                      sx: {\n                        ml: 2\n                      },\n                      children: \"View Growth\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1087,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1082,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1068,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  sx: {\n                    mb: 3,\n                    borderColor: 'rgba(255, 255, 255, 0.1)'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1101,\n                  columnNumber: 21\n                }, this), Object.entries(questionsByTopic).map(([topic, questions], topicIndex) => /*#__PURE__*/_jsxDEV(Accordion, {\n                  defaultExpanded: topicIndex === 0,\n                  sx: {\n                    mb: 2,\n                    boxShadow: 'none',\n                    background: 'rgba(30, 30, 30, 0.4)',\n                    border: '1px solid rgba(255, 255, 255, 0.1)',\n                    borderRadius: '4px !important',\n                    '&:before': {\n                      display: 'none'\n                    },\n                    '&.Mui-expanded': {\n                      margin: '0 0 16px 0'\n                    }\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n                    expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {\n                      sx: {\n                        color: 'rgba(255, 255, 255, 0.6)'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1122,\n                      columnNumber: 39\n                    }, this),\n                    sx: {\n                      backgroundColor: 'rgba(18, 18, 18, 0.6)',\n                      borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n                      borderRadius: '4px',\n                      '&.Mui-expanded': {\n                        borderBottomLeftRadius: 0,\n                        borderBottomRightRadius: 0\n                      }\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        alignItems: 'center',\n                        width: '100%',\n                        justifyContent: 'space-between'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h6\",\n                        sx: {\n                          ...textStyles.heading,\n                          fontWeight: 'bold'\n                        },\n                        children: [topic, \" (\", questions.length, \")\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1134,\n                        columnNumber: 29\n                      }, this), questions.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          display: 'flex',\n                          alignItems: 'center'\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          sx: {\n                            ...textStyles.secondary,\n                            mr: 1\n                          },\n                          children: [questions.filter(q => correctAnswers.includes(q.id)).length, \"/\", questions.length, \" Correct\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1141,\n                          columnNumber: 33\n                        }, this), questions.some(q => correctAnswers.includes(q.id)) && /*#__PURE__*/_jsxDEV(LocalFloristIcon, {\n                          fontSize: \"small\",\n                          sx: {\n                            color: 'rgba(129, 199, 132, 0.9)',\n                            opacity: questions.every(q => correctAnswers.includes(q.id)) ? 1 : 0.6,\n                            animation: showTreeGrowthBadge ? 'pulse 1.5s infinite' : 'none',\n                            '@keyframes pulse': {\n                              '0%': {\n                                transform: 'scale(1)'\n                              },\n                              '50%': {\n                                transform: 'scale(1.2)'\n                              },\n                              '100%': {\n                                transform: 'scale(1)'\n                              }\n                            }\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1145,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1140,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1133,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1121,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n                    sx: {\n                      p: 0\n                    },\n                    children: questions.map((question, qIndex) => {\n                      var _skills$find;\n                      return /*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          mb: 2,\n                          m: 2,\n                          p: 3,\n                          borderRadius: 2,\n                          background: 'rgba(24, 24, 24, 0.9)',\n                          border: '1px solid rgba(255, 255, 255, 0.1)'\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Box, {\n                          sx: {\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                            alignItems: 'center',\n                            mb: 2\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(Typography, {\n                            variant: \"subtitle1\",\n                            sx: {\n                              ...textStyles.heading,\n                              fontWeight: 'bold'\n                            },\n                            children: [\"Question \", topicIndex + 1, \".\", qIndex + 1, questionSkillMap[question.id] && /*#__PURE__*/_jsxDEV(Tooltip, {\n                              title: `Answering this correctly will help grow your \"${(_skills$find = skills.find(s => s.id === questionSkillMap[question.id])) === null || _skills$find === void 0 ? void 0 : _skills$find.name}\" skill`,\n                              arrow: true,\n                              children: /*#__PURE__*/_jsxDEV(Typography, {\n                                component: \"span\",\n                                variant: \"body2\",\n                                sx: {\n                                  ml: 1,\n                                  color: 'rgba(255, 255, 255, 0.6)',\n                                  cursor: 'help',\n                                  textDecoration: 'underline',\n                                  textDecorationStyle: 'dotted'\n                                },\n                                children: \"(Improves a skill)\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1186,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1182,\n                              columnNumber: 37\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1177,\n                            columnNumber: 33\n                          }, this), question.difficulty && /*#__PURE__*/_jsxDEV(Chip, {\n                            label: question.difficulty,\n                            size: \"small\",\n                            sx: {\n                              bgcolor: getDifficultyColor(question.difficulty),\n                              color: 'white',\n                              fontWeight: 'bold'\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1203,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1176,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body1\",\n                          paragraph: true,\n                          sx: {\n                            ...textStyles.body,\n                            whiteSpace: 'pre-wrap'\n                          },\n                          children: question.text\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1215,\n                          columnNumber: 31\n                        }, this), question.options && /*#__PURE__*/_jsxDEV(Box, {\n                          sx: {\n                            ml: 2,\n                            mb: 2\n                          },\n                          children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n                            value: studentAnswers[question.id] || '',\n                            onChange: e => handleAnswerSelect(question.id, e.target.value),\n                            children: question.options.map((opt, i) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                              value: String.fromCharCode(65 + i) // A, B, C, D...\n                              ,\n                              control: /*#__PURE__*/_jsxDEV(Radio, {\n                                sx: {\n                                  color: 'rgba(255, 255, 255, 0.6)',\n                                  '&.Mui-checked': {\n                                    color: 'rgba(136, 212, 152, 0.9)'\n                                  }\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1230,\n                                columnNumber: 43\n                              }, this),\n                              label: /*#__PURE__*/_jsxDEV(Box, {\n                                sx: {\n                                  display: 'flex',\n                                  alignItems: 'center',\n                                  color: showExplanations[question.id] && question.answer === String.fromCharCode(65 + i) ? 'rgba(129, 199, 132, 0.9)' : 'rgba(255, 255, 255, 0.87)'\n                                },\n                                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                                  variant: \"body1\",\n                                  children: [String.fromCharCode(65 + i), \". \", opt]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1247,\n                                  columnNumber: 45\n                                }, this), showExplanations[question.id] && question.answer === String.fromCharCode(65 + i) && /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                                  sx: {\n                                    ml: .5,\n                                    color: 'rgba(129, 199, 132, 0.9)'\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1252,\n                                  columnNumber: 47\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1240,\n                                columnNumber: 43\n                              }, this),\n                              sx: {\n                                p: 1.5,\n                                mb: 1,\n                                borderRadius: 1,\n                                border: '1px solid',\n                                borderColor: 'rgba(255, 255, 255, 0.1)',\n                                backgroundColor: showExplanations[question.id] && question.answer === String.fromCharCode(65 + i) ? 'rgba(76, 175, 80, 0.08)' : 'rgba(30, 30, 30, 0.3)',\n                                transition: 'all 0.2s ease',\n                                '&:hover': {\n                                  backgroundColor: !showExplanations[question.id] ? 'rgba(30, 30, 30, 0.6)' : question.answer === String.fromCharCode(65 + i) ? 'rgba(76, 175, 80, 0.08)' : 'rgba(30, 30, 30, 0.3)'\n                                }\n                              },\n                              disabled: showExplanations[question.id]\n                            }, i, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1226,\n                              columnNumber: 39\n                            }, this))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1221,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1220,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(Box, {\n                          sx: {\n                            display: 'flex',\n                            justifyContent: 'flex-end',\n                            mt: 2\n                          },\n                          children: [studentAnswers[question.id] && !showExplanations[question.id] && /*#__PURE__*/_jsxDEV(GradientButton, {\n                            variant: \"contained\",\n                            gradient: \"primary\",\n                            onClick: () => checkAnswer(question.id),\n                            sx: {\n                              mr: 1\n                            },\n                            children: \"Check Answer\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1282,\n                            columnNumber: 35\n                          }, this), showExplanations[question.id] && /*#__PURE__*/_jsxDEV(GradientButton, {\n                            variant: \"outlined\",\n                            gradient: \"primary\",\n                            onClick: () => resetQuestion(question.id),\n                            children: \"Try Again\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1292,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1280,\n                          columnNumber: 31\n                        }, this), showExplanations[question.id] && /*#__PURE__*/_jsxDEV(Fade, {\n                          in: showExplanations[question.id],\n                          timeout: 500,\n                          children: /*#__PURE__*/_jsxDEV(Box, {\n                            children: [/*#__PURE__*/_jsxDEV(Box, {\n                              sx: {\n                                display: 'flex',\n                                alignItems: 'center',\n                                mt: 2,\n                                mb: 1\n                              },\n                              children: isAnswerCorrect(question, studentAnswers[question.id]) ? /*#__PURE__*/_jsxDEV(Alert, {\n                                severity: \"success\",\n                                icon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                                  fontSize: \"inherit\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1309,\n                                  columnNumber: 49\n                                }, this),\n                                sx: {\n                                  width: '100%',\n                                  backgroundColor: 'rgba(46, 125, 50, 0.15)',\n                                  color: 'rgba(255, 255, 255, 0.87)',\n                                  '& .MuiAlert-icon': {\n                                    color: 'rgba(129, 199, 132, 0.9)'\n                                  }\n                                },\n                                children: /*#__PURE__*/_jsxDEV(Typography, {\n                                  variant: \"body1\",\n                                  fontWeight: \"bold\",\n                                  children: \"Correct! Well done.\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1319,\n                                  columnNumber: 43\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1307,\n                                columnNumber: 41\n                              }, this) : /*#__PURE__*/_jsxDEV(Alert, {\n                                severity: \"error\",\n                                icon: /*#__PURE__*/_jsxDEV(CancelIcon, {\n                                  fontSize: \"inherit\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1326,\n                                  columnNumber: 49\n                                }, this),\n                                sx: {\n                                  width: '100%',\n                                  backgroundColor: 'rgba(211, 47, 47, 0.15)',\n                                  color: 'rgba(255, 255, 255, 0.87)',\n                                  '& .MuiAlert-icon': {\n                                    color: 'rgba(244, 67, 54, 0.9)'\n                                  }\n                                },\n                                children: /*#__PURE__*/_jsxDEV(Typography, {\n                                  variant: \"body1\",\n                                  fontWeight: \"bold\",\n                                  children: [\"Incorrect. The correct answer is \", question.answer, \".\"]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1336,\n                                  columnNumber: 43\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1324,\n                                columnNumber: 41\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1305,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(Box, {\n                              sx: {\n                                mt: 2,\n                                p: 2,\n                                bgcolor: 'rgba(18, 18, 18, 0.8)',\n                                borderRadius: 1.5,\n                                border: '1px solid rgba(136, 212, 152, 0.2)',\n                                position: 'relative',\n                                '&::before': {\n                                  content: '\"\"',\n                                  position: 'absolute',\n                                  top: 0,\n                                  left: 0,\n                                  width: '4px',\n                                  height: '100%',\n                                  backgroundColor: 'rgba(136, 212, 152, 0.9)',\n                                  borderTopLeftRadius: 4,\n                                  borderBottomLeftRadius: 4\n                                }\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                                variant: \"subtitle2\",\n                                sx: {\n                                  fontWeight: 'bold',\n                                  ...textStyles.heading,\n                                  mb: 0.5,\n                                  pl: 1\n                                },\n                                children: \"Explanation:\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1362,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                                variant: \"body2\",\n                                sx: {\n                                  ...textStyles.body,\n                                  whiteSpace: 'pre-wrap',\n                                  pl: 1\n                                },\n                                children: question.explanation\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1365,\n                                columnNumber: 39\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1343,\n                              columnNumber: 37\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1304,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1303,\n                          columnNumber: 33\n                        }, this)]\n                      }, question.id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1165,\n                        columnNumber: 29\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1163,\n                    columnNumber: 25\n                  }, this)]\n                }, topicIndex, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1104,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1047,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1046,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 4,\n                display: 'flex',\n                justifyContent: 'center',\n                gap: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(GradientButton, {\n                onClick: handleViewTreeGrowth,\n                variant: \"outlined\",\n                gradient: \"success\",\n                size: \"large\",\n                startIcon: /*#__PURE__*/_jsxDEV(EmojiNatureIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1386,\n                  columnNumber: 32\n                }, this),\n                children: \"View Your Bonsai Tree\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1381,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(GradientButton, {\n                variant: \"contained\",\n                gradient: \"primary\",\n                size: \"large\",\n                onClick: () => {\n                  setActiveStep(0);\n                  setGeneratedQuestions([]);\n                  setExtractedText(null);\n                  setInputMethod('file');\n                  setUploadedFile(null);\n                  setPastedText('');\n                  setStudentAnswers({});\n                  setShowExplanations({});\n                  setCorrectAnswers([]);\n                  setQuestionSkillMap({});\n                  setTreeBadgeCount(0);\n                },\n                children: \"Upload Another Report\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1390,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1380,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1045,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 620,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadReport, \"/xbqoP4lrKikaR+AxJCXnbQWCFY=\", false, function () {\n  return [useTheme, useMediaQuery, useNavigate, useSkills, useDropzone];\n});\n_c = UploadReport;\nexport default UploadReport;\nvar _c;\n$RefreshReg$(_c, \"UploadReport\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","useNavigate","Box","Container","Typography","AppBar","Toolbar","IconButton","Alert","Tabs","Tab","TextField","Divider","Chip","Stepper","Step","StepLabel","useTheme","useMediaQuery","Accordion","AccordionSummary","AccordionDetails","RadioGroup","Radio","FormControlLabel","Fade","Badge","Tooltip","Avatar","createTheme","ThemeProvider","MenuIcon","CloudUploadIcon","TextFieldsIcon","SchoolIcon","ExpandMoreIcon","CheckCircleIcon","CancelIcon","LocalFloristIcon","EmojiNatureIcon","PictureAsPdfIcon","useDropzone","uploadFileToSupabase","generateQuestionsFromMistakes","supabase","useSkills","LoadingAnimation","GlassCard","GradientButton","FadeIn","ScaleIn","FloatAnimation","jsxDEV","_jsxDEV","Fragment","_Fragment","addProcessingDelay","ms","Promise","resolve","setTimeout","textStyles","heading","color","textShadow","subheading","opacity","body","label","fontWeight","secondary","disabled","accent","darkTheme","palette","mode","primary","main","background","paper","default","text","typography","fontFamily","h4","h6","components","MuiInputBase","styleOverrides","input","root","backgroundColor","MuiOutlinedInput","borderColor","notchedOutline","MuiFormLabel","MuiPaper","backgroundImage","backdropFilter","borderRadius","border","MuiCard","MuiAppBar","boxShadow","MuiButton","textTransform","contained","outlined","MuiTab","MuiTabs","indicator","MuiStepIcon","UploadReport","_s","_userData$firstName","theme","isMobile","breakpoints","down","navigate","skills","updateSkillProgress","drawerOpen","setDrawerOpen","uploadedFile","setUploadedFile","extractedText","setExtractedText","generatedQuestions","setGeneratedQuestions","isLoading","setIsLoading","loadingMessage","setLoadingMessage","error","setError","inputMethod","setInputMethod","pastedText","setPastedText","activeStep","setActiveStep","apiKeyMissing","setApiKeyMissing","process","env","REACT_APP_GEMINI_API_KEY","studentAnswers","setStudentAnswers","showExplanations","setShowExplanations","correctAnswers","setCorrectAnswers","questionSkillMap","setQuestionSkillMap","showTreeGrowthBadge","setShowTreeGrowthBadge","treeBadgeCount","setTreeBadgeCount","userData","setUserData","loadingUserData","setLoadingUserData","questionsByTopic","useMemo","grouped","forEach","q","topic","push","fetchUserData","data","user","auth","getUser","onboardingData","from","select","eq","id","single","console","firstName","first_name","lastName","last_name","mapQuestionsToSkills","questions","topicToCategory","mapping","question","category","matchingSkills","filter","s","subcategory","name","toLowerCase","includes","length","notYetMastered","mastered","skillToUse","Math","floor","random","handleDrawerToggle","onDrop","acceptedFiles","file","validFileTypes","type","session","getSession","storagePath","publicAccess","log","err","message","handleTextSubmit","trim","getRootProps","getInputProps","isDragActive","accept","multiple","handleInputMethodChange","_event","newValue","getDifficultyColor","difficulty","success","warning","info","handleAnswerSelect","questionId","answer","prev","checkAnswer","find","isAnswerCorrect","skillId","skill","progressIncrease","newProgress","min","masteryLevel","resetQuestion","newAnswers","studentAnswer","handleViewTreeGrowth","state","fromUpload","getBackgroundStyle","backgroundSize","animation","minHeight","transition","backgroundPosition","children","sx","position","edge","onClick","mr","fileName","_jsxFileName","lineNumber","columnNumber","variant","component","flexGrow","letterSpacing","bgcolor","charAt","title","badgeContent","transform","maxWidth","py","gutterBottom","align","mb","paragraph","severity","p","xs","md","alternativeLabel","display","sm","mt","textAlign","width","value","onChange","centered","height","fontSize","icon","iconPosition","cursor","flexDirection","alignItems","justifyContent","overflow","content","top","left","right","bottom","zIndex","fullWidth","multiline","rows","placeholder","e","target","borderWidth","gradient","size","round","my","maxHeight","overflowY","whiteSpace","startIcon","ml","Object","entries","map","topicIndex","defaultExpanded","margin","expandIcon","borderBottom","borderBottomLeftRadius","borderBottomRightRadius","some","every","qIndex","_skills$find","m","arrow","textDecoration","textDecorationStyle","options","opt","i","String","fromCharCode","control","in","timeout","borderTopLeftRadius","pl","explanation","gap","_c","$RefreshReg$"],"sources":["/Users/gerardo/Downloads/Bonsaito/src/pages/UploadReport.tsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport {\n  Box,\n  Button,\n  Container,\n  Typography,\n  Paper,\n  AppBar,\n  Toolbar,\n  IconButton,\n  CircularProgress,\n  Alert,\n  Tabs,\n  Tab,\n  TextField,\n  Card,\n  CardContent,\n  Divider,\n  Chip,\n  Grid,\n  Stepper,\n  Step,\n  StepLabel,\n  useTheme,\n  useMediaQuery,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  Collapse,\n  Fade,\n  Badge,\n  Tooltip,\n  Avatar\n} from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport TextFieldsIcon from '@mui/icons-material/TextFields';\nimport SchoolIcon from '@mui/icons-material/School';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport LocalFloristIcon from '@mui/icons-material/LocalFlorist';\nimport EmojiNatureIcon from '@mui/icons-material/EmojiNature';\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { useDropzone } from 'react-dropzone';\nimport { uploadFileToSupabase } from '../services/ocrService'; \nimport { generateQuestionsFromMistakes, GeneratedQuestion } from '../services/geminiPdfService';\nimport { supabase } from '../supabaseClient';\nimport { useSkills } from '../components/SkillsProvider';\nimport LoadingAnimation from '../components/LoadingAnimation';\nimport GlassCard from '../components/GlassCard';\nimport GradientButton from '../components/GradientButton';\nimport { FadeIn, ScaleIn, FloatAnimation, SlideIn } from '../components/AnimationEffects';\n\n// Define an interface for user answers\ninterface StudentAnswers {\n  [questionId: string]: string;\n}\n\n// Interface for tracking which skills are improved by which questions\ninterface QuestionSkillMapping {\n  [questionId: string]: string; // maps question id to skill id\n}\n\n// Function to simulate processing delay\nconst addProcessingDelay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\n// Text styles for better readability based on dark theme best practices\nconst textStyles = {\n  heading: {\n    color: 'rgba(255, 255, 255, 0.87)', // High-emphasis text at 87% opacity\n    textShadow: '0 1px 2px rgba(0,0,0,0.2)'\n  },\n  subheading: {\n    color: 'rgba(255, 255, 255, 0.87)', // High-emphasis text at 87% opacity\n    opacity: 0.9\n  },\n  body: {\n    color: 'rgba(255, 255, 255, 0.7)' // Medium-emphasis text at 70% opacity\n  },\n  label: {\n    color: 'rgba(255, 255, 255, 0.87)',  // High-emphasis text at 87% opacity\n    fontWeight: 500\n  },\n  secondary: {\n    color: 'rgba(255, 255, 255, 0.6)' // Secondary text at 60% opacity\n  },\n  disabled: {\n    color: 'rgba(255, 255, 255, 0.38)' // Disabled text at 38% opacity\n  },\n  accent: {\n    color: 'rgba(136, 212, 152, 0.9)' // Desaturated accent color\n  }\n};\n\n// Create a dark theme to match onboarding\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#88d498',\n    },\n    secondary: {\n      main: '#88d498',\n    },\n    background: {\n      paper: 'rgba(33, 33, 33, 0.95)',\n      default: '#121212',\n    },\n    text: {\n      primary: 'rgba(255, 255, 255, 0.87)',\n      secondary: 'rgba(255, 255, 255, 0.6)',\n    },\n  },\n  typography: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    h4: {\n      fontWeight: 600,\n    },\n    h6: {\n      fontWeight: 500,\n    }\n  },\n  components: {\n    MuiInputBase: {\n      styleOverrides: {\n        input: {\n          color: 'rgba(255, 255, 255, 0.87)',\n        },\n        root: {\n          backgroundColor: 'rgba(30, 30, 30, 0.4)',\n        }\n      },\n    },\n    MuiOutlinedInput: {\n      styleOverrides: {\n        root: {\n          '&:hover .MuiOutlinedInput-notchedOutline': {\n            borderColor: '#88d498',\n          },\n          '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n            borderColor: '#88d498',\n          },\n        },\n        notchedOutline: {\n          borderColor: 'rgba(255, 255, 255, 0.23)',\n        },\n      },\n    },\n    MuiFormLabel: {\n      styleOverrides: {\n        root: {\n          color: 'rgba(255, 255, 255, 0.6)',\n          '&.Mui-focused': {\n            color: '#88d498',\n          },\n        },\n      },\n    },\n    MuiPaper: {\n      styleOverrides: {\n        root: {\n          backgroundImage: 'none',\n          backgroundColor: 'rgba(30, 30, 30, 0.6)',\n          backdropFilter: 'blur(10px)',\n          borderRadius: 12,\n          border: '1px solid rgba(255, 255, 255, 0.1)',\n        },\n      },\n    },\n    MuiCard: {\n      styleOverrides: {\n        root: {\n          background: 'rgba(24, 24, 24, 0.8)',\n          backdropFilter: 'blur(10px)',\n          borderRadius: 12,\n          border: '1px solid rgba(255, 255, 255, 0.1)',\n        },\n      },\n    },\n    MuiAppBar: {\n      styleOverrides: {\n        root: {\n          background: 'rgba(12, 59, 46, 0.8)',\n          backdropFilter: 'blur(10px)',\n          boxShadow: '0 4px 20px rgba(0, 0, 0, 0.2)',\n        },\n      },\n    },\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          borderRadius: 8,\n          textTransform: 'none',\n          fontWeight: 500,\n        },\n        contained: {\n          boxShadow: '0 4px 12px rgba(0, 0, 0, 0.2)',\n          backgroundColor: '#88d498',\n          '&:hover': {\n            backgroundColor: '#6bbb7b',\n          },\n        },\n        outlined: {\n          borderColor: '#88d498',\n          color: '#88d498',\n          '&:hover': {\n            borderColor: '#6bbb7b',\n            backgroundColor: 'rgba(136, 212, 152, 0.08)',\n          },\n        },\n      },\n    },\n    MuiTab: {\n      styleOverrides: {\n        root: {\n          textTransform: 'none',\n          fontWeight: 500,\n          '&.Mui-selected': {\n            color: '#88d498',\n          },\n        },\n      },\n    },\n    MuiTabs: {\n      styleOverrides: {\n        indicator: {\n          backgroundColor: '#88d498',\n        },\n      },\n    },\n    MuiStepIcon: {\n      styleOverrides: {\n        root: {\n          color: 'rgba(30, 30, 30, 0.8)',\n          '&.Mui-active': {\n            color: '#88d498',\n          },\n          '&.Mui-completed': {\n            color: '#6bbb7b',\n          },\n        },\n      },\n    },\n  },\n});\n\nconst UploadReport: React.FC = () => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const navigate = useNavigate();\n  const { skills, updateSkillProgress } = useSkills();\n  \n  const [drawerOpen, setDrawerOpen] = useState<boolean>(false); \n  const [uploadedFile, setUploadedFile] = useState<File | null>(null);\n  const [extractedText, setExtractedText] = useState<string | null>(null);\n  const [generatedQuestions, setGeneratedQuestions] = useState<GeneratedQuestion[]>([]); \n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [loadingMessage, setLoadingMessage] = useState<string>('');\n  const [error, setError] = useState<string | null>(null);\n  const [inputMethod, setInputMethod] = useState<string>('file'); // 'file' or 'text'\n  const [pastedText, setPastedText] = useState<string>('');\n  const [activeStep, setActiveStep] = useState<number>(0);\n  const [apiKeyMissing, setApiKeyMissing] = useState<boolean>(!process.env.REACT_APP_GEMINI_API_KEY);\n  \n  // New state for tracking student answers and showing explanations\n  const [studentAnswers, setStudentAnswers] = useState<StudentAnswers>({});\n  const [showExplanations, setShowExplanations] = useState<{[key: string]: boolean}>({});\n  const [correctAnswers, setCorrectAnswers] = useState<string[]>([]);\n  const [questionSkillMap, setQuestionSkillMap] = useState<QuestionSkillMapping>({});\n  const [showTreeGrowthBadge, setShowTreeGrowthBadge] = useState<boolean>(false);\n  const [treeBadgeCount, setTreeBadgeCount] = useState<number>(0);\n  const [userData, setUserData] = useState<{firstName?: string, lastName?: string} | null>(null);\n  const [loadingUserData, setLoadingUserData] = useState<boolean>(true);\n  \n  // Group questions by topic for better organization\n  const questionsByTopic = React.useMemo(() => {\n    const grouped: Record<string, GeneratedQuestion[]> = {};\n    generatedQuestions.forEach(q => {\n      if (!grouped[q.topic]) {\n        grouped[q.topic] = [];\n      }\n      grouped[q.topic].push(q);\n    });\n    return grouped;\n  }, [generatedQuestions]);\n\n  // Fetch user data for personalization\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const { data: { user } } = await supabase.auth.getUser();\n        if (user) {\n          const { data: onboardingData, error } = await supabase\n            .from('user_onboarding')\n            .select('first_name, last_name')\n            .eq('user_id', user.id)\n            .single();\n\n          if (error) {\n            console.error(\"Error fetching user onboarding data:\", error);\n          } else if (onboardingData) {\n            setUserData({\n              firstName: onboardingData.first_name,\n              lastName: onboardingData.last_name,\n            });\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching user session:\", error);\n      } finally {\n        setLoadingUserData(false);\n      }\n    };\n\n    fetchUserData();\n  }, []);\n\n  // Maps generated questions to skills\n  const mapQuestionsToSkills = useCallback((questions: GeneratedQuestion[]) => {\n    // Create a mapping between question topics and skill categories\n    const topicToCategory: Record<string, string> = {\n      'Grammar': 'Standard English Conventions',\n      'Punctuation': 'Standard English Conventions',\n      'Sentence Structure': 'Standard English Conventions',\n      'Evidence': 'Expression of Ideas',\n      'Organization': 'Expression of Ideas',\n      'Vocabulary': 'Expression of Ideas',\n      'Algebra': 'Math',\n      'Geometry': 'Math',\n      'Data Analysis': 'Math'\n    };\n    \n    // Generate a mapping between question IDs and skill IDs\n    const mapping: QuestionSkillMapping = {};\n    \n    questions.forEach(question => {\n      // Find matching skills from the skills context\n      const category = topicToCategory[question.topic] || question.topic;\n      \n      // Find skills that match this category\n      const matchingSkills = skills.filter(s => \n        s.category === category || \n        s.subcategory === question.topic ||\n        s.name.toLowerCase().includes(question.topic.toLowerCase())\n      );\n      \n      if (matchingSkills.length > 0) {\n        // Pick a skill to associate with this question (preferably one that's not mastered yet)\n        const notYetMastered = matchingSkills.filter(s => !s.mastered);\n        const skillToUse = notYetMastered.length > 0 \n          ? notYetMastered[Math.floor(Math.random() * notYetMastered.length)]\n          : matchingSkills[Math.floor(Math.random() * matchingSkills.length)];\n        \n        mapping[question.id] = skillToUse.id;\n      }\n    });\n    \n    setQuestionSkillMap(mapping);\n  }, [skills]);\n\n  // Effect to map questions to skills when questions are generated\n  useEffect(() => {\n    if (generatedQuestions.length > 0) {\n      mapQuestionsToSkills(generatedQuestions);\n    }\n  }, [generatedQuestions, mapQuestionsToSkills]);\n\n  const handleDrawerToggle = () => {\n    setDrawerOpen(!drawerOpen);\n  };\n\n  const onDrop = useCallback(async (acceptedFiles: File[]) => {\n    if (acceptedFiles && acceptedFiles.length > 0) {\n      const file = acceptedFiles[0];\n      const validFileTypes = ['application/pdf', 'text/plain'];\n      \n      if (!validFileTypes.includes(file.type)) {\n        setError('Invalid file type. Please upload a PDF or TXT file.');\n        setUploadedFile(null);\n        return;\n      }\n      \n      setUploadedFile(file);\n      setError(null);\n      setExtractedText(null);\n      setGeneratedQuestions([]);\n      setIsLoading(true);\n      setActiveStep(1);\n      \n      try {\n        const { data: { session } } = await supabase.auth.getSession();\n        if (!session) {\n          setError('No active session. Please log in again.');\n          setIsLoading(false);\n          return;\n        }\n\n        // Handle text files the same way as before\n        if (file.type === 'text/plain') {\n          setLoadingMessage('Reading text file content...');\n          const text = await file.text();\n          // Add realistic processing delay\n          await addProcessingDelay(2500);\n          setExtractedText(text);\n          setActiveStep(2);\n          \n          setLoadingMessage('Analyzing report and generating personalized questions...');\n          await addProcessingDelay(15000);\n          const questions = await generateQuestionsFromMistakes(text);\n          setGeneratedQuestions(questions);\n          setActiveStep(3);\n        } else {\n          // For PDF files, now process directly with Gemini 1.5 Flash\n          setLoadingMessage('Processing PDF with Gemini 1.5 Flash...');\n          \n          // We'll upload the file to Supabase for tracking/storage purposes\n          const { storagePath } = await uploadFileToSupabase(file, 'score-reports', { publicAccess: false });\n          console.log('File uploaded to Supabase:', { storagePath });\n          \n          // Skip text extraction step and directly process the PDF with Gemini\n          await addProcessingDelay(3000);\n          \n          // Skip the text extraction step for improved UI flow\n          setActiveStep(2);\n          setLoadingMessage('Analyzing PDF and generating personalized questions...');\n          \n          // Generate questions directly from the PDF file using Gemini 2.0 Flash\n          await addProcessingDelay(15000);\n          const questions = await generateQuestionsFromMistakes(file);\n          setGeneratedQuestions(questions);\n          setActiveStep(3);\n        }\n      } catch (err: any) {\n        console.error(\"Error processing file:\", err);\n        setError(`Failed to process the file: ${err.message || 'Unknown error'}. Check console for details.`);\n      } finally {\n        setIsLoading(false);\n        setLoadingMessage('');\n      }\n    }\n  }, []);\n\n  const handleTextSubmit = async () => {\n    if (!pastedText.trim()) {\n      setError('Please paste some text before submitting.');\n      return;\n    }\n\n    setError(null);\n    setExtractedText(null);\n    setGeneratedQuestions([]);\n    setIsLoading(true);\n    setActiveStep(1);\n    \n    try {\n      const { data: { session } } = await supabase.auth.getSession();\n      if (!session) {\n        setError('No active session. Please log in again.');\n        setIsLoading(false);\n        return;\n      }\n\n      // Process the pasted text with realistic delays\n      setLoadingMessage('Processing your text input...');\n      await addProcessingDelay(1800);\n      setExtractedText(pastedText);\n      setActiveStep(2);\n      \n      setLoadingMessage('Analyzing report data and creating personalized questions...');\n      // Add realistic processing delay - increased to 15 seconds\n      await addProcessingDelay(15000);\n      const questions = await generateQuestionsFromMistakes(pastedText);\n      setGeneratedQuestions(questions);\n      setActiveStep(3);\n    } catch (err: any) {\n      console.error(\"Error processing text:\", err);\n      setError(`Failed to process text: ${err.message || 'Unknown error'}. Check console for details.`);\n    } finally {\n      setIsLoading(false);\n      setLoadingMessage('');\n    }\n  };\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: { \n      'application/pdf': ['.pdf'],\n      'text/plain': ['.txt']\n    },\n    multiple: false,\n    disabled: isLoading || inputMethod === 'text'\n  });\n\n  const handleInputMethodChange = (_event: React.SyntheticEvent, newValue: string) => {\n    setInputMethod(newValue);\n    // Reset state when changing methods\n    setError(null);\n    setUploadedFile(null);\n    setPastedText('');\n    setExtractedText(null);\n    setGeneratedQuestions([]);\n    setActiveStep(0);\n  };\n\n  // Function to determine difficulty level color\n  const getDifficultyColor = (difficulty?: string) => {\n    switch (difficulty?.toLowerCase()) {\n      case 'easy': return theme.palette.success.main;\n      case 'medium': return theme.palette.warning.main;\n      case 'hard': return theme.palette.error.main;\n      default: return theme.palette.info.main;\n    }\n  };\n\n  // Handle student answer selection\n  const handleAnswerSelect = (questionId: string, answer: string) => {\n    setStudentAnswers(prev => ({\n      ...prev,\n      [questionId]: answer\n    }));\n  };\n\n  // Check if an answer is correct and reveal explanation\n  const checkAnswer = (questionId: string) => {\n    setShowExplanations(prev => ({\n      ...prev,\n      [questionId]: true\n    }));\n    \n    const question = generatedQuestions.find(q => q.id === questionId);\n    if (question && isAnswerCorrect(question, studentAnswers[questionId])) {\n      // If correct and not already in correctAnswers, add it\n      if (!correctAnswers.includes(questionId)) {\n        setCorrectAnswers(prev => [...prev, questionId]);\n        \n        // Update the associated skill's progress\n        const skillId = questionSkillMap[questionId];\n        if (skillId) {\n          // Find current skill to determine new progress level\n          const skill = skills.find(s => s.id === skillId);\n          if (skill) {\n            // Increase skill mastery level by 15-25% for each correct answer\n            const progressIncrease = Math.floor(Math.random() * 11) + 15; // 15-25\n            const newProgress = Math.min(100, skill.masteryLevel + progressIncrease);\n            \n            // Ensure we call updateSkillProgress with the correct parameters\n            updateSkillProgress(skillId, newProgress);\n            console.log(`Skill ${skillId} updated: ${skill.masteryLevel} -> ${newProgress}`);\n            \n            // Show growth badge and increment counter\n            setShowTreeGrowthBadge(true);\n            setTreeBadgeCount(prev => prev + 1);\n            \n            // Hide badge after a few seconds\n            setTimeout(() => {\n              setShowTreeGrowthBadge(false);\n            }, 3000);\n          }\n        }\n      }\n    }\n  };\n\n  // Reset a question to try again\n  const resetQuestion = (questionId: string) => {\n    const newAnswers = {...studentAnswers};\n    delete newAnswers[questionId];\n    setStudentAnswers(newAnswers);\n    \n    setShowExplanations(prev => ({\n      ...prev,\n      [questionId]: false\n    }));\n    \n    // If it was a correct answer, remove it from correctAnswers\n    if (correctAnswers.includes(questionId)) {\n      setCorrectAnswers(prev => prev.filter(id => id !== questionId));\n    }\n  };\n\n  // Function to determine if a student's answer is correct\n  const isAnswerCorrect = (question: GeneratedQuestion, studentAnswer: string) => {\n    return studentAnswer === question.answer;\n  };\n\n  // Handle navigate to dashboard to see tree growth\n  const handleViewTreeGrowth = () => {\n    navigate('/dashboard', { \n      state: { \n        fromUpload: true, \n        correctAnswers: correctAnswers.length \n      } \n    });\n  };\n\n  // Background style with animation to match onboarding\n  const getBackgroundStyle = () => {\n    return {\n      background: 'linear-gradient(135deg, #121212 0%, #1e3a34 100%)',\n      backgroundSize: '200% 200%',\n      animation: 'gradient 15s ease infinite',\n      minHeight: '100vh',\n      transition: 'background 0.5s ease-in-out',\n      '@keyframes gradient': {\n        '0%': { backgroundPosition: '0% 50%' },\n        '50%': { backgroundPosition: '100% 50%' },\n        '100%': { backgroundPosition: '0% 50%' }\n      }\n    } as React.CSSProperties;\n  };\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <Box sx={getBackgroundStyle()}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              edge=\"start\"\n              onClick={handleDrawerToggle} \n              sx={{ mr: 2 }}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1, letterSpacing: '-0.01em' }}>\n              Upload Score Report\n            </Typography>\n            \n            {/* User Avatar */}\n            <Avatar sx={{ \n              bgcolor: 'primary.main',\n              boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\n            }}>\n              {loadingUserData ? '' : userData?.firstName?.charAt(0) || 'U'}\n            </Avatar>\n            \n            {/* Tree growth badge */}\n            {correctAnswers.length > 0 && (\n              <Tooltip title=\"Your bonsai tree is growing! Click to view\">\n                <Badge \n                  badgeContent={treeBadgeCount} \n                  color=\"success\"\n                  sx={{ mr: 2, opacity: showTreeGrowthBadge ? 1 : 0.8, transition: 'all 0.3s ease' }}\n                >\n                  <IconButton \n                    color=\"inherit\" \n                    onClick={handleViewTreeGrowth}\n                    sx={{ \n                      animation: showTreeGrowthBadge ? 'treeGrow 1s ease-in-out' : 'none',\n                      '@keyframes treeGrow': {\n                        '0%': { transform: 'scale(1)' },\n                        '50%': { transform: 'scale(1.3)' },\n                        '100%': { transform: 'scale(1)' }\n                      }\n                    }}\n                  >\n                    <EmojiNatureIcon />\n                  </IconButton>\n                </Badge>\n              </Tooltip>\n            )}\n          </Toolbar>\n        </AppBar>\n\n        <Container maxWidth=\"md\" sx={{ py: 4 }}>\n          <FadeIn>\n            <Typography variant=\"h4\" gutterBottom align=\"center\" \n              sx={{ color: 'rgba(255, 255, 255, 0.87)', textShadow: '0 2px 4px rgba(0,0,0,0.3)', fontWeight: 'bold', mb: 2 }}>\n              Upload Your SAT Practice Report\n            </Typography>\n            <Typography variant=\"subtitle1\" paragraph align=\"center\" \n              sx={{ color: 'rgba(255, 255, 255, 0.7)', mb: 4 }}>\n              Upload your report or paste text to get personalized lessons and practice questions\n            </Typography>\n          </FadeIn>\n\n          {apiKeyMissing && (\n            <Alert \n              severity=\"warning\" \n              sx={{ \n                mb: 3, \n                background: 'rgba(237, 108, 2, 0.15)', \n                color: 'rgba(255, 255, 255, 0.87)',\n                '& .MuiAlert-icon': {\n                  color: 'rgba(255, 167, 38, 0.9)'\n                },\n                borderRadius: 2\n              }}\n            >\n              <Typography variant=\"subtitle2\" fontWeight=\"bold\">API Key Missing</Typography>\n              <Typography variant=\"body2\">\n                The application is running in limited mode. Some advanced features may not be available. Please contact the administrator for full functionality.\n              </Typography>\n            </Alert>\n          )}\n\n          <GlassCard sx={{ p: {xs: 3, md: 4}, mb: 4, backdropFilter: 'blur(10px)' }}>\n            <Stepper \n              activeStep={activeStep} \n              alternativeLabel \n              sx={{ \n                mb: 4, \n                display: { xs: 'none', sm: 'flex' },\n                '& .MuiStepLabel-label': {\n                  color: 'rgba(255, 255, 255, 0.6)',\n                  mt: 1\n                },\n                '& .MuiStepLabel-active': {\n                  color: 'rgba(255, 255, 255, 0.87)'\n                },\n                '& .MuiStepIcon-root': {\n                  color: 'rgba(30, 30, 30, 0.8)'\n                },\n                '& .MuiStepIcon-active': {\n                  color: '#88d498'\n                },\n                '& .MuiStepIcon-completed': {\n                  color: 'rgba(136, 212, 152, 0.7)'\n                },\n                '& .MuiStepConnector-line': {\n                  borderColor: 'rgba(255, 255, 255, 0.12)'\n                }\n              }}\n            >\n              <Step>\n                <StepLabel>Upload Report</StepLabel>\n              </Step>\n              <Step>\n                <StepLabel>Process Content</StepLabel>\n              </Step>\n              <Step>\n                <StepLabel>Extract Information</StepLabel>\n              </Step>\n              <Step>\n                <StepLabel>Generate Questions</StepLabel>\n              </Step>\n            </Stepper>\n            \n            {/* Mobile stepper status */}\n            <Box sx={{ mb: 4, display: { xs: 'block', sm: 'none' }, textAlign: 'center' }}>\n              <Typography variant=\"body2\" sx={{ color: 'rgba(255, 255, 255, 0.7)' }}>\n                Step {activeStep + 1} of 4: {['Upload Report', 'Process Content', 'Extract Information', 'Generate Questions'][activeStep]}\n              </Typography>\n            </Box>\n            \n            <Box sx={{ width: '100%', mb: 3 }}>\n              <Tabs\n                value={inputMethod}\n                onChange={handleInputMethodChange}\n                centered\n                sx={{\n                  '& .MuiTabs-indicator': {\n                    backgroundColor: '#88d498',\n                    height: 3\n                  },\n                  '& .MuiTab-root': {\n                    color: 'rgba(255, 255, 255, 0.6)',\n                    fontSize: '1rem',\n                    '&.Mui-selected': {\n                      color: 'rgba(255, 255, 255, 0.87)'\n                    }\n                  }\n                }}\n                variant={isMobile ? \"fullWidth\" : \"standard\"}\n              >\n                <Tab \n                  value=\"file\" \n                  label=\"Upload File\" \n                  icon={<CloudUploadIcon />} \n                  iconPosition=\"start\"\n                  disabled={isLoading}\n                />\n                <Tab \n                  value=\"text\" \n                  label=\"Paste Text\" \n                  icon={<TextFieldsIcon />} \n                  iconPosition=\"start\"\n                  disabled={isLoading}\n                />\n              </Tabs>\n            </Box>\n\n            {!isLoading && activeStep < 3 && (\n              <>\n                {inputMethod === 'file' ? (\n                  <Box\n                    {...getRootProps()}\n                    sx={{\n                      p: 4,\n                      textAlign: 'center',\n                      border: '2px dashed',\n                      borderColor: isDragActive ? '#88d498' : 'rgba(255, 255, 255, 0.23)',\n                      borderRadius: 2,\n                      backgroundColor: isDragActive ? 'rgba(26, 147, 111, 0.08)' : 'rgba(18, 18, 18, 0.5)',\n                      backdropFilter: 'blur(8px)',\n                      cursor: 'pointer',\n                      minHeight: 200,\n                      display: 'flex',\n                      flexDirection: 'column',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      transition: 'all 0.3s ease',\n                      overflow: 'hidden',\n                      position: 'relative',\n                      '&:hover': {\n                        borderColor: '#88d498',\n                        backgroundColor: 'rgba(26, 147, 111, 0.05)'\n                      },\n                      '&::before': {\n                        content: '\"\"',\n                        position: 'absolute',\n                        top: 0,\n                        left: 0,\n                        right: 0,\n                        bottom: 0,\n                        zIndex: -1,\n                        opacity: 0.1,\n                        background: 'linear-gradient(135deg, rgba(136, 212, 152, 0.2) 0%, rgba(12, 59, 46, 0.2) 100%)',\n                        animation: 'gradientBackground 15s ease infinite',\n                        '@keyframes gradientBackground': {\n                          '0%': { backgroundPosition: '0% 50%' },\n                          '50%': { backgroundPosition: '100% 50%' },\n                          '100%': { backgroundPosition: '0% 50%' }\n                        }\n                      }\n                    }}\n                  >\n                    <input {...getInputProps()} />\n                    <Box sx={{ \n                      display: 'flex', \n                      flexDirection: 'column', \n                      alignItems: 'center',\n                      position: 'relative',\n                      zIndex: 1\n                    }}>\n                      <CloudUploadIcon sx={{ \n                        fontSize: 60, \n                        color: '#88d498', \n                        mb: 1,\n                        filter: 'drop-shadow(0 4px 6px rgba(0,0,0,0.2))',\n                        animation: isDragActive ? 'pulse 1.5s infinite' : 'none',\n                        '@keyframes pulse': {\n                          '0%': { transform: 'scale(1)' },\n                          '50%': { transform: 'scale(1.1)' },\n                          '100%': { transform: 'scale(1)' },\n                        }\n                      }} />\n                      <PictureAsPdfIcon sx={{ \n                        fontSize: 40, \n                        color: 'rgba(255, 255, 255, 0.6)', \n                        mb: 2,\n                        filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.1))'\n                      }} />\n                    </Box>\n                    {isDragActive ? (\n                      <Typography variant=\"h6\" sx={{ \n                        color: '#88d498', \n                        fontWeight: 'bold',\n                        textShadow: '0 2px 4px rgba(0,0,0,0.2)'\n                      }}>\n                        Drop the file here ...\n                      </Typography>\n                    ) : (\n                      <Typography variant=\"h6\" sx={{ \n                        color: 'rgba(255, 255, 255, 0.87)', \n                        fontWeight: 'medium',\n                        textShadow: '0 2px 4px rgba(0,0,0,0.2)'\n                      }}>\n                        Drag 'n' drop a file here, or click to select file\n                      </Typography>\n                    )}\n                    <Typography variant=\"body2\" sx={{ color: 'rgba(255, 255, 255, 0.6)', mt: 1 }}>\n                      (PDF files are now processed directly with Gemini 1.5 Flash)\n                    </Typography>\n                    <Typography variant=\"body2\" sx={{ color: 'rgba(255, 255, 255, 0.6)', mt: 0.5 }}>\n                      (Max file size: 10MB. Supported formats: PDF, TXT)\n                    </Typography>\n                  </Box>\n                ) : (\n                  <Box sx={{ p: 2 }}>\n                    <Typography variant=\"h6\" gutterBottom sx={{ \n                      color: 'rgba(255, 255, 255, 0.87)',\n                      fontWeight: 'medium',\n                      mb: 2\n                    }}>\n                      Paste Your SAT Report Text\n                    </Typography>\n                    <TextField\n                      fullWidth\n                      multiline\n                      rows={10}\n                      variant=\"outlined\"\n                      placeholder=\"Paste the content of your SAT report here...\"\n                      value={pastedText}\n                      onChange={(e) => setPastedText(e.target.value)}\n                      disabled={isLoading}\n                      sx={{ \n                        mb: 3,\n                        '& .MuiOutlinedInput-root': {\n                          backgroundColor: 'rgba(18, 18, 18, 0.5)',\n                          backdropFilter: 'blur(8px)',\n                          borderRadius: 2,\n                          '&:hover .MuiOutlinedInput-notchedOutline': {\n                            borderColor: '#88d498'\n                          },\n                          '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                            borderColor: '#88d498',\n                            borderWidth: 2\n                          }\n                        },\n                        '& .MuiInputBase-input': {\n                          color: 'rgba(255, 255, 255, 0.87)'\n                        }\n                      }}\n                    />\n                    <GradientButton \n                      variant=\"contained\" \n                      gradient=\"primary\"\n                      onClick={handleTextSubmit}\n                      disabled={!pastedText.trim() || isLoading}\n                      fullWidth\n                      size=\"large\"\n                      sx={{ py: 1.5 }}\n                    >\n                      Process Text\n                    </GradientButton>\n                  </Box>\n                )}\n              </>\n            )}\n\n            {error && (\n              <Alert \n                severity=\"error\" \n                sx={{ \n                  mt: 2, \n                  backgroundColor: 'rgba(211, 47, 47, 0.15)', \n                  color: 'rgba(255, 255, 255, 0.87)',\n                  '& .MuiAlert-icon': {\n                    color: 'rgba(244, 67, 54, 0.9)'\n                  },\n                  borderRadius: 2\n                }}\n              >\n                {error}\n              </Alert>\n            )}\n\n            {uploadedFile && inputMethod === 'file' && !error && !isLoading && activeStep < 3 && (\n              <ScaleIn>\n                <Box sx={{ \n                  p: 3, \n                  mt: 3, \n                  backgroundColor: 'rgba(18, 18, 18, 0.7)', \n                  backdropFilter: 'blur(10px)',\n                  borderRadius: 2,\n                  border: '1px solid rgba(136, 212, 152, 0.2)',\n                  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.15)'\n                }}>\n                  <Typography variant=\"h6\" sx={{ \n                    color: 'rgba(255, 255, 255, 0.87)',\n                    fontWeight: 'medium',\n                    mb: 2\n                  }}>\n                    Uploaded File:\n                  </Typography>\n                  <Box sx={{ display: 'flex', alignItems: 'center', mt: 1 }}>\n                    <PictureAsPdfIcon sx={{ color: '#88d498', mr: 1, filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.2))' }} />\n                    <Typography sx={{ color: 'rgba(255, 255, 255, 0.8)' }}>\n                      {uploadedFile.name} ({Math.round(uploadedFile.size / 1024)} KB)\n                    </Typography>\n                  </Box>\n                  <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 3 }}>\n                    <GradientButton \n                      variant=\"contained\" \n                      gradient=\"primary\"\n                      onClick={() => {\n                        onDrop([uploadedFile]);\n                      }}\n                      size=\"medium\"\n                    >\n                      Process File\n                    </GradientButton>\n                  </Box>\n                </Box>\n              </ScaleIn>\n            )}\n\n            {isLoading && (\n              <Box sx={{ textAlign: 'center', my: 6, position: 'relative' }}>\n                <FloatAnimation>\n                  <LoadingAnimation\n                    message={loadingMessage || 'Processing...'}\n                    width={280}\n                    height={280}\n                  />\n                </FloatAnimation>\n              </Box>\n            )}\n\n            {extractedText && !isLoading && activeStep === 2 && (\n              <ScaleIn>\n                <Box sx={{ \n                  p: 4, \n                  mt: 4, \n                  backgroundColor: 'rgba(18, 18, 18, 0.7)', \n                  backdropFilter: 'blur(10px)',\n                  borderRadius: 2,\n                  border: '1px solid rgba(136, 212, 152, 0.2)',\n                  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.15)'\n                }}>\n                  <Typography variant=\"h6\" gutterBottom sx={{ \n                    color: 'rgba(255, 255, 255, 0.87)',\n                    fontWeight: 'medium',\n                    mb: 2\n                  }}>\n                    Extracted Text (Preview):\n                  </Typography>\n                  <Box sx={{ \n                    maxHeight: 150, \n                    overflowY: 'auto', \n                    whiteSpace: 'pre-wrap', \n                    backgroundColor: 'rgba(12, 12, 12, 0.9)', \n                    p: 3, \n                    borderRadius: 2,\n                    border: '1px solid rgba(255, 255, 255, 0.1)'\n                  }}>\n                    <Typography variant=\"body2\" sx={{ color: 'rgba(255, 255, 255, 0.8)' }}>\n                      {extractedText}\n                    </Typography>\n                  </Box>\n                </Box>\n              </ScaleIn>\n            )}\n            \n            {generatedQuestions.length > 0 && !isLoading && (\n              <Box sx={{ mt: 4 }}>\n                <FadeIn>\n                  <GlassCard sx={{ \n                    p: 3, \n                    borderRadius: 2, \n                    mb: 4,\n                    backdropFilter: 'blur(10px)',\n                    boxShadow: '0 8px 32px rgba(0, 0, 0, 0.3)',\n                    border: '1px solid rgba(136, 212, 152, 0.2)',\n                  }}>\n                    <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n                      <SchoolIcon sx={{ fontSize: 32, color: '#88d498', mr: 1.5, filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.2))' }} />\n                      <Typography variant=\"h5\" sx={{ color: 'rgba(255, 255, 255, 0.87)', fontWeight: 'bold' }}>\n                        Your Personalized Practice Questions\n                      </Typography>\n                    </Box>\n                    \n                    <Typography variant=\"body1\" paragraph sx={{ color: 'rgba(255, 255, 255, 0.7)' }}>\n                      Based on your test results, we've created {generatedQuestions.length} personalized practice questions \n                      covering different topics to help you improve your SAT score.\n                    </Typography>\n                    \n                    {correctAnswers.length > 0 && (\n                      <Alert \n                        severity=\"success\" \n                        icon={<LocalFloristIcon />}\n                        sx={{ \n                          mb: 3, \n                          display: 'flex', \n                          alignItems: 'center',\n                          background: 'rgba(46, 125, 50, 0.15)',\n                          color: 'rgba(255, 255, 255, 0.87)',\n                          '& .MuiAlert-icon': {\n                            color: 'rgba(129, 199, 132, 0.9)'\n                          }\n                        }}\n                      >\n                        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', width: '100%' }}>\n                          <Typography sx={textStyles.body}>\n                            You've correctly answered {correctAnswers.length} question{correctAnswers.length !== 1 ? 's' : ''}! \n                            Your Bonsai Tree is growing with each correct answer.\n                          </Typography>\n                          <GradientButton \n                            variant=\"outlined\" \n                            size=\"small\" \n                            gradient=\"success\"\n                            startIcon={<EmojiNatureIcon />}\n                            onClick={handleViewTreeGrowth}\n                            sx={{ ml: 2 }}\n                          >\n                            View Growth\n                          </GradientButton>\n                        </Box>\n                      </Alert>\n                    )}\n                    \n                    <Divider sx={{ mb: 3, borderColor: 'rgba(255, 255, 255, 0.1)' }} />\n                    \n                    {Object.entries(questionsByTopic).map(([topic, questions], topicIndex) => (\n                      <Accordion \n                        key={topicIndex} \n                        defaultExpanded={topicIndex === 0} \n                        sx={{ \n                          mb: 2, \n                          boxShadow: 'none', \n                          background: 'rgba(30, 30, 30, 0.4)', \n                          border: '1px solid rgba(255, 255, 255, 0.1)',\n                          borderRadius: '4px !important',\n                          '&:before': {\n                            display: 'none'\n                          },\n                          '&.Mui-expanded': {\n                            margin: '0 0 16px 0'\n                          }\n                        }}\n                      >\n                        <AccordionSummary \n                          expandIcon={<ExpandMoreIcon sx={{ color: 'rgba(255, 255, 255, 0.6)' }} />}\n                          sx={{ \n                            backgroundColor: 'rgba(18, 18, 18, 0.6)',\n                            borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n                            borderRadius: '4px',\n                            '&.Mui-expanded': {\n                              borderBottomLeftRadius: 0,\n                              borderBottomRightRadius: 0\n                            }\n                          }}\n                        >\n                          <Box sx={{ display: 'flex', alignItems: 'center', width: '100%', justifyContent: 'space-between' }}>\n                            <Typography variant=\"h6\" sx={{ ...textStyles.heading, fontWeight: 'bold' }}>\n                              {topic} ({questions.length})\n                            </Typography>\n                            \n                            {/* Show mini progress for this topic */}\n                            {questions.length > 0 && (\n                              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                                <Typography variant=\"body2\" sx={{ ...textStyles.secondary, mr: 1 }}>\n                                  {questions.filter(q => correctAnswers.includes(q.id)).length}/{questions.length} Correct\n                                </Typography>\n                                {questions.some(q => correctAnswers.includes(q.id)) && (\n                                  <LocalFloristIcon \n                                    fontSize=\"small\" \n                                    sx={{ \n                                      color: 'rgba(129, 199, 132, 0.9)',\n                                      opacity: questions.every(q => correctAnswers.includes(q.id)) ? 1 : 0.6,\n                                      animation: showTreeGrowthBadge ? 'pulse 1.5s infinite' : 'none',\n                                      '@keyframes pulse': {\n                                        '0%': { transform: 'scale(1)' },\n                                        '50%': { transform: 'scale(1.2)' },\n                                        '100%': { transform: 'scale(1)' }\n                                      }\n                                    }} \n                                  />\n                                )}\n                              </Box>\n                            )}\n                          </Box>\n                        </AccordionSummary>\n                        <AccordionDetails sx={{ p: 0 }}>\n                          {questions.map((question, qIndex) => (\n                            <Box \n                              key={question.id} \n                              sx={{ \n                                mb: 2, \n                                m: 2, \n                                p: 3,\n                                borderRadius: 2, \n                                background: 'rgba(24, 24, 24, 0.9)',\n                                border: '1px solid rgba(255, 255, 255, 0.1)'\n                              }}\n                            >\n                              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n                                <Typography variant=\"subtitle1\" sx={{ ...textStyles.heading, fontWeight: 'bold' }}>\n                                  Question {topicIndex + 1}.{qIndex + 1}\n                                  \n                                  {/* Show which skill this question helps */}\n                                  {questionSkillMap[question.id] && (\n                                    <Tooltip \n                                      title={`Answering this correctly will help grow your \"${skills.find(s => s.id === questionSkillMap[question.id])?.name}\" skill`}\n                                      arrow\n                                    >\n                                      <Typography\n                                        component=\"span\"\n                                        variant=\"body2\"\n                                        sx={{ \n                                          ml: 1, \n                                          color: 'rgba(255, 255, 255, 0.6)',\n                                          cursor: 'help',\n                                          textDecoration: 'underline',\n                                          textDecorationStyle: 'dotted'\n                                        }}\n                                      >\n                                        (Improves a skill)\n                                      </Typography>\n                                    </Tooltip>\n                                  )}\n                                </Typography>\n                                {question.difficulty && (\n                                  <Chip \n                                    label={question.difficulty} \n                                    size=\"small\" \n                                    sx={{ \n                                      bgcolor: getDifficultyColor(question.difficulty),\n                                      color: 'white',\n                                      fontWeight: 'bold'\n                                    }} \n                                  />\n                                )}\n                              </Box>\n                              \n                              <Typography variant=\"body1\" paragraph sx={{ ...textStyles.body, whiteSpace: 'pre-wrap' }}>\n                                {question.text}\n                              </Typography>\n                              \n                              {question.options && (\n                                <Box sx={{ ml: 2, mb: 2 }}>\n                                  <RadioGroup \n                                    value={studentAnswers[question.id] || ''} \n                                    onChange={(e) => handleAnswerSelect(question.id, e.target.value)}\n                                  >\n                                    {question.options.map((opt, i) => (\n                                      <FormControlLabel\n                                        key={i}\n                                        value={String.fromCharCode(65 + i)} // A, B, C, D...\n                                        control={\n                                          <Radio \n                                            sx={{\n                                              color: 'rgba(255, 255, 255, 0.6)',\n                                              '&.Mui-checked': {\n                                                color: 'rgba(136, 212, 152, 0.9)',\n                                              }\n                                            }}\n                                          />\n                                        }\n                                        label={\n                                          <Box sx={{ \n                                            display: 'flex', \n                                            alignItems: 'center',\n                                            color: showExplanations[question.id] && \n                                                  question.answer === String.fromCharCode(65 + i) ? \n                                                  'rgba(129, 199, 132, 0.9)' : 'rgba(255, 255, 255, 0.87)'\n                                          }}>\n                                            <Typography variant=\"body1\">\n                                              {String.fromCharCode(65 + i)}. {opt}\n                                            </Typography>\n                                            {showExplanations[question.id] && \n                                              question.answer === String.fromCharCode(65 + i) && \n                                              <CheckCircleIcon sx={{ ml:.5, color: 'rgba(129, 199, 132, 0.9)' }} />\n                                            }\n                                          </Box>\n                                        }\n                                        sx={{ \n                                          p: 1.5, \n                                          mb: 1, \n                                          borderRadius: 1, \n                                          border: '1px solid',\n                                          borderColor: 'rgba(255, 255, 255, 0.1)',\n                                          backgroundColor: showExplanations[question.id] && \n                                                    question.answer === String.fromCharCode(65 + i) ? \n                                                    'rgba(76, 175, 80, 0.08)' : 'rgba(30, 30, 30, 0.3)',\n                                          transition: 'all 0.2s ease',\n                                          '&:hover': {\n                                            backgroundColor: !showExplanations[question.id] ? \n                                              'rgba(30, 30, 30, 0.6)' : \n                                              (question.answer === String.fromCharCode(65 + i) ? \n                                                'rgba(76, 175, 80, 0.08)' : 'rgba(30, 30, 30, 0.3)')\n                                          }\n                                        }}\n                                        disabled={showExplanations[question.id]}\n                                      />\n                                    ))}\n                                  </RadioGroup>\n                                </Box>\n                              )}\n                              \n                              <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 2 }}>\n                                {studentAnswers[question.id] && !showExplanations[question.id] && (\n                                  <GradientButton \n                                    variant=\"contained\" \n                                    gradient=\"primary\" \n                                    onClick={() => checkAnswer(question.id)}\n                                    sx={{ mr: 1 }}\n                                  >\n                                    Check Answer\n                                  </GradientButton>\n                                )}\n                                {showExplanations[question.id] && (\n                                  <GradientButton \n                                    variant=\"outlined\" \n                                    gradient=\"primary\"\n                                    onClick={() => resetQuestion(question.id)}\n                                  >\n                                    Try Again\n                                  </GradientButton>\n                                )}\n                              </Box>\n                              \n                              {showExplanations[question.id] && (\n                                <Fade in={showExplanations[question.id]} timeout={500}>\n                                  <Box>\n                                    <Box sx={{ display: 'flex', alignItems: 'center', mt: 2, mb: 1 }}>\n                                      {isAnswerCorrect(question, studentAnswers[question.id]) ? (\n                                        <Alert \n                                          severity=\"success\" \n                                          icon={<CheckCircleIcon fontSize=\"inherit\" />}\n                                          sx={{ \n                                            width: '100%',\n                                            backgroundColor: 'rgba(46, 125, 50, 0.15)',\n                                            color: 'rgba(255, 255, 255, 0.87)',\n                                            '& .MuiAlert-icon': {\n                                              color: 'rgba(129, 199, 132, 0.9)'\n                                            }\n                                          }}\n                                        >\n                                          <Typography variant=\"body1\" fontWeight=\"bold\">\n                                            Correct! Well done.\n                                          </Typography>\n                                        </Alert>\n                                      ) : (\n                                        <Alert \n                                          severity=\"error\" \n                                          icon={<CancelIcon fontSize=\"inherit\" />}\n                                          sx={{ \n                                            width: '100%',\n                                            backgroundColor: 'rgba(211, 47, 47, 0.15)',\n                                            color: 'rgba(255, 255, 255, 0.87)',\n                                            '& .MuiAlert-icon': {\n                                              color: 'rgba(244, 67, 54, 0.9)'\n                                            }\n                                          }}\n                                        >\n                                          <Typography variant=\"body1\" fontWeight=\"bold\">\n                                            Incorrect. The correct answer is {question.answer}.\n                                          </Typography>\n                                        </Alert>\n                                      )}\n                                    </Box>\n                                    \n                                    <Box sx={{ \n                                      mt: 2, \n                                      p: 2, \n                                      bgcolor: 'rgba(18, 18, 18, 0.8)', \n                                      borderRadius: 1.5,\n                                      border: '1px solid rgba(136, 212, 152, 0.2)',\n                                      position: 'relative',\n                                      '&::before': {\n                                        content: '\"\"',\n                                        position: 'absolute',\n                                        top: 0,\n                                        left: 0,\n                                        width: '4px',\n                                        height: '100%',\n                                        backgroundColor: 'rgba(136, 212, 152, 0.9)',\n                                        borderTopLeftRadius: 4,\n                                        borderBottomLeftRadius: 4\n                                      }\n                                    }}>\n                                      <Typography variant=\"subtitle2\" sx={{ fontWeight: 'bold', ...textStyles.heading, mb: 0.5, pl: 1 }}>\n                                        Explanation:\n                                      </Typography>\n                                      <Typography variant=\"body2\" sx={{ ...textStyles.body, whiteSpace: 'pre-wrap', pl: 1 }}>\n                                        {question.explanation}\n                                      </Typography>\n                                    </Box>\n                                  </Box>\n                                </Fade>\n                              )}\n                            </Box>\n                          ))}\n                        </AccordionDetails>\n                      </Accordion>\n                    ))}\n                  </GlassCard>\n                </FadeIn>\n                \n                <Box sx={{ mt: 4, display: 'flex', justifyContent: 'center', gap: 2 }}>\n                  <GradientButton \n                    onClick={handleViewTreeGrowth}\n                    variant=\"outlined\" \n                    gradient=\"success\"\n                    size=\"large\"\n                    startIcon={<EmojiNatureIcon />}\n                  >\n                    View Your Bonsai Tree\n                  </GradientButton>\n                  <GradientButton\n                    variant=\"contained\"\n                    gradient=\"primary\"\n                    size=\"large\"\n                    onClick={() => {\n                      setActiveStep(0);\n                      setGeneratedQuestions([]);\n                      setExtractedText(null);\n                      setInputMethod('file');\n                      setUploadedFile(null);\n                      setPastedText('');\n                      setStudentAnswers({});\n                      setShowExplanations({});\n                      setCorrectAnswers([]);\n                      setQuestionSkillMap({});\n                      setTreeBadgeCount(0);\n                    }}\n                  >\n                    Upload Another Report\n                  </GradientButton>\n                </Box>\n              </Box>\n            )}\n\n          </GlassCard>\n        </Container>\n      </Box>\n    </ThemeProvider>\n  );\n};\n\nexport default UploadReport; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}