{"ast":null,"code":"import _objectSpread from\"/Users/gerardo/Downloads/Bonsaito/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from'react';import{skillsAPI}from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const SkillsContext=/*#__PURE__*/createContext(undefined);export const useSkills=()=>{const context=useContext(SkillsContext);if(context===undefined){throw new Error('useSkills must be used within a SkillsProvider');}return context;};export const SkillsProvider=_ref=>{let{children}=_ref;const[skills,setSkills]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// For testing purposes - if we're in development mode and there's no API response, use mock data\nconst useMockData=process.env.NODE_ENV==='development';useEffect(()=>{const fetchSkills=async()=>{try{setLoading(true);setError(null);// Try to fetch from API first\nif(!useMockData){try{const response=await skillsAPI.getSkills();setSkills(response);setLoading(false);return;}catch(err){console.log('API fetch failed, using mock data instead');}}// If API fetch fails or we're in development, use mock data\n// This is temporary for development purposes\nsetSkills(mockSkills);setLoading(false);}catch(err){setError('Failed to load skills data');setLoading(false);console.error('Error fetching skills:',err);}};fetchSkills();},[useMockData]);// Derived values\nconst totalSkills=mockSkills.length;const masteredSkillsCount=skills.filter(skill=>skill.mastered).length;const categories=[...new Set(skills.map(skill=>skill.category))];// Function to update a skill's progress\nconst updateSkillProgress=(skillId,progress)=>{setSkills(prevSkills=>prevSkills.map(skill=>skill.id===skillId?_objectSpread(_objectSpread({},skill),{},{masteryLevel:progress,mastered:progress>=80// Consider mastered if progress is 80% or higher\n}):skill));};return/*#__PURE__*/_jsx(SkillsContext.Provider,{value:{skills,loading,error,totalSkills,categories,updateSkillProgress,masteredSkillsCount},children:children});};// Mock skills data for development\nconst mockSkills=[{id:\"sec-pun-comma\",name:\"Using Commas Correctly\",category:\"Standard English Conventions\",subcategory:\"Punctuation\",description:\"Using commas to separate items in a list, join independent clauses, and set off introductory elements.\",mastered:true,masteryLevel:90},{id:\"sec-pun-semi\",name:\"Semicolon Usage\",category:\"Standard English Conventions\",subcategory:\"Punctuation\",description:\"Using semicolons to join related independent clauses and in lists with internal commas.\",mastered:false,masteryLevel:60},{id:\"sec-gram-agree\",name:\"Subject-Verb Agreement\",category:\"Standard English Conventions\",subcategory:\"Grammar\",description:\"Ensuring subjects and verbs agree in number (singular/plural).\",mastered:true,masteryLevel:85},{id:\"sec-gram-tense\",name:\"Verb Tense Consistency\",category:\"Standard English Conventions\",subcategory:\"Grammar\",description:\"Maintaining consistent verb tenses within and across sentences.\",mastered:false,masteryLevel:45},{id:\"sec-sent-run\",name:\"Fixing Run-on Sentences\",category:\"Standard English Conventions\",subcategory:\"Sentence Structure\",description:\"Identifying and correcting run-on sentences and comma splices.\",mastered:false,masteryLevel:30},{id:\"sec-sent-frag\",name:\"Sentence Fragments\",category:\"Standard English Conventions\",subcategory:\"Sentence Structure\",description:\"Identifying and correcting sentence fragments.\",mastered:true,masteryLevel:95},{id:\"expr-evid-data\",name:\"Data Interpretation\",category:\"Expression of Ideas\",subcategory:\"Evidence\",description:\"Analyzing and interpreting data presented in tables, graphs, and charts.\",mastered:false,masteryLevel:70},{id:\"expr-evid-support\",name:\"Evidence-Based Claims\",category:\"Expression of Ideas\",subcategory:\"Evidence\",description:\"Evaluating the relevance and sufficiency of evidence to support claims.\",mastered:false,masteryLevel:55},{id:\"expr-org-trans\",name:\"Transition Usage\",category:\"Expression of Ideas\",subcategory:\"Organization\",description:\"Using transitions to connect ideas and improve flow between sentences and paragraphs.\",mastered:true,masteryLevel:85},{id:\"expr-org-intro\",name:\"Introduction and Conclusion\",category:\"Expression of Ideas\",subcategory:\"Organization\",description:\"Crafting effective introductions and conclusions in essays.\",mastered:false,masteryLevel:65},{id:\"math-alg-linear\",name:\"Linear Equations\",category:\"Math\",subcategory:\"Algebra\",description:\"Solving and graphing linear equations and inequalities.\",mastered:true,masteryLevel:90},{id:\"math-alg-quad\",name:\"Quadratic Equations\",category:\"Math\",subcategory:\"Algebra\",description:\"Solving and graphing quadratic equations and functions.\",mastered:false,masteryLevel:40},{id:\"math-alg-exp\",name:\"Exponents and Radicals\",category:\"Math\",subcategory:\"Algebra\",description:\"Working with exponents and radicals in expressions and equations.\",mastered:false,masteryLevel:25},{id:\"math-geo-tri\",name:\"Triangle Properties\",category:\"Math\",subcategory:\"Geometry\",description:\"Understanding and applying the properties of triangles.\",mastered:true,masteryLevel:95},{id:\"math-geo-circle\",name:\"Circle Properties\",category:\"Math\",subcategory:\"Geometry\",description:\"Understanding and applying the properties of circles.\",mastered:false,masteryLevel:60}];export default SkillsProvider;","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","skillsAPI","jsx","_jsx","SkillsContext","undefined","useSkills","context","Error","SkillsProvider","_ref","children","skills","setSkills","loading","setLoading","error","setError","useMockData","process","env","NODE_ENV","fetchSkills","response","getSkills","err","console","log","mockSkills","totalSkills","length","masteredSkillsCount","filter","skill","mastered","categories","Set","map","category","updateSkillProgress","skillId","progress","prevSkills","id","_objectSpread","masteryLevel","Provider","value","name","subcategory","description"],"sources":["/Users/gerardo/Downloads/Bonsaito/src/components/SkillsProvider.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { skillsAPI } from '../services/api';\n\nexport interface Skill {\n  id: string;\n  name: string;\n  category: string;\n  subcategory: string;\n  description: string;\n  mastered: boolean;\n  masteryLevel: number;\n}\n\ninterface SkillsContextType {\n  skills: Skill[];\n  loading: boolean;\n  error: string | null;\n  totalSkills: number;\n  categories: string[];\n  updateSkillProgress: (skillId: string, progress: number) => void;\n  masteredSkillsCount: number;\n}\n\nconst SkillsContext = createContext<SkillsContextType | undefined>(undefined);\n\nexport const useSkills = () => {\n  const context = useContext(SkillsContext);\n  if (context === undefined) {\n    throw new Error('useSkills must be used within a SkillsProvider');\n  }\n  return context;\n};\n\ninterface SkillsProviderProps {\n  children: ReactNode;\n}\n\nexport const SkillsProvider: React.FC<SkillsProviderProps> = ({ children }) => {\n  const [skills, setSkills] = useState<Skill[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // For testing purposes - if we're in development mode and there's no API response, use mock data\n  const useMockData = process.env.NODE_ENV === 'development';\n\n  useEffect(() => {\n    const fetchSkills = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        \n        // Try to fetch from API first\n        if (!useMockData) {\n          try {\n            const response = await skillsAPI.getSkills();\n            setSkills(response);\n            setLoading(false);\n            return;\n          } catch (err) {\n            console.log('API fetch failed, using mock data instead');\n          }\n        }\n        \n        // If API fetch fails or we're in development, use mock data\n        // This is temporary for development purposes\n        setSkills(mockSkills);\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to load skills data');\n        setLoading(false);\n        console.error('Error fetching skills:', err);\n      }\n    };\n\n    fetchSkills();\n  }, [useMockData]);\n\n  // Derived values\n  const totalSkills = mockSkills.length;\n  const masteredSkillsCount = skills.filter(skill => skill.mastered).length;\n  const categories = [...new Set(skills.map(skill => skill.category))];\n\n  // Function to update a skill's progress\n  const updateSkillProgress = (skillId: string, progress: number) => {\n    setSkills(prevSkills => \n      prevSkills.map(skill => \n        skill.id === skillId \n          ? { \n              ...skill, \n              masteryLevel: progress,\n              mastered: progress >= 80 // Consider mastered if progress is 80% or higher\n            } \n          : skill\n      )\n    );\n  };\n\n  return (\n    <SkillsContext.Provider \n      value={{ \n        skills, \n        loading, \n        error, \n        totalSkills, \n        categories,\n        updateSkillProgress,\n        masteredSkillsCount \n      }}\n    >\n      {children}\n    </SkillsContext.Provider>\n  );\n};\n\n// Mock skills data for development\nconst mockSkills: Skill[] = [\n  {\n    id: \"sec-pun-comma\",\n    name: \"Using Commas Correctly\",\n    category: \"Standard English Conventions\",\n    subcategory: \"Punctuation\",\n    description: \"Using commas to separate items in a list, join independent clauses, and set off introductory elements.\",\n    mastered: true,\n    masteryLevel: 90\n  },\n  {\n    id: \"sec-pun-semi\",\n    name: \"Semicolon Usage\",\n    category: \"Standard English Conventions\",\n    subcategory: \"Punctuation\",\n    description: \"Using semicolons to join related independent clauses and in lists with internal commas.\",\n    mastered: false,\n    masteryLevel: 60\n  },\n  {\n    id: \"sec-gram-agree\",\n    name: \"Subject-Verb Agreement\",\n    category: \"Standard English Conventions\",\n    subcategory: \"Grammar\",\n    description: \"Ensuring subjects and verbs agree in number (singular/plural).\",\n    mastered: true,\n    masteryLevel: 85\n  },\n  {\n    id: \"sec-gram-tense\",\n    name: \"Verb Tense Consistency\",\n    category: \"Standard English Conventions\",\n    subcategory: \"Grammar\",\n    description: \"Maintaining consistent verb tenses within and across sentences.\",\n    mastered: false,\n    masteryLevel: 45\n  },\n  {\n    id: \"sec-sent-run\",\n    name: \"Fixing Run-on Sentences\",\n    category: \"Standard English Conventions\",\n    subcategory: \"Sentence Structure\",\n    description: \"Identifying and correcting run-on sentences and comma splices.\",\n    mastered: false,\n    masteryLevel: 30\n  },\n  {\n    id: \"sec-sent-frag\",\n    name: \"Sentence Fragments\",\n    category: \"Standard English Conventions\",\n    subcategory: \"Sentence Structure\",\n    description: \"Identifying and correcting sentence fragments.\",\n    mastered: true,\n    masteryLevel: 95\n  },\n  {\n    id: \"expr-evid-data\",\n    name: \"Data Interpretation\",\n    category: \"Expression of Ideas\",\n    subcategory: \"Evidence\",\n    description: \"Analyzing and interpreting data presented in tables, graphs, and charts.\",\n    mastered: false,\n    masteryLevel: 70\n  },\n  {\n    id: \"expr-evid-support\",\n    name: \"Evidence-Based Claims\",\n    category: \"Expression of Ideas\",\n    subcategory: \"Evidence\",\n    description: \"Evaluating the relevance and sufficiency of evidence to support claims.\",\n    mastered: false,\n    masteryLevel: 55\n  },\n  {\n    id: \"expr-org-trans\",\n    name: \"Transition Usage\",\n    category: \"Expression of Ideas\",\n    subcategory: \"Organization\",\n    description: \"Using transitions to connect ideas and improve flow between sentences and paragraphs.\",\n    mastered: true,\n    masteryLevel: 85\n  },\n  {\n    id: \"expr-org-intro\",\n    name: \"Introduction and Conclusion\",\n    category: \"Expression of Ideas\",\n    subcategory: \"Organization\",\n    description: \"Crafting effective introductions and conclusions in essays.\",\n    mastered: false,\n    masteryLevel: 65\n  },\n  {\n    id: \"math-alg-linear\",\n    name: \"Linear Equations\",\n    category: \"Math\",\n    subcategory: \"Algebra\",\n    description: \"Solving and graphing linear equations and inequalities.\",\n    mastered: true,\n    masteryLevel: 90\n  },\n  {\n    id: \"math-alg-quad\",\n    name: \"Quadratic Equations\",\n    category: \"Math\",\n    subcategory: \"Algebra\",\n    description: \"Solving and graphing quadratic equations and functions.\",\n    mastered: false,\n    masteryLevel: 40\n  },\n  {\n    id: \"math-alg-exp\",\n    name: \"Exponents and Radicals\",\n    category: \"Math\",\n    subcategory: \"Algebra\",\n    description: \"Working with exponents and radicals in expressions and equations.\",\n    mastered: false,\n    masteryLevel: 25\n  },\n  {\n    id: \"math-geo-tri\",\n    name: \"Triangle Properties\",\n    category: \"Math\",\n    subcategory: \"Geometry\",\n    description: \"Understanding and applying the properties of triangles.\",\n    mastered: true,\n    masteryLevel: 95\n  },\n  {\n    id: \"math-geo-circle\",\n    name: \"Circle Properties\",\n    category: \"Math\",\n    subcategory: \"Geometry\",\n    description: \"Understanding and applying the properties of circles.\",\n    mastered: false,\n    masteryLevel: 60\n  }\n];\n\nexport default SkillsProvider; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}