{"ast":null,"code":"var _jsxFileName = \"/Users/gerardo/Downloads/Bonsaito/src/pages/UploadReport.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { Container, Typography, Button, Box, Paper, Alert } from '@mui/material';\nimport { useDropzone } from 'react-dropzone';\n// import { supabase } from '../supabaseClient'; // Assuming you'll create this\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadReport = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [message, setMessage] = useState(null);\n  const onDrop = useCallback(acceptedFiles => {\n    setFiles(prevFiles => [...prevFiles, ...acceptedFiles.filter(file => file.type === 'application/pdf')]);\n    if (acceptedFiles.some(file => file.type !== 'application/pdf')) {\n      setError('Only PDF files are accepted.');\n    } else {\n      setError(null);\n    }\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'application/pdf': ['.pdf']\n    },\n    multiple: true\n  });\n  const handleUpload = async () => {\n    if (files.length === 0) {\n      setError('Please select at least one PDF file to upload.');\n      return;\n    }\n    setError(null);\n    setMessage(null);\n    setLoading(true);\n\n    // Placeholder for actual Supabase upload and function call\n    // For each file in files:\n    // 1. Upload to Supabase Storage\n    // 2. Call Supabase Edge Function ('process-sat-pdf') with file path/id\n\n    setTimeout(() => {\n      // Simulate API call\n      setMessage(`Successfully uploaded ${files.length} file(s). Processing has started.`);\n      setFiles([]);\n      setLoading(false);\n    }, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      mt: 8\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Upload SAT Practice Report (PDF)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      sx: {\n        mb: 2\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      ...getRootProps(),\n      sx: {\n        p: 4,\n        mb: 3,\n        border: isDragActive ? '2px dashed green' : '2px dashed grey',\n        textAlign: 'center',\n        cursor: 'pointer'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), isDragActive ? /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Drop the PDF files here ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Drag 'n' drop some PDF files here, or click to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Selected files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [file.name, \" - \", (file.size / 1024).toFixed(2), \" KB\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleUpload,\n      variant: \"contained\",\n      color: \"primary\",\n      fullWidth: true,\n      disabled: loading || files.length === 0,\n      sx: {\n        mt: 2\n      },\n      children: loading ? 'Uploading...' : 'Upload and Process Reports'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadReport, \"hTKUxv+gUXoloouLuzlG5U0q6ZE=\", false, function () {\n  return [useDropzone];\n});\n_c = UploadReport;\nexport default UploadReport;\nvar _c;\n$RefreshReg$(_c, \"UploadReport\");","map":{"version":3,"names":["React","useState","useCallback","Container","Typography","Button","Box","Paper","Alert","useDropzone","jsxDEV","_jsxDEV","UploadReport","_s","files","setFiles","loading","setLoading","error","setError","message","setMessage","onDrop","acceptedFiles","prevFiles","filter","file","type","some","getRootProps","getInputProps","isDragActive","accept","multiple","handleUpload","length","setTimeout","maxWidth","sx","mt","children","variant","component","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","severity","mb","p","border","textAlign","cursor","map","index","name","size","toFixed","onClick","color","fullWidth","disabled","_c","$RefreshReg$"],"sources":["/Users/gerardo/Downloads/Bonsaito/src/pages/UploadReport.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Container, Typography, Button, Box, Paper, Alert } from '@mui/material';\nimport { useDropzone } from 'react-dropzone';\n// import { supabase } from '../supabaseClient'; // Assuming you'll create this\n\nconst UploadReport: React.FC = () => {\n  const [files, setFiles] = useState<File[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [message, setMessage] = useState<string | null>(null);\n\n  const onDrop = useCallback((acceptedFiles: File[]) => {\n    setFiles(prevFiles => [...prevFiles, ...acceptedFiles.filter(file => file.type === 'application/pdf')]);\n    if (acceptedFiles.some(file => file.type !== 'application/pdf')) {\n      setError('Only PDF files are accepted.');\n    } else {\n      setError(null);\n    }\n  }, []);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: { 'application/pdf': ['.pdf'] },\n    multiple: true,\n  });\n\n  const handleUpload = async () => {\n    if (files.length === 0) {\n      setError('Please select at least one PDF file to upload.');\n      return;\n    }\n    setError(null);\n    setMessage(null);\n    setLoading(true);\n\n    // Placeholder for actual Supabase upload and function call\n    // For each file in files:\n    // 1. Upload to Supabase Storage\n    // 2. Call Supabase Edge Function ('process-sat-pdf') with file path/id\n\n    setTimeout(() => { // Simulate API call\n      setMessage(`Successfully uploaded ${files.length} file(s). Processing has started.`);\n      setFiles([]);\n      setLoading(false);\n    }, 2000);\n  };\n\n  return (\n    <Container maxWidth=\"md\" sx={{ mt: 8 }}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom align=\"center\">\n        Upload SAT Practice Report (PDF)\n      </Typography>\n      {error && <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>}\n      {message && <Alert severity=\"success\" sx={{ mb: 2 }}>{message}</Alert>}\n\n      <Paper\n        {...getRootProps()}\n        sx={{\n          p: 4,\n          mb: 3,\n          border: isDragActive ? '2px dashed green' : '2px dashed grey',\n          textAlign: 'center',\n          cursor: 'pointer',\n        }}\n      >\n        <input {...getInputProps()} />\n        {isDragActive ? (\n          <Typography>Drop the PDF files here ...</Typography>\n        ) : (\n          <Typography>Drag 'n' drop some PDF files here, or click to select files</Typography>\n        )}\n      </Paper>\n\n      {files.length > 0 && (\n        <Box sx={{ mb: 2 }}>\n          <Typography variant=\"h6\">Selected files:</Typography>\n          <ul>\n            {files.map((file, index) => (\n              <li key={index}>{file.name} - {(file.size / 1024).toFixed(2)} KB</li>\n            ))}\n          </ul>\n        </Box>\n      )}\n\n      <Button\n        onClick={handleUpload}\n        variant=\"contained\"\n        color=\"primary\"\n        fullWidth\n        disabled={loading || files.length === 0}\n        sx={{ mt: 2 }}\n      >\n        {loading ? 'Uploading...' : 'Upload and Process Reports'}\n      </Button>\n    </Container>\n  );\n};\n\nexport default UploadReport; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACpD,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,EAAEC,GAAG,EAAEC,KAAK,EAAEC,KAAK,QAAQ,eAAe;AAChF,SAASC,WAAW,QAAQ,gBAAgB;AAC5C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAgB,IAAI,CAAC;EAE3D,MAAMqB,MAAM,GAAGpB,WAAW,CAAEqB,aAAqB,IAAK;IACpDR,QAAQ,CAACS,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAE,GAAGD,aAAa,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,iBAAiB,CAAC,CAAC,CAAC;IACvG,IAAIJ,aAAa,CAACK,IAAI,CAACF,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,iBAAiB,CAAC,EAAE;MAC/DR,QAAQ,CAAC,8BAA8B,CAAC;IAC1C,CAAC,MAAM;MACLA,QAAQ,CAAC,IAAI,CAAC;IAChB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM;IAAEU,YAAY;IAAEC,aAAa;IAAEC;EAAa,CAAC,GAAGtB,WAAW,CAAC;IAChEa,MAAM;IACNU,MAAM,EAAE;MAAE,iBAAiB,EAAE,CAAC,MAAM;IAAE,CAAC;IACvCC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIpB,KAAK,CAACqB,MAAM,KAAK,CAAC,EAAE;MACtBhB,QAAQ,CAAC,gDAAgD,CAAC;MAC1D;IACF;IACAA,QAAQ,CAAC,IAAI,CAAC;IACdE,UAAU,CAAC,IAAI,CAAC;IAChBJ,UAAU,CAAC,IAAI,CAAC;;IAEhB;IACA;IACA;IACA;;IAEAmB,UAAU,CAAC,MAAM;MAAE;MACjBf,UAAU,CAAC,yBAAyBP,KAAK,CAACqB,MAAM,mCAAmC,CAAC;MACpFpB,QAAQ,CAAC,EAAE,CAAC;MACZE,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,oBACEN,OAAA,CAACR,SAAS;IAACkC,QAAQ,EAAC,IAAI;IAACC,EAAE,EAAE;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,gBACrC7B,OAAA,CAACP,UAAU;MAACqC,OAAO,EAAC,IAAI;MAACC,SAAS,EAAC,IAAI;MAACC,YAAY;MAACC,KAAK,EAAC,QAAQ;MAAAJ,QAAA,EAAC;IAEpE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,EACZ9B,KAAK,iBAAIP,OAAA,CAACH,KAAK;MAACyC,QAAQ,EAAC,OAAO;MAACX,EAAE,EAAE;QAAEY,EAAE,EAAE;MAAE,CAAE;MAAAV,QAAA,EAAEtB;IAAK;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC/D5B,OAAO,iBAAIT,OAAA,CAACH,KAAK;MAACyC,QAAQ,EAAC,SAAS;MAACX,EAAE,EAAE;QAAEY,EAAE,EAAE;MAAE,CAAE;MAAAV,QAAA,EAAEpB;IAAO;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEtErC,OAAA,CAACJ,KAAK;MAAA,GACAsB,YAAY,CAAC,CAAC;MAClBS,EAAE,EAAE;QACFa,CAAC,EAAE,CAAC;QACJD,EAAE,EAAE,CAAC;QACLE,MAAM,EAAErB,YAAY,GAAG,kBAAkB,GAAG,iBAAiB;QAC7DsB,SAAS,EAAE,QAAQ;QACnBC,MAAM,EAAE;MACV,CAAE;MAAAd,QAAA,gBAEF7B,OAAA;QAAA,GAAWmB,aAAa,CAAC;MAAC;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAC7BjB,YAAY,gBACXpB,OAAA,CAACP,UAAU;QAAAoC,QAAA,EAAC;MAA2B;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,gBAEpDrC,OAAA,CAACP,UAAU;QAAAoC,QAAA,EAAC;MAA2D;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CACpF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,EAEPlC,KAAK,CAACqB,MAAM,GAAG,CAAC,iBACfxB,OAAA,CAACL,GAAG;MAACgC,EAAE,EAAE;QAAEY,EAAE,EAAE;MAAE,CAAE;MAAAV,QAAA,gBACjB7B,OAAA,CAACP,UAAU;QAACqC,OAAO,EAAC,IAAI;QAAAD,QAAA,EAAC;MAAe;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACrDrC,OAAA;QAAA6B,QAAA,EACG1B,KAAK,CAACyC,GAAG,CAAC,CAAC7B,IAAI,EAAE8B,KAAK,kBACrB7C,OAAA;UAAA6B,QAAA,GAAiBd,IAAI,CAAC+B,IAAI,EAAC,KAAG,EAAC,CAAC/B,IAAI,CAACgC,IAAI,GAAG,IAAI,EAAEC,OAAO,CAAC,CAAC,CAAC,EAAC,KAAG;QAAA,GAAvDH,KAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAsD,CACrE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN,eAEDrC,OAAA,CAACN,MAAM;MACLuD,OAAO,EAAE1B,YAAa;MACtBO,OAAO,EAAC,WAAW;MACnBoB,KAAK,EAAC,SAAS;MACfC,SAAS;MACTC,QAAQ,EAAE/C,OAAO,IAAIF,KAAK,CAACqB,MAAM,KAAK,CAAE;MACxCG,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAC,QAAA,EAEbxB,OAAO,GAAG,cAAc,GAAG;IAA4B;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEhB,CAAC;AAACnC,EAAA,CA3FID,YAAsB;EAAA,QAe4BH,WAAW;AAAA;AAAAuD,EAAA,GAf7DpD,YAAsB;AA6F5B,eAAeA,YAAY;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}